no comments » metadefect template library (part 0) sunday, may 1st, 2011 to model software behavior at application and system levels, test  generative debugging scenarious and construct software defects using metaprogramming i started working on mdtl (m etadefect template l ibrary).
memory dump it posted in archaeology of computer memory, categorical debugging, computer forensics, computer science, countefactual debugging, crash dump analysis, crash dump de-analysis, crash dump patterns, debugging, debugging methodology, dublin school of security, education and research, escalation engineering, general memory analysis, generative debugging, hermeneutics of memory dumps and traces, history, intelligence analysis patterns, m->analysis, malware analysis, malware patterns, mathematics of debugging, memiotics (memory semiotics), memoretics, memory analysis forensics and intelligence, memory dump analysis and history, memory systems language, memory visualization, metadefect template library, metamalware, new debugging school, paleo-debugging, pattern models, pattern prediction, psychoanalysis of software maintenance and support, psychology, reverse engineering, root cause analysis, science of memory dump analysis, science of software tracing, security, software architecture, software behavior dna, software behavior patterns, software behavioral genome, software chorography, software chorology, software defect construction, software engineering, software narratology, software technical support, software trace analysis, software trace analysis and history, software trace deconstruction, software trace linguistics, software trace reading, software trace visualization, software tracing implementation patterns, software troubleshooting patterns, software victimology, software and history, structural memory analysis and social sciences, structural memory patterns, structural trace patterns, systems thinking, testing, tools, trace analysis patterns, troubleshooting methodology, ui problem analysis patterns, unified debugging patterns, victimware, virtualization, visual dump analysis, workaround patterns | no comments » practical malware analysis book just noticed this book and pre-ordered it: practical malware analysis: the hands-on guide to dissecting malicious software i like the cover picture - i recently bought a dell alienware laptop just to do malware and victimware analysis - dmitry vostokov @ dumpanalysis.org + traceanalysis.org - sponsored link: professional software debugging services /
i installed python 2.6.6 and used debugging tools for windows x64.
the virtual presentation is currently happened every day now at the time of this writing where i create a daily blog post with one or two slides, full original transcript with corrections, and new comments especially for software trace analysis, and other non-windows platforms.
no comments » bugtation no.143 friday, june 3rd, 2011 finally on the parallels between memory dump and software trace analysis and intelligence (memoretics is a discipline that studies computer memory snapshots and their evolution in time): memoretics ”opens a unique window on” software “affairs”.
no comments » memoretics as a science of memory snapshots borrows many ideas from the following disciplines (the list is not exhaustive): it also contributes many ideas back.
debugging, analysis notation, announcements, antipatterns, best practices, cda pattern classification, crash dump analysis, crash dump patterns, debugware patterns, debugging, debugging methodology, debugging trends ,escalation engineering, java debugging, linux crash corner, mac crash corner, malware analysis, malware patterns, memory analysis forensics and intelligence, memory dump analysis services, pattern models, pattern prediction, presentations ,software behavior patterns, software chorology, software engineering, software narratology, software technical support, software trace analysis, software trace reading, software tracing implementation patterns, software troubleshooting patterns, structural memory patterns, structural trace patterns, systems thinking, testing, trace analysis patterns, training and seminars, troubleshooting methodology, unified debugging patterns, webinars, workaround patterns |
i also added this signature to the bottom of every post and page where c-style comments signify defect and malware removal as causes of victimware: /* malware and software defects -> victimware.org */ - dmitry vostokov @ dumpanalysis.org + traceanalysis.org - sponsored link: professional software debugging services /* malware and software defects -> victimware.org */ copyright © 2006 - 2012.
the presentation materials from the webinar (25th of march, 2011) are available for download: http://www.dumpanalysis.com/pdspsi-materials thanks to everyone who registered and attended!
forthcoming parts will introduce template classes and examples.
the template classes can be more complex, of course, utilizing the full power of c++, stl, and existing libraries like boost.
i’m learning now python language to write more interesting scripts for crash dump analysis pattern diagnostics, mining statistics, formatting and visualization.
mdtl also includes classes to model software tracing and this will be used for simultaneous software trace and memory dump analysis case study in the forthcoming presentation.
the template classes can be more complex, of course, utilizing the full power of c++, stl, and existing libraries like boost.
no comments » stoppages 2011 victimware analysis conference thursday, may 5th, 2011 this is a forthcoming virtual event to learn analysis of blockages, delays, obstructions, preventions, and stoppages in victimware suffering from software defects and malware.
the unique and novel feature of this library is the inclusion of dual classes of behaviour such as leak<>, deadlock<>, overflow<>, residue<>, exception<>, contention<>, etc. parameterized by various structural memory classes like process<>, thread<>, heap<>, stack<>, region<>, buffer<>, etc. mdtl also includes classes to model software tracing and this will be used for simultaneous software trace and memory dump analysis case study in the forthcoming presentation.
forthcoming parts will introduce template classes and examples.
posted in books, malware analysis, victimware | 3 comments » daily newspaper debugging today sunday, july 10th, 2011 last month i noticed the appearance of private daily newspapers announced on twitter and finally grasped the idea on how easily this can be done by aggregating various tweets.
no comments » virtual presentation: pattern-driven memory dump analysis wednesday, march 16th, 2011 as a member of citrix community i started series of virtual presentations by publishing old ones with full transcripts and new comments that reflect new research happened and insight gained since the time of the original presentations.
no comments » got an insider information from memory dump analysis services that they are developing a prolog extension for memory dump analysis.
i installed python 2.6.6 and used debugging tools for windows x64.
i also plan to extend this metaprogramming approach in the future to model malware analysis patterns by introducing metamalware template library (mmtl).
pload swi-prolog has been loaded so far so good.
posted in announcements, crash dump analysis, crash dump patterns, malware analysis, malware patterns, memiotics (memory semiotics), memoretics, memory analysis forensics and intelligence, science of memory dump analysis, science of software tracing, software behavior patterns, software narratology, software problem solving, software trace analysis, structural memory patterns, structural trace patterns, trace analysis patterns, victimware |
no comments » memoretics promotes pattern-driven memory dump and software trace analysis which has many uses but not limited to: - dmitry vostokov @ dumpanalysis.org + traceanalysis.org - sponsored link: professional software debugging services /* malware and software defects -> victimware.org */ copyright © 2006 - 2012.
no comments » jobs page on memory dump, software trace, debugging and malware analysis portal now accepts company job ads related to security research, computer forensics, reverse engineering, and malware analysis in addition to debugging, software defect research, crash / core / memory dump and software trace analysis.
indeed, after asking their development team, i got a proof of concept extension dll that works on my computer after installing x64 version ofswi-prolog and copying wdes.dll to pl \ bin installation folder: 0: kd> .load c:\program files\pl\bin\wdes.dll 0: kd> !
posted in announcements, artificial intelligence for debugging, crash analysis report environment (care), crash dump analysis, crash dump patterns, debugging, malware analysis, memory analysis report system, memory dump analysis services, prolog for debugging, windbg scripting extensions | no comments » finally had time today to test python windbg extension.
it also contributes many ideas back.
no comments » the presentation materials from the webinar (25th of march, 2011) are available for download: http://www.dumpanalysis.com/pdspsi-materials thanks to everyone who registered and attended!
no comments » tesing python windbg extension saturday, february 5th, 2011 finally had time today to test python windbg extension.
posted in announcements, citrix, classic presentations, cloud memory dump analysis, crash dump analysis, crash dump patterns, debugging, debugging methodology, escalation engineering, freebsd crash corner, linux crash corner, mac crash corner, malware analysis, memory analysis forensics and intelligence, presentations, security, software technical support, software trace analysis, troubleshooting methodology | no comments » the first webinar to start an in-depth discussion of pattern-driven software troubleshooting, debugging and maintenance: date: 25th of march 2011 time: 18:30 (gmt) 14:30 (est) 11:30 (pst) duration: 60 minutes space is limited.
posted in c and c++, crash dump patterns, debugging, generative debugging, malware analysis, malware patterns, metadefect template library, metamalware, new acronyms, software behavior patterns, software defect construction, structural memory patterns, structural trace patterns, tools, trace analysis patterns, victimware | no comments » expanded job advertisements tuesday, april 26th, 2011 jobs page on memory dump, software trace, debugging and malware analysis portal now accepts company job ads related to security research, computer forensics, reverse engineering, and malware analysis in addition to debugging, software defect research, crash / core / memory dump and software trace analysis.
posted in announcements, debugging, debugging today, malware analysis, security, social media, victimware | no comments » finally on the parallels between memory dump and software trace analysis and intelligence (memoretics is a discipline that studies computer memory snapshots and their evolution in time): memoretics ”opens a unique window on” software “affairs”.
posted in cloud memory dump analysis, computer forensics, crash dump analysis, crash dump patterns, debugware patterns, debugging, debugging trends, escalation engineering, malware analysis, malware patterns, memiotics (memory semiotics), memoretics, memory analysis forensics and intelligence, metadefect template library, metamalware, pattern models, pattern prediction, reverse engineering, root cause analysis, science of memory dump analysis, science of software tracing, security, software behavior dna, software behavior patterns, software behavioral genome, software defect construction, software engineering, software generalist, software narratology, software support patterns, software technical support, software trace analysis, software troubleshooting patterns, structural memory patterns, structural trace patterns, systems thinking, testing ,tools, trace analysis patterns, troubleshooting methodology, ui problem analysis patterns, unified debugging patterns, victimware, windows system administration, workaround patterns |
posted in aesthetics of memory dumps, analysis notation, announcements, antipatterns, archaeology of computer memory, art, assembly language, best practices, books, c and c++, cdf analysis tips and tricks, categorical debugging ,citrix, common mistakes, common questions, complete memory dump analysis, computer forensics, computer science, crash analysis report environment (care), crash dump analysis, crash dump de-analysis, crash dump patterns, crash dumps for dummies, cyber warfare, debugging, debugging bureau, debugging industry, debugging methodology, debugging slang, debugging trends, deep down c++, dr. watson, dublin school of security, education and research, escalation engineering, fun with crash dumps, fun with debugging, fun with software traces, general memory analysis, hermeneutics of memory dumps and traces, images of computer memory, kernel development, malware analysis, mathematics of debugging, memiotics (memory semiotics), memory analysis forensics and intelligence, memory diagrams, memory dump analysis services, memory dumps in myths, memory space art, memory systems language, memory visualization, memory and glitches, metaphysics of memory worldview, multithreading, music for debugging, new acronyms, new debugging school, new words, pattern models, philosophy, physicalist art, publishing, reverse engineering, science of memory dump analysis, science of software tracing, security, software architecture, software behavior patterns, software chorography, software chorology, software defect construction, software engineering, software generalist, software maintenance institute, software narratology, software technical support, software trace analysis, software trace reading, software trace visualization, software tracing for dummies, software troubleshooting patterns, software victimology, structural memory patterns, structural trace patterns, systems thinking, testing, the way of philip marlowe, tools, trace analysis patterns, training and seminars, troubleshooting methodology, victimware, vista, webinars, windbg scripting extensions, windbg scripts, windbg tips and tricks, windbg for gdb users, windows 7, windows server 2008, windows system administration, workaround patterns, x64 windows |
i even wrote a simple prolog program to match product hotfixes and was contemplating writing a windbg extension especially after i learnt thatswi-prolog system i used had an interpreter dll that could be dynamically loaded into a win32 api application.
no comments » as a member of citrix community i started series of virtual presentations by publishing old ones with full transcripts and new comments that reflect new research happened and insight gained since the time of the original presentations.
no comments » just noticed this book and pre-ordered it: practical malware analysis: the hands-on guide to dissecting malicious software i like the cover picture - i recently bought a dell alienware laptop just to do malware and victimware analysis - dmitry vostokov @ dumpanalysis.org + traceanalysis.org - sponsored link: professional software debugging services /
the script i used was from the extension web site blog slightly modified and called processes.py: from pykd import * nt =
memory dump it posted in aesthetics of memory dumps, analysis notation, announcements, antipatterns, archaeology of computer memory, art, assembly language, best practices, books, c and c++, cdf analysis tips and tricks, categorical debugging ,citrix, common mistakes, common questions, complete memory dump analysis, computer forensics, computer science, crash analysis report environment (care), crash dump analysis, crash dump de-analysis, crash dump patterns, crash dumps for dummies, cyber warfare, debugging, debugging bureau, debugging industry, debugging methodology, debugging slang, debugging trends, deep down c++, dr. watson, dublin school of security, education and research, escalation engineering, fun with crash dumps, fun with debugging, fun with software traces, general memory analysis, hermeneutics of memory dumps and traces, images of computer memory, kernel development, malware analysis, mathematics of debugging, memiotics (memory semiotics), memory analysis forensics and intelligence, memory diagrams, memory dump analysis services, memory dumps in myths, memory space art, memory systems language, memory visualization, memory and glitches, metaphysics of memory worldview, multithreading, music for debugging, new acronyms, new debugging school, new words, pattern models, philosophy, physicalist art, publishing, reverse engineering, science of memory dump analysis, science of software tracing, security, software architecture, software behavior patterns, software chorography, software chorology, software defect construction, software engineering, software generalist, software maintenance institute, software narratology, software technical support, software trace analysis, software trace reading, software trace visualization, software tracing for dummies, software troubleshooting patterns, software victimology, structural memory patterns, structural trace patterns, systems thinking, testing, the way of philip marlowe, tools, trace analysis patterns, training and seminars, troubleshooting methodology, victimware, vista, webinars, windbg scripting extensions, windbg scripts, windbg tips and tricks, windbg for gdb users, windows 7, windows server 2008, windows system administration, workaround patterns, x64 windows |
posted in announcements, best practices, computer forensics, computer science, countefactual debugging, crash analysis report environment (care), crash dump analysis, crash dump patterns, debugware patterns, debugging, debugging industry, debugging methodology, debugging trends, dublin school of security, economics, education and research, escalation engineering, first fault problem solving, malware analysis, malware patterns, mathematics of debugging, memiotics (memory semiotics), memoretics, memory analysis forensics and intelligence, memory analysis report system, memory dump analysis services, memory systems language, memory visualization, new debugging school, science of memory dump analysis, science of software tracing, security, software behavior patterns, software defect construction, software engineering, software generalist, software maintenance institute, software narratology, software trace analysis, software trace visualization, software tracing implementation patterns, software troubleshooting patterns, structural memory patterns, structural trace patterns, systems thinking, testing, tool objects, tools, trace analysis patterns, training and seminars, troubleshooting methodology, unified debugging patterns, victimware, visual dump analysis, webinars, workaround patterns |
the first webinar to start an in-depth discussion of pattern-driven software troubleshooting, debugging and maintenance: date: 25th of march 2011 time: 18:30 (gmt) 14:30 (est) 11:30 (pst)
no comments » as a part of my efforts to unify malware and forensic analysis with memory dump and software trace analysis from behavioral and structural patterns perspective i created a domain namevictimware.org that currently points to dump analysis portal.
no comments » this is a forthcoming virtual event to learn analysis of blockages, delays, obstructions, preventions, and stoppages in victimware suffering from software defects and malware.
posted in announcements, computer forensics, cyber warfare, malware analysis, memory dump analysis jobs, reverse engineering, security | no comments » i’m pleased to announce that mdaa, volume 5 is available in pdf format: www.dumpanalysis.org/memory+dump+analysis+anthology+volume+5 it features: - 25 new crash dump analysis patterns - 11 new pattern interaction case studies (including software tracing) - 16 new trace analysis patterns - 7 structural memory patterns - 4 modeling case studies for memory dump analysis patterns - discussion of 3 common analysis mistakes - malware analysis case study - computer independent architecture of crash analysis report service - expanded coverage of software narratology - metaphysical and theological implications of memory dump worldview - more pictures of memory space and physicalist art - classification of memory visualization tools - memory visualization case studies - close reading of the stories of sherlock holmes: dr. watson’s observational patterns - fully cross-referenced with volume 1, volume 2, volume 3, and volume 4 its table of contents is available here: www.dumpanalysis.org/mdaa/mda-anthology-v5-toc.pdf paperback and hardcover versions should be available in a week or two.
no comments » to model software behavior at application and system levels, test generative debugging scenarious and construct software defects using metaprogramming i started working on mdtl (m etadefect template l ibrary).
indeed, after asking their development team, i got a proof of concept extension dll that works on my computer after installing x64 version ofswi-prolog and copying wdes.dll to pl \ bin installation folder: 0: kd> .load c:\program files\pl\bin\wdes.dll 0: kd> !
posted in archaeology of computer memory, categorical debugging, computer forensics, computer science, countefactual debugging, crash dump analysis, crash dump de-analysis, crash dump patterns, debugging, debugging methodology, dublin school of security, education and research, escalation engineering, general memory analysis, generative debugging, hermeneutics of memory dumps and traces, history, intelligence analysis patterns, m->analysis, malware analysis, malware patterns, mathematics of debugging, memiotics (memory semiotics), memoretics, memory analysis forensics and intelligence, memory dump analysis and history, memory systems language, memory visualization, metadefect template library, metamalware, new debugging school, paleo-debugging, pattern models, pattern prediction, psychoanalysis of software maintenance and support, psychology, reverse engineering, root cause analysis, science of memory dump analysis, science of software tracing, security, software architecture, software behavior dna, software behavior patterns, software behavioral genome, software chorography, software chorology, software defect construction, software engineering, software narratology, software technical support, software trace analysis, software trace analysis and history, software trace deconstruction, software trace linguistics, software trace reading, software trace visualization, software tracing implementation patterns, software troubleshooting patterns, software victimology, software and history, structural memory analysis and social sciences, structural memory patterns, structural trace patterns, systems thinking, testing, tools, trace analysis patterns, troubleshooting methodology, ui problem analysis patterns, unified debugging patterns, victimware, virtualization, visual dump analysis, workaround patterns |
posted in announcements, computer forensics, malware analysis, memory analysis forensics and intelligence, victimware | no comments » borrowing routine activity theory (rat) from criminology i would like to introduce the similar approach to abnormal software behavior with patterning activities that adds additional unmotivated offenders to combine malware (software rats) with unintentional ordinary common bugware: the application of rat to software can be metaphorically named as function activity theory (fat).
the virtual presentation is currently happened every day now at the time of this writing where i create a daily blog post with one or two slides, full original transcript with corrections, and new comments especially for software trace analysis, and other non-windows platforms.
the script i used was from the extension web site blog slightly modified and called processes.py: from pykd import * processlist = typedvarlist( nt.psactiveprocesshead, "nt", "_eprocess", "activeprocesslinks" )
i loaded x64 version of pykd.pyd extension and executed the script: 0: kd> !
no comments »« older entries opentask amazon store crash dump analysis is proudly powered by wordpress entries (rss) and comments (rss).
posted in books, malware analysis, victimware | 3 comments » last month i noticed the appearance of private daily newspapers announced on twitter and finally grasped the idea on how easily this can be done by aggregating various tweets.
posted in announcements, best practices, crash dump analysis, crash dump patterns, debugging, debugging methodology, debugging trends, economics, escalation engineering, event tracing for windows (etw), jit crash analysis, jit memory space analysis, malware analysis, malware patterns, memoretics, memory analysis forensics and intelligence, memory dump analysis methodology, memory dump analysis services, new acronyms, new debugging school, pattern prediction, pattern-driven debugging, pattern-driven software support, root cause analysis, science of memory dump analysis, science of software tracing, software behavior dna, software behavior patterns, software behavioral genome, software diagnostics, software engineering, software narratology, software problem description patterns, software problem solving, software support patterns, software technical support, software trace analysis, software troubleshooting patterns, software victimology, software and economics, structural memory patterns, structural trace patterns, systems thinking, testing ,tools, trace analysis patterns, training and seminars, troubleshooting methodology, ui problem analysis patterns, unified debugging patterns, unified software diagnostics, victimware, webinars, workaround patterns |
i also plan to extend this metaprogramming approach in the future to model malware analysis patterns by introducing metamalware template library (mmtl).
debugging, analysis notation, announcements, antipatterns, best practices, cda pattern classification, crash dump analysis, crash dump patterns, debugware patterns, debugging, debugging methodology, debugging trends ,escalation engineering, java debugging, linux crash corner, mac crash corner, malware analysis, malware patterns, memory analysis forensics and intelligence, memory dump analysis services, pattern models, pattern prediction, presentations ,software behavior patterns, software chorology, software engineering, software narratology, software technical support, software trace analysis, software trace reading, software tracing implementation patterns, software troubleshooting patterns, structural memory patterns, structural trace patterns, systems thinking, testing, trace analysis patterns, training and seminars, troubleshooting methodology, unified debugging patterns, webinars, workaround patterns | no comments » windows debugging expert system windbg extension saturday, february 5th, 2011 got an insider information from memory dump analysis services that they are developing a prolog extension for memory dump analysis.
the unique and novel feature of this library is the inclusion of dual classes of behaviour such as leak<>, deadlock<>, overflow<>, residue<>, exception<>, contention<>, etc. parameterized by various structural memory classes like process<>, thread<>, heap<>, stack<>, region<>, buffer<>, etc.
i also started working on volume 6 that should be available in november-december.
memory dump analysis services organizes a free webinar on unified software diagnostics (usd) and the new scalable cost-effective software support model calledpattern-driven software support devised to address various shortcomings in existing tiered software support organizations.
no comments » memory dump analysis anthology, volume 5 is available for download sunday, april 17th, 2011 i’m pleased to announce that mdaa, volume 5 is available in pdf format: www.dumpanalysis.org/memory+dump+analysis+anthology+volume+5 it features: - 25 new crash dump analysis patterns - 11 new pattern interaction case studies (including software tracing) - 16 new trace analysis patterns - 7 structural memory patterns - 4 modeling case studies for memory dump analysis patterns - discussion of 3 common analysis mistakes - malware analysis case study - computer independent architecture of crash analysis report service - expanded coverage of software narratology - metaphysical and theological implications of memory dump worldview - more pictures of memory space and physicalist art - classification of memory visualization tools - memory visualization case studies - close
i also started working on volume 6 that should be available in november-december.