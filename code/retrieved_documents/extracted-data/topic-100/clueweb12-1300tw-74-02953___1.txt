it is already  well on its way toward this goal.
however, as with anything else  generalization usually sacrifices performance.
q&a support: http://stackoverflow.com/questions/tagged/pandas developer mailing list:
see the package overview for more detail about what’s in the library.next | modules | modules | index
additionally, it has the broader goal of becomingthe most powerful and flexible open source data analysis / manipulation tool available in any language.
see the package overview for more detail about what’s in the library.
the data actually  need not be labeled at all to be placed into a pandas data structure the two primary data structures of pandas, series (1-dimensional) and  dataframe (2-dimensional), handle the vast majority of typical use cases in  finance, statistics, social science, and many areas of engineering.
additionally, it has the  broader goal of becomingthe most powerful and flexible open source data  analysis / manipulation tool available in any language.
however, as with anything else generalization usually sacrifices performance.
robust io tools for loading data from flat files (csv and  delimited), excel files, databases, and saving / loading data from the ultrafast hdf5 format time series-specific functionality: date range generation  and frequency conversion, moving window statistics, moving window linear  regressions, date shifting and lagging, etc.
pdf version date: march 16, 2012 version: 0.7.2 binary installers: http://pypi.python.org/pypi/pandas source repository: http://github.com/pydata/pandas issues & ideas:
- arbitrary matrix data (homogeneously typed or heterogeneous) with row and column labels - any other form of observational / statistical data sets.
for data scientists, working with data is typically divided into multiple stages: munging and cleaning data, analyzing / modeling it, then organizing the results of the analysis into a form suitable for plotting or tabular display.
for r users, dataframe provides everything that r’s data.frame provides and much more.
- pandas has been used extensively in production in financial applications.
pandas is built on top ofnumpy and is intended to integrate well within a scientific computing environment with many other 3rd party libraries.
- robust io tools for loading data from flat files (csv and delimited), excel files, databases, and saving / loading data from the ultrafast hdf5 format - time series-specific functionality: date range generation and frequency conversion, moving window statistics, moving window linear regressions, date shifting and lagging, etc.
pandas is well suited for many different kinds of data: - tabular data with heterogeneously-typed columns, as in an sql table or excel spreadsheet - ordered and unordered (not necessarily fixed-frequency) time series data.
pandas is well suited for many different kinds of data: tabular data with heterogeneously-typed columns, as in an sql table or  excel spreadsheet ordered and unordered (not necessarily fixed-frequency) time series data.
some other notes pandas is fast.
here are just a few of the things that pandas does well: - easy handling of missing data (represented as nan) in floating point as well as non-floating point data - size mutability: columns can be inserted and deleted from dataframe and higher dimensional objects - automatic and explicit data alignment: objects can be explicitly aligned to a set of labels, or the user can simply ignore the labels and letseries, dataframe, etc. automatically align the data for you in computations - powerful, flexible group by functionality to perform split-apply-combine operations on data sets, for both aggregating and transforming data - make it easy to convert ragged, differently-indexed data in other python and numpy data structures into dataframe objects - intelligent label-based slicing, fancy indexing , and subsetting of large data sets - intuitive merging and joining data sets - flexible reshaping and pivoting of data sets - hierarchical labeling of axes (possible to have multiple labels per tick)
for data  scientists, working with data is typically divided into multiple stages:  munging and cleaning data, analyzing / modeling it, then organizing the results  of the analysis into a form suitable for plotting or tabular display.
pandas is the ideal tool for all of these tasks.
many of these principles are here to address the shortcomings frequently experienced using other languages / scientific research environments.
if you  haven’t used numpy much or at all, do invest some time inlearning about  numpy first.
pandas will soon become a dependency of statsmodels, making it an  important part of the statistical computing ecosystem in python.
it aims to be the fundamental high-level building block for doing practical, real world data analysis in python.
many of the low-level algorithmic bits have been extensively tweaked incython code.
automatically align the data for you in  computations powerful, flexible group by functionality to perform  split-apply-combine operations on data sets, for both aggregating and  transforming data make it easy to convert ragged, differently-indexed data  in other python and numpy data structures into dataframe objects intelligent label-based slicing, fancy indexing , and subsetting of large data sets intuitive merging and joining data sets flexible reshaping and pivoting of data sets hierarchical labeling of axes (possible to have multiple  labels per tick)
any other form of observational / statistical data sets.
so if you focus on one feature for your application you may be able to create a faster specialized tool.
next | modules | modules | index
- pandas will soon become a dependency of statsmodels, making it an important part of the statistical computing ecosystem in python.
arbitrary matrix data (homogeneously typed or heterogeneous) with row and  column labels
enter search terms or a module, class or function name.
https://github.com/pydata/pandas/issues q&a support: http://stackoverflow.com/questions/tagged/pandas developer mailing list: http://groups.google.com/group/pystatsmodels pandas is a python package providing fast, flexible, and expressive data structures designed to make working with “relational” or “labeled” data both easy and intuitive.
if you haven’t used numpy much or at all, do invest some time inlearning about numpy first.
the data actually need not be labeled at all to be placed into a pandas data structure the two primary data structures of pandas, series (1-dimensional) and dataframe (2-dimensional), handle the vast majority of typical use cases in finance, statistics, social science, and many areas of engineering.
here are just a few of the things that pandas does well: easy handling of missing data (represented as nan) in  floating point as well as non-floating point data size mutability: columns can be inserted and deleted from  dataframe and higher dimensional objects automatic and explicit data alignment: objects can be  explicitly aligned to a set of labels, or the user can simply ignore the labels  and letseries, dataframe, etc.
so if you focus on one feature  for your application you may be able to create a faster specialized tool.
note this documentation assumes general familiarity with numpy.
many of these principles are here to address the shortcomings frequently  experienced using other languages / scientific research environments.
some other notes - pandas is fast.
it is already well on its way toward this goal.
pandas is  the ideal tool for all of these tasks.
many of the low-level algorithmic bits  have been extensively tweaked incython code.
pandas is built on top ofnumpy and is intended to integrate well within a  scientific computing environment with many other 3rd party libraries.
pandas has been used extensively in production in financial applications.
http://groups.google.com/group/pystatsmodels pandas is a python package providing fast, flexible, and  expressive data structures designed to make working with  “relational” or “labeled” data both easy and intuitive.