often-run analyses that you need r for can be wrapped in a class or module to encapsulate your data analysis needs, so you don’t need to clutter your code with it.xlwt allows you to format your spreadsheets on a cell-by-cell basis or by entire rows; it also allows you to add hyperlinks or even formulas.sphinx can automagically slurp in all your docstrings, format them nicely, and render them as html or pdf output.see, it takes some digging around to get what you need, but now since i’ve done the work for you, you can now do linear regressions from python.in order to write data to an excel spreadsheet, first you have to initialize a workbook object and then add a worksheet object to that workbook.my solution for now is to use a localtiddlywiki as the glue for my figures, since i can embed figures in tiddlers (the microcontent entries that are the bread and butter of tiddlywikis), and tag and search those entries.(which of course would result in better-documented code).the sort() method of list objects in python is quite flexible.for example, a list of strings is sorted by the first letter of each string.the goal is to have a simple excel file where the first column is date, and the second column is temperature.you can optionally specify an image name (relative to the output file, see the documentation in the source code) to be embedded.useful tidbits for using open source software in science here’s how to get a nice automatic documentation of your python code usingsphinx.it’s very easy to make subplots that share an x-axis, so that when you pan and zoom on one axis, the others automatically pan and zoom as well.you can use this script from the command line using options, or import it into another script.rather than recap it all here, i encourage you to grab a copy of the source code, in which you can find the examples directory.