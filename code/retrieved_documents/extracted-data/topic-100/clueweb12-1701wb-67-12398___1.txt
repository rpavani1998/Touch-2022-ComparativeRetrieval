each association key is then assigned a list of datasets from the dataset dictionary.
exhaustive python documentation,  tutorials, jpython, and third party modules can also be found on the python  homepage.
notice that we now  load both the pfitsio and the numerical modules and how, once an image is  stored in a two dimensional array, we can compute statistics on any part of  this array.
starting from the set of dictionaries we have built in our first example, we now proceed to read in each individual fits file (fig.2).
d. m. mehringer, r. l. plante, & d. a. roberts (san francisco: asp), 479 python in astronomy norbert pirzkal, richard n. hook st-ecf, karl-schwarschild str.2, garching bei munchen d-85748, germany abstract:
idl 1 - idl is the trademark of research systems, inc. up: software systems and tools previous: the faint object spectrograph post-costar spectropolarimetry correction table of contents - subject index - author index - search - ps reprint - pdf reprint adass@ncsa.uiuc.edu
references barrett, p. e. & bridgman, w. t. 1999, this volume, 483 lutz, m. 1996, programming python, (sebastopol: o'reilly) footnotes ...
invented in 1990 by guido van rossum, it shares many of its features with other modern languages such as tcl, perl and java.
python is a powerful, object-oriented scripting language  that is easy to extend, free, and available for most computer platforms.
reading a list from a file and building dictionaries in this  example (fig.1), we assume that we have a file called assoc.clear.
hence, dataset['o46p47010']['xoff'] would return the value of 0.0.
simple examples of how python can be used to explore and manipulate real astronomical data are given.
o46p3y010 -0.07 -0.02 271.37 -19.90 0 1 300.00 ... ...
simple examples of how python can be used to explore and  manipulate real astronomical data are given.
availability and references python runs on virtually all computer platforms, including the java  virtual machine (jpython).
o46p3y010 -0.07 -0.02 271.37 -19.90 0
python, together with its numerical module, and with the pfitsio module that is being developed by one of the authors, provides an attractive alternative to other languages such as perl, idl, and the iraf cl, which are already widely used by the community.
d. m.  mehringer, r. l. plante, & d. a. roberts (san francisco: asp), 479 python in astronomy norbert pirzkal, richard n. hook st-ecf, karl-schwarschild str.2, garching bei munchen d-85748, germany abstract: we report on the use of python to perform basic  astronomical tasks.
one can download the compiled python binaries or the  python source code from thepython homepage.
reading a list from a file and building dictionaries in this example (fig.1), we assume that we have a file called assoc.clear.
python ships with a large number of modules (see the python standard documentation), and can be easily extended in c. with modules such as pfitsio or pyfits and the numerical modules, astronomical images and tables can be easily accessed and manipulated as numerical arrays.
this file contains a list of datasets from the hst stis camera which have been previously determined to be combinable into longer integration time images that we wish to refer to as ``associations''.
notice that we now load both the pfitsio and the numerical modules and how, once an image is stored in a two dimensional array, we can compute statistics on any part of this array.
one can download the compiled python binaries or the python source code from thepython homepage.
next: pyfits, a fits module for python up: software systems and tools previous: the faint  object spectrograph post-costar spectropolarimetry correction table of contents - subject index - author index - search - ps reprint - pdf  reprint pirzkal, n. & hook, r. n. 1999, in asp conf.
python, together with its numerical module, and with the pfitsio module that is  being developed by one of the authors, provides an attractive alternative to  other languages such as perl, idl, and the iraf cl, which are already widely  used by the community.
figure 1: dictionary and list creation and manipulation, (see text for more description).
another dictionary  is then created and uses the names of the associations (column 1 in the ascii  file) as a key.
invented in 1990 by guido van rossum, it  shares many of its features with other modern languages such as tcl, perl and  java.
our second example also shows the use of the powerful numerical  module's where() command which the idl1 user will recognize.
hence,  dataset['o46p47010']['xoff'] would return the value of 0.0.
this file contains a list of datasets from the hst stis camera which have been  previously determined to be combinable into longer integration time images that  we wish to refer to as ``associations''.
each entry of the dataset dictionary is in fact itself a dictionary which uses the original ascii file column name as keys to hold the ascii file original data.
we report on the use of python to perform basic astronomical tasks.
each entry of the dataset dictionary  is in fact itself a dictionary which uses the original ascii file column name  as keys to hold the ascii file original data.
starting from the set of dictionaries we have built in our first example,  we now proceed to read in each individual fits file (fig.2).
idl 1 idl is the trademark of research systems, inc. ©  copyright 1999astronomical society of the pacific, 390 ashton avenue, san  francisco, california 94112, usa next: pyfits, a fits module  for python up: software systems and tools previous: the faint object spectrograph post-costar spectropolarimetry  correction table of contents - subject index - author index -  search - ps reprint - pdf reprint adass@ncsa.uiuc.edu
ser., vol. 172, astronomical data analysis software and systems viii, eds.
figure 1: dictionary and list creation and  manipulation, (see text for more description).
the file is as follow: id sub dataset xoff yoff ra dec r d exp o46p3x010 1 o46p3x010 0.00 0.00  271.37 -19.90 0 1 300.00 ...
we would like to be able to easily query all the members of a given association (``id'' column), and to be able to access and potentially modify the information of the individual datasets that make up an association.
some of the attractive features of python include the use of transparent byte-code compilation for speed, automatic memory management and garbage collection, and a very powerful object oriented and modular design.
information concerning the pfitsio and pyfits modules should be directed to the authors of this paper, and paul barrett (see barrett & bridgman 1999), respectively.
we have found that python satisfies the need for a high level programming language which fills the gap between regular shell scripting languages and compiled languages such as c. for tasks that are too complicated and too large to implement with regular shell scripts, but for which the extra overhead of coding everything in c is not warranted, python offers a quick and elegant option.
references barrett, p. e. & bridgman, w. t. 1999, this volume, 483 lutz, m. 1996, programming python, (sebastopol: o'reilly) footnotes © copyright 1999astronomical society of the pacific, 390 ashton avenue, san francisco, california 94112, usa next: pyfits, a fits module for python - ...
we therefore build a dictionary of datasets where each dataset's  name serves as a key in this dictionary.
figure 2: array and fits file access using python, (see text for more description).
we present small python  examples as illustrations of the language's power and encourage the reader to  learn more about python from the book by lutz (1996).
ser.,  vol. 172, astronomical data analysis software and systems viii, eds.
once the dictionaries are set up, which only takes a  few lines (grey overlay region), one has the ability to manipulate and  ``query'' those dictionaries in a very high level, natural, way.
the file is as follow: id sub dataset xoff yoff ra dec r d exp o46p3x010 1 o46p3x010 0.00 0.00 271.37 -19.90 0 1 300.00 ...
some of the attractive features of python  include the use of transparent byte-code compilation for speed, automatic  memory management and garbage collection, and a very powerful object oriented  and modular design.
each association key is then assigned a list of datasets from  the dataset dictionary.
python has a simple, easy to learn syntax which emphasizes readability,  and it draws many of its features from other popular languages such as c, c++,  modula-3, abd, and others.
python is an interpreted, interactive,  object-oriented programming language.
availability and references python runs on virtually all computer platforms, including the java virtual machine (jpython).
our second example also shows the use of the powerful numerical module's where() command which the idl1 user will recognize.
python has a simple, easy to learn syntax which emphasizes readability, and it draws many of its features from other popular languages such as c, c++, modula-3, abd, and others.
python ships with a large number of modules (see the python  standard documentation), and can be easily extended in c. with modules such as  pfitsio or pyfits and the numerical modules, astronomical images and tables can  be easily accessed and manipulated as numerical arrays.
another dictionary is then created and uses the names of the associations (column 1 in the ascii file) as a key.
reading fits data into arrays and manipulating those arrays
exhaustive python documentation, tutorials, jpython, and third party modules can also be found on the python homepage.
next: pyfits, a fits module for python up: software systems and tools previous: the faint object spectrograph post-costar spectropolarimetry correction table of contents - subject index - author index - search - ps reprint - pdf reprint pirzkal, n. & hook, r. n. 1999, in asp conf.
python is a powerful, object-oriented scripting language that is easy to extend, free, and available for most computer platforms.
we would like to be able to easily query all the members  of a given association (``id'' column), and to be able to access and  potentially modify the information of the individual datasets that make up an  association.
information concerning the pfitsio and pyfits modules should be  directed to the authors of this paper, and paul barrett (see barrett &  bridgman 1999), respectively.
figure 2: array and fits file access using python,  (see text for more description).
we therefore build a dictionary of datasets where each dataset's name serves as a key in this dictionary.
we present small python examples as illustrations of the language's power and encourage the reader to learn more about python from the book by lutz (1996).
once the dictionaries are set up, which only takes a few lines (grey overlay region), one has the ability to manipulate and ``query'' those dictionaries in a very high level, natural, way.
we have found that python satisfies the need for a  high level programming language which fills the gap between regular shell  scripting languages and compiled languages such as c. for tasks that are too  complicated and too large to implement with regular shell scripts, but for  which the extra overhead of coding everything in c is not warranted, python  offers a quick and elegant option.
python is an interpreted, interactive, object-oriented programming language.