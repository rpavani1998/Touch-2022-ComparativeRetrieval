there are 3 possible sub-projects here: additional details on the third sub-project are: we have an older version of a plotting capability that suffers from terrible performance (in parsing the log and organizing its data) and bugs, and which produces many informative but rather confusing logs that are hard to select, control, and interpret.
nimbus uses ssh to communicate with the vmm in the nimbus cluster.
a  common use is to set up a virtual compute cluster (pbs for example) composed of  vms.
globus online programming language/s: c level of expertise: advanced description: the goal of this project is to design an automatic  tuning framework within globus online.
the second half of the project will be security work and polishing.
python level of expertise: intermediate description: globus demogrid is a tool that will build an instructional grid environment that you can then deploy, using virtual machines, on a cloud (such as amazon ec2) or on your own physical resources.
this is an ideal project for junior programmers who seek an introduction to parallel computing and to scientific applications.
the nimbus context broker provides a facility for coordinating the launch of many vms and securely exchanging information.
but the  underlying array mechanism is in fact implemented as a hash table.
the result will be a pleasing and highly productive style of specifying map-reduce problems in a simple functional notation.
mentor: jia zhang programming language/s: java level of expertise: tbd description: the internet, the grid and the newly emerging cloud environment have provided a community platform for scientists to share various kinds of resources (e.g., experimental data and analytical applications) in the form of services.
user and file accounting, and process management will need to be  written using native windows apis.
python level of expertise: advanced description: globus online uses the cassandra[1] datastore for persisting it's information.
nimbus mentor: dave labissoniere programming language/s: python and java level of expertise: beginner description: currently the elastic processing unit is using amqp to communicate messages between components.
however, they could end up being the seed from  which a really cool project springs.
the service would allow a user to request access to a nimbus cloud via a  rest api.
the task is to add support to for fetching the console output of a booted vm nimbus.
thus, correctly  predicting the value of this parameter is often a challenge and depends on a  variety of factors such bandwidth, rtt, packet loss rate, etc.
this enables complex directory trees of data to be processed using simple scripts.
the following are "blue sky" project ideas.
mentor: michael wilde level: advanced globus project:
this project will focus on creating a map-reduce  library tailored for swift execution.
no "blue sky" ideas yet.
mentor: michael wilde measuring and enhancing multi-site parallel scheduling in swift globus project:
the majority of the server code is already  portable.
this page lists our proposed gsoc project ideas.
nimbus mentor: john bresnahan programming language/s: python and java level of expertise: advanced description: when a system is booted, be it a vm or a real machine, is very useful to read both for diagnostic information and debugging.
the project will involve: normalizing the swift log records (log4j) from its java execution engine  so that the events of interest are formatted in a unified fashion adding more log records and information fields adding easier control by the user to enable logging by function and/or  logging level rather than by log4j class names.
this should  be done natively (e.g. not cygwin).
| requirements= * must already be familiar with the  globus toolkit.
requirements: programming language/s: python and java level of expertise: intermediate description:
swift description: swift provides a uniform, general, and flexible model for expressing the inputs and outputs of application programs, including how large and possible complex structured datasets are passed to the application.
nimbus mentor: john bresnahan programming language/s: python and java level of expertise: advanced description:
gridftp is the primary protocol used within globus online for performing bulk data transfers.
this project will explore the ability to apply the swift implicitly-prallel data flow programming model to calling in-memory functions such as long-running math library routines, etc.
octave/matlab would be of interest.
this will be a good project for students with a strong interest in  distributed computing, performance analysis and modeling, and graphical display  of information.
this allows us to use graph semantics for modeling our data.
when gfork starts, it runs a user-defined  master program and opens up bi-directional pipes to it.
this would be a good project to learn about amqp and scalability of services.
when  it is killed the record of that instance is removed.
there are also   additional pages where you may be able to find inspiration for interesting  summer projects.
we are interested in providing  a solution that will allow an easier process for automatically creating users.
advanced description: the goal of this project is to design an automatic tuning framework within globus online.
this will include credential management and file transfer capabilities.
michael wilde adding associative array operators to swift globus project: swift description: swift provides a nicely powerful dynamic array  construct, but at the moment these arrays permit only integer indexing.
the user will  receive an email at the given address indicating if the request was accepted  and if so, a url like the one provided in current web app.
analysis of distributed and parallel systems.
this  project will help to build a starter kit for such users that pre-configures  swift for their use on these large-scale grid infrastructures, and which  automates and hides many of the complexities in executing at such as large and  highly distributed scale.
more  information about this can be found here: http://docs.amazonwebservices.com/amazons3/latest/dev/index.html?uploadobjusingmpu.html .
it also is too precise about its requirements for success: for example if launching a cluster with 1000 workers and only 999 check in, currently this means failure for the whole run.
the majority of the server code is already portable.
* measure new  awesomeness of globus.
globus fork (gfork) - a user-configurable super-server daemon very similar to xinetd that enables sharing of state across client connections for a service, user-defined master programs that co-ordinate resource sharing.
our students in 2008 and 2009 developed  some really cool projects, and some of them might be able to use an extra  summer of work to add new features, take the project in a new direction, etc.
initially we'd want to develop constructs which can replicate the present  iteration constructs, but more nicely expressed - and then attempt to see how  easy they are for people to use compared to the existing ones.
the user will receive an email at the given address indicating if the request was accepted and if so, a url like the one provided in current web app.
this enables complex  directory trees of data to be processed using simple scripts.
creating convenient r datasets and plot routines to enable the user to  explore performance data ("slice and dice") and compare and plot one  or more swift runs creating documentation to enable the user to generate and interpret  activity plots and use them to understand and tune the performance of their  application scripts and identify performance problems and bottlenecks.
in this project, we propose that you  make globus more awesome.
at the same time, the ability to do this make such an approach an attractive vehicle by which new and prospective swift users can evaluate and learn the system.
when a machine is launched its existence is recorded in a database associated with the frontend service.
you should specifyjust one of the following three words.
often times vm images have 'blank space' in them.
mentor: michael wilde familiarity with ssh and scp knowledge of linux systems and shell scripting familiarity with python or similar scripting languages ability to experiment with simple scientific applications and graphical  tools enhancing a gadget-based portal interface for the execution of  scientific workflows globus project:
this is a fascinating project if you enjoy (or want to learn) performance analysis of distributed and parallel systems.
while gridftp employs models to predict the thread level, it also discourages changing the thread level arbitrarily as it hurts overall performance.
the current jglobus client for gridftp is used  extensively to connect to gridftp servers from java.
the portal provides the means to integrate distributed data management, workflow launch and status monitoring, result tracking, analysis and visualization.
in this project, the student will write chef recipes that will allow demogrid to automatically deploy new grid software.
this can cause some scalability issues in the case of highly loaded nimbus clusters.
this project will involve working on a set of innovative enhancements to the portal in the areas of tagging and metadata management, workflow status display, interactive distributed debugging, and visualization and analysis of scientific results.
the master program runs for the lifetime of the gfork daemon.
when a machine is launched its  existence is recorded in a database associated with the frontend service.
demogrid currently supports a limited number of grid technologies (see  "supported grid technologies" in http://confluence.globus.org/display/demogrid/introduction+to+demogrid).
it will enable key-value-style problems  to be expressed in swift, as well as efficiently applying map-reduce to  problems where keys and values can be implicitly derived from the data types  being processed.
i have a fairly good idea what this should look like, so there is not a huge amount of design work involved.
this project will involve building such initial libraries for string and text manipulation, network access, file data management, and elementary mathematical functions.
mentor: mike wilde globus project:
swift description: in this project we propose to enhance both the display  and control of running parallel workflows, adding capabilities to probe down to  individual remote worker nodes to gain detailed insight on application  performance, and generate an informative set of dynamic plots by which users  can fully understand all aspects of their script's and application's behavior  and performance
the framework will consist of a)  predicting the value of this parameter under given number of threads, (b)  estimating overheads within gridftp in changing its current number of streams,  and (c) adaptively deciding whether to change its current stream level.
this project is meant for students who are already familiar with a  particular grid technology, and would like to add support for it in demogrid.
this project will extend that model to applications expressed as rest, json, and soap services, so that standard linux/posix applications can be freely intermixed with service-based applications in swift scripts to compose powerful scientific workflows.
this project will build on one of the many systems that attempt to automate this process, and will refine, improve and test this mechanism, focusing on reliability and usability.
online instead of using gridftp directly.
when the user visits that web page they  can download their credentials and will then have access to the nimbus cloud.
you may find inspiration for other cool ideas in the following places: our gsoc mentors (and their areas of expertise) are:
if you have an idea for a project, but none of the above mentors seem like a good match, please contactborja sotomayor (our gsoc org admin) and he will try to match you to an adequate mentor.
the deliverables for this project would be: tbd references: wei tan, jia zhang, and ian foster, "network analysis of scientific  workflows: a gateway to reuse", ieee computer, sep., 2010, 43: pp.
they are not as  detailed as the above project proposals, and some of them might not even be  feasible during a single summer.
swift description: the power of swift parallel distributed scripting model could be more widely leveraged if it its execution semantics could be expressed in other popular scripting languages.
it will enable key-value-style problems to be expressed in swift, as well as efficiently applying map-reduce to problems where keys and values can be implicitly derived from the data types being processed.
nimbus mentor: patrick armstrong programming language/s: python and java level of expertise: beginner description: provide api and command line tools for administrator operations on nimbus clouds.
this algorithm needs to be extensively tested, measured, and enhanced,  and its performance and capabilities should be documented in academic papers.
globus toolkit mentor: mike link programming language/s: c level of expertise: intermediate description:
to facilitate using cassandra, we developed a graph database called agamemnon[2], which runs on top of cassandra.
the swift parallel scripting language ( www.ci.uchicago.edu/swift ) enables you to run many (tens of thousands and more) application programs in parallel on clusters, grids, clouds, and supercomputers, as well on on multicore workstations.
beginner: you don't assume any prerequisite knowledge about globus  or grid computing.
swift description: add the ability to specify things like mpi width, ram and walltime needs, disk space needs, etc. calculated by swift expressions from variable info available in the script.
the driving factor of the research is our hypothesis that there is much useful information implicit in the past use of scientific services.
as an extension, this project could explore mentor:
for calling c and fortran, we expect  to model this capability on mpi data-passing conventions.
in order to increase the scalability of nimbus  deployments the development project would involve replacement of ssh messaging  withamqp, probably using rabbitmq.
this project will  entail selecting one language to experiment with (python is preferred),  implementing an experimental library interface to swift, and evaluating its  usability, expressiveness, and performance on simple test cases and on a set of  scientific applications.
you could support mapreduce style applications without explicit support from swift.
requirements: globus project: globus online mentor: tanu malik programming language/s: c level of expertise:
the task is to add support to for fetching the  console output of a booted vm nimbus.
this project will require the  following steps: identify the best graph visualization algorithms for partitioning the data implement the partitioner fully test and document the code.
how to effectively and efficiently help  scientists find suitable services and help them construct new workflows  (experimental process) with existing services remains a big challenge.
we would like to separate this out into a  template with the initial goal of having support for virtio, but also for a  more configurable service for cloud experimentation.
toolset 4.15 enabling large-scale distributed application build and deployment  under swift 4.16 making the swift parallel scripting system easy to install, evaluate  and learn on readily available computing resources 4.17 enhancing swift accessibility and usability on the open science grid  and teragrid 4.18 enhancing a gadget-based portal interface for the execution of  scientific workflows 4.19 enhancing the swift parallel scripting library 5 scientific services 5.1 semantics-oriented behavior-empowered scientific service search engine 6 "blue sky" ideas 7 other sources of project ideas 8 mentors 9.1 increase awesomeness of globus globus toolkit projects programming language/s: c level of expertise: intermediate description:
experiments are expected to be  carried out to test the new upper bound on scalability of swift, using this  partitioned approach, and to test throughput of the swift system to ensure  comparable performance.
globus implementation of gridftp is widely  used for data movement in the grid community.
requirements: a basic understanding of ftp c programming programming language/s: java level of expertise: advanced description:
t. oinn, m. greenwood, m. addis, m.n. alpdemir, j. ferris, k. glover, c.  goble, a. goderis, d. hull, d. marvin, p. li, p. lord, m.r. pocock, m. senger,  r. stevens, a. wipat, and c. wroe, "taverna: lessons in creating a  workflow environment for the life sciences", concurrency and computation:  practice & experience, 2006, 18(10): pp.
once the account is approved (either automatically or via the sysadmin) the user will be sent email with a link to a web page.
requirements: globus project:
swift description: swift provides a uniform, general, and flexible model  for expressing the inputs and outputs of application programs, including how  large and possible complex structured datasets are passed to the application.
for example,  if you wanted to do sort via mapreduce, all you need is a map to break up a  file into buckets by key, and a merge that needs to take some buckets and put  them back into a single file.
mentor: michael wilde level: intermediate requirements: globus project:
requirements: experience with django a plus multipart uploads in cumulus (s3) globus project:
but the underlying array mechanism is in fact implemented as a hash table.
we are interested in providing a solution that will allow an easier process for automatically creating users.
requirements: understanding of networks and data transfer lantorrent compression programming language/s: python and java level of expertise: intermediate description: lantorrent is a multicast network protocol in the  nimbus toolkit that is used to propagate vm images to backend nodes for  execution.
the deliverables for this project would be: requirements: globus project:
this project will deal with many file naming conventions and data access services, and will provide mechanisms to maintain and access large-scale collaboration-wide data catalogs.
2009 projects and 2008 projects.
please  use it when adding new ideas: {{gsocproject| idea_title=example idea: increase awesomeness of globus |  globus_project=globus toolkit at-large |  globus_project_url=http://www.globus.org/ | mentor_name=
must be an awesome student.
we already know globus is awesome, but  there's no upper bound on awesomeness.
this project entails creating an attractive swift "starter kit" with tested and documented demos, on a set of interesting but easy-to-install application problems.
the mentor is in charge of supervising students, tracking their  progress, answering questions about the project, etc.
please use it when adding new ideas: {{gsocproject| idea_title=example idea: increase awesomeness of globus | globus_project=
mentor: michael wilde software building skills familiarity with make and configure making the swift parallel scripting system easy to install, evaluate and  learn on readily available computing resources globus project:
a  user can hold a connection open indefinitely and move an unlimited number of  files (barring disk space or system quota constraints).
http://www.nimbusproject.org/docs/2.7/faq.html#cumulus.
the project will require the  following steps: wireframe the application build the application according to the specifications document the usage of the application.
requirements: familiar with chef (http://www.opscode.com/chef/) demogrid is written in python and, although most of the work will involve  writing chef recipes and various scripts, some familiarity with python will  come in handy.
requirements: experience with twisted a plus experience with rest/http in python a plus virtio support in generated libvirt xml globus project:
because of this  they are sparsely populated files and the compress very well.
the project will require the following steps: requirements: globus project: globus online mentor: bryce allen programming language/s: java level of expertise: advanced description: we propose a project to develop an android application which will give access to the core services provided by globusonline.
we currently have a web application that allows for delivery of credentials to users.
michael wilde scripting in shell and python or similar languages elementary java programming skills semantics-oriented behavior-empowered scientific service search engine globus project: [ none.]
advanced: you assume the student is already familiar with globus.
this should include an installer as well as service management support.
if you would like to be  the mentor for this project, please include your name and e-mail address here.
swift description: swift provides a nicely powerful dynamic array construct, but at the moment these arrays permit only integer indexing.
swift description: preliminary work to date indicates that swift runs well on cloud and volunteer computing resources.
this project will build on  one of the many systems that attempt to automate this process, and will refine,  improve and test this mechanism, focusing on reliability and usability.
contents 1.1 connection management in gridftp 1.2 gridftp server windows port 1.3 demogrid web console 1.4 add more chef recipes to demogrid 2 globus online projects 2.1 adaptive tuning in globus online 2.2 jglobus gridftp/globusonline bridge 2.3 graph based cassandra partitioner 2.4 ios application for globus online 2.5 android app for globus online 3 nimbus projects 3.2 multipart uploads in cumulus (s3) 3.3 lantorrent compression 3.6 virtio support in generated libvirt xml
* measure new awesomeness of globus.
there are also additional pages where you may be able to find inspiration for interesting summer projects.
this project will extend that model to applications expressed as rest, json,  and soap services, so that standard linux/posix applications can be freely  intermixed with service-based applications in swift scripts to compose powerful  scientific workflows.
when we find that a vm no longer exists this  new functionality will remove it from the frontend's database.
when it is killed the record of that instance is removed.
this project will focus on creating a map-reduce library tailored for swift execution.
if one of our past projects looks interesting, you can try contacting the  student and his/her mentor to see if they'd be willing to mentor a similar  project.
this project aims to answer two fundamental questions: what implicit information may be extracted to help scientists better understand existing artifacts?
swift description: the power of swift parallel distributed scripting model  could be more widely leveraged if it its execution semantics could be expressed  in other popular scripting languages.
the goal of this project is to develop a gfork plugin for connection management to the gridftp server.
the current interface is console-based, but a web-based interface would make  demogrid even easier to use by beginners.
you do not need to completely specify the  project, just give prospective students a good idea of what work is required  (is it mainly development?
this project will involve working on a  set of innovative enhancements to the portal in the areas of tagging and  metadata management, workflow status display, interactive distributed  debugging, and visualization and analysis of scientific results.
three, add support for sparse files so that the compression is not needed.
globus toolkit at-large | globus_project_url=http://www.globus.org/ |
requirements: must already be familiar with the globus toolkit.
you may find  inspiration for other cool ideas in the following places: our mentors.
to access the server, a user must be authenticated, have appropriate read and write permissions, and respect the total connection limit, but beyond that, there is no management or control.
hence it lacks the ability to automatically sort, partition, merge, and reduce results.
the current interface is console-based, but a web-based interface would make demogrid even easier to use by beginners.
requirements: demogrid is written in python, although the web console can be written in  your language of choice.
feel free to contact any mentor whose field of interest  matches your own.
swift description: as a relatively young language, swift does not yet have a rich set of library functions to perform many of the common tasks needed in typical scientific scripts.
mentor: mike wilde implementing efficient map-reduce models using the swift parallel  scripting language globus project:
while it works with kvm it requires some modifications and alternative set of  instructions.
requirements: programming language/s: python and java level of expertise:
the globus online file transfer (rest) api documentation is here:  http://transfer.api.globusonline.org
the deliverables for this project would be: an implementation of persistence to a database for the state of the  context broker a design and implementation of a scheme allowing "partial  success" of launches, either by some timeout or a manual operation saying  to proceed with contextualization requirements: develop data management provider (driver) for globus online globus project: swift programming language/s: java level of expertise: intermediate description: enable swift to move large datasets using globus online  by developing a "data provider" interface for the java "cog  kit" layer that swift uses to move data and execute remote tasks.
in this project, we propose to  experiment with and adapt swift's resource management and scheduling mechanisms  to make it easy to run swift scripts in amazon ec2, doe magellan, and boinc  volunteer clouds, with both automated and user-driven control over resource  levels, types, and costs.
we would like to separate this out into a template with the initial goal of having support for virtio, but also for a more configurable service for cloud experimentation.
swift description: swift's "leaf" or lowet-level functions are  current application programs wrapped into a swift function interface.
in this project we will add functionality to nimbus to periodically check  the backend nodes for running vms.
the task is to provide a clean api and implementation which takes requests and makes necessary calls in the service, then provide polished and well-documented command line tools which communicate with these apis.
r is pretty well underway.
the current application does not solve the entirety of the problem.
should already be familiar with building web applications, ajax, and all  that jazz.
references: [1] w. liu, b. tieman, r. kettimuthu, i. foster, "a data transfer  framework for large-scale science experiments", in international workshop  on data intensive distributed computing (didc 2010), 2010.
3.7 make kvm first class functionality 3.8 improved admin tools 3.10 replace ssh communication to cluster vmms with amqp 3.11 context broker improvements 4.1 develop data management provider (driver) for globus online 4.2 integrate swift into globus online to provide an application execution  and scripting service 4.3 swiftscript functional iteration constructs 4.4 enhance swift app() functions with run-time specifications 4.5 implementing efficient map-reduce models using the swift parallel  scripting language 4.6 integrating swift parallel scripting semantics into python, r, octave,  and matlab 4.7 integrating service access capabilities in the swift parallel  scripting language 4.8 integrating in-ram function calls and data passing 4.9 adding associative array operators to swift 4.10 measuring and enhancing multi-site parallel scheduling in swift 4.11 enabling distributed, interactive debugging and status  monitoring/reporting of swift parallel and distributed scripts 4.12 multi-level workflow programming models 4.13 flexible cloud and volunteer resource management for the swift  parallel scripting language 4.14 reworking the swift parallel scripting dataset mapper model and
the  project will require an intimate knowledge of gridftp, and understanding of  throughput prediction models as described in the following papers [1,2,3].
port the gridftp server code to windows 7.
as the features supported by globus online expand, many jglobus users may want to connect to globus online instead of using gridftp directly.
in order to increase the scalability of nimbus deployments the development project would involve replacement of ssh messaging withamqp, probably using rabbitmq.
(include the name and  its url) mentor_name and mentor_email: each project must have a  mentor.
advanced description: to support users who have mobile devices produced by  apple, we propose a project to develop an iphone/ipad application which will  give access to the core services provided by globusonline.
and how  can such implicit information be used to facilitate service-based artifact  reuse?
user and file accounting, and process management will need to be written using native windows apis.
the swift parallel scripting system can be an ideal  tool to enable new users of teragrid and opensciencegrid to rapidly achieve the  ability to transition and scale up from a local sever or cluster environment to  a more powerful grid environment with far greater computing resources.
if there is time in the project we will also modify the cloud client to take the approval url (described above) as a parameter and use it to automatically download the needed credentials from the rest service and install them into the users cloud-client installation.
when gfork starts, it runs a user-defined master program and opens up bi-directional pipes to it.
a web page, or  preferably, a web api will be created that allows a user to request an account  given their email address (and some other set of information).
as a proof of concept, this project will build a prototyping search engine, as a plugin to taverna, a known life science scientific workflow management workbench.
we want to change this to make the idea list more navigable, so please make sure you use the above template so it will be easier to switch to a new format.
the web page is only available for a short period of time.
the gridftp protocol is a backward compatible extension  of the legacy rfc959 ftp protocol.
the project is to convert this messaging to rest or http rpc based mechanisms and to ensure that there is a retry mechanism in place that fits with the reliability design.
the deliverables for this project would be: a messaging framework using amqp that the nimbus iaas service can use.
before submitting an application to gsoc with globus as your mentoring  organization, make sure you read ourgsoc faq, which provides some pointers on  how to write a successful application.
the swift parallel scripting language (
in  this project, the student will write chef recipes that will allow demogrid to  automatically deploy new grid software.
it is meant to handle the delivery of credentials, not the request.
the master is free to do whatever it  wants; it is a user-defined program.
mentor: michael wilde familiarity with ssh and scp knowledge of linux systems and shell scripting familiarity with python or similar scripting languages ability to experiment with simple scientific applications and graphical  tools enhancing swift accessibility and usability on the open science grid and
if you have an idea for a project, but none of the above mentors seem like  a good match, please contactborja sotomayor (our gsoc org admin) and he will  try to match you to an adequate mentor.
* improve globus to make it more awesome, according to the provided metric.
more information can be found here:https://github.com/nimbusproject/nimbus/issues#issue/33 requirements: globus project: nimbus mentor: dave labissoniere programming language/s: python and java level of expertise:
advanced description: globus online uses the cassandra[1] datastore for  persisting it's information.
often times the cloud admin who has access to the node it is started  on needs to get involved.
improve globus to make it more awesome, according to the provided metric.
the deliverables for this project would be: * develop a metric of awesomeness.
a problem comes up when a  vm unexpectedly dies.
however, they could end up being the seed from which a really cool project springs.
nimbus michael wilde: swift, scientific workflows jia zhang:
globus online mentor: vijay anand programming language/s: java level of expertise: advanced description: the current jglobus client for gridftp is used extensively to connect to gridftp servers from java.
swift description: our new scientific workflow portal mechanisms enable users to create customized "workspace" environments in which they can execute parallel, distributed scientific workflow scripts on a variety of grid and supercomputer resources.
this would feed into the existing rich swift "profile" framework that is currently only statically settable at workflow start time.
the swift parallel scripting model implements a dataset typing model in which directory structures of scientific data can be described as structure and array objects, and can be mapped from their on-disk structure to an in-memory representation of that structure.
requirements: programming language/s: python and java level of expertise: beginner description: provide api and command line tools for administrator  operations on nimbus clouds.
when we find that a vm no longer exists this new functionality will remove it from the frontend's database.
this is a fascinating project if you enjoy (or want to learn) performance
john q. globus |  mentor_email=john.q.globus@example.org | programming_languages=java and c |  expertise=
often times the cloud admin who has access to the node it is started on needs to get involved.
this project will entail selecting one language to experiment with (python is preferred), implementing an experimental library interface to swift, and evaluating its usability, expressiveness, and performance on simple test cases and on a set of scientific applications.
it also is too precise about its requirements  for success: for example if launching a cluster with 1000 workers and only 999  check in, currently this means failure for the whole run.
swift description: our new scientific workflow portal mechanisms enable  users to create customized "workspace" environments in which they can  execute parallel, distributed scientific workflow scripts on a variety of grid  and supercomputer resources.
for example, it can monitor system  resources and implement algorithm to manage the connection requests to gridftp  server and/or manage the memory usage of gridftp server processes.
before submitting an application to gsoc with globus as your mentoring organization, make sure you read ourgsoc faq, which provides some pointers on how to write a successful application.
reworking the swift parallel scripting dataset mapper model and toolset globus project:
the modified code should be able to be compiled  using mingw or cross-compiled using gcc on linux.
nimbus programming language/s: python level of expertise: intermediate description: cumulus is an s3 look a like service.
this  project proposes to tackle this issue by intelligently extracting information  from the shared computing environment, leveraging the power of social network  analysis and complex network theories.
retrieved from "  http://dev.globus.org/wiki/google_summer_of_code_2011_ideas"
swift mentor: michael wilde programming language/s: java level of expertise: intermediate description: enable swift to move large datasets using globus online by developing a "data provider" interface for the java "cog kit" layer that swift uses to move data and execute remote tasks.
globus toolkit mentor: raj kettimuthu programming language/s: c level of expertise: intermediate description:
this project proposes to tackle this issue by intelligently extracting information from the shared computing environment, leveraging the power of social network analysis and complex network theories.
right now the xml file created for launching vms with  libvirt is generated in python code.
this web console could be either used locally (by a single user), or installed on a site for several users to access (e.g., if demogrid uses local resources instead of amazon ec2).
preliminary work in embedding and calling swift from the r data analysis language indicates that this approach may yield new and highly-productive methods for easily writing parallel and distributed scripts.
the project will require an intimate knowledge of gridftp, and understanding of throughput prediction models as described in the following papers [1,2,3].
this can cause some scalability issues in the case of highly  loaded nimbus clusters.
we need more flexible management to limit the length of time a user can hold a connection, address prioritization and responses to overburdened services, and prevent starvation.
parallel streams often  achieve high throughput by reducing bandwidth delay product.
the data-flow of this application can be  expressed simply by two subsequent for loops.
when data is stored in cassandra, it is distributed via a partitioner, which determines which data should go to which backend datastore.
mentor: michael wilde level: introductory requirements: globus project:
requirements: familiar with c windows apis general unix/posix knowledge programming language/s: python level of expertise: intermediate description: globus demogrid is a tool that will build an  instructional grid environment that you can then deploy, using virtual  machines, on a cloud (such as amazon ec2) or on your own physical resources.
* improve  globus to make it more awesome, according to the provided metric.
the project will involve: mentor: michael wilde level: intermediate requirements: globus project:
this task touches most layers of the stack: cloud client, web services, servicenode communication, libvirt integration.
in gridftp, the efficiency of a data transfer operation depends upon correctly predicting the number of streams for performing the data transfer.
while it works with kvm it requires some modifications and alternative set of instructions.
since the release of cumulus amazon has added support for multi-part uploads to their protocol.
in this project, we propose to experiment with and adapt swift's resource management and scheduling mechanisms to make it easy to run swift scripts in amazon ec2, doe magellan, and boinc volunteer clouds, with both automated and user-driven control over resource levels, types, and costs.
the main task here will be adding support for kvm image formats (qcow2, qed, raw...) and device drivers (ide, scsi, virtio).
for example, terminating a running vm, listing vms  by user, node, etc.
requirements: a basic understanding of rest principals java programming programming language/s: python level of expertise:
measure current awesomeness of globus.
the  nimbus iaas platform currently does not provide a way for users to see this  output, this when a vm image fails to boot on nimbus it can be hard to figure  out why.
we already know globus is awesome, but there's no upper bound on awesomeness.
preliminary work in embedding and calling  swift from the r data analysis language indicates that this approach may yield  new and highly-productive methods for easily writing parallel and distributed  scripts.
one such  algorithm is the fruchterman-reingold algorithm[3] this way, information that  is closely related can be stored near each other.
(seehttp://www.ci.uchicago.edu/wiki/bin/view/swft/swiftr) python is the preferred implementation we'd like to focus on next.
this project will require the following steps: references: requirements: globus project: globus online mentor: tom howe programming language/s: objective c level of expertise: advanced description: to support users who have mobile devices produced by apple, we propose a project to develop an iphone/ipad application which will give access to the core services provided by globusonline.
2010 project ideas,  2009 project ideas and  2008 project ideas.
currently it lacks persistence, so any service failure or restart causes  failure of incomplete contexts.
this project will involve building such initial  libraries for string and text manipulation, network access, file data  management, and elementary mathematical functions.
the system is distributed and relies  heavily on messaging for incoming sensor data as well as control channel  messages.
thus, correctly predicting the value of this parameter is often a challenge and depends on a variety of factors such bandwidth, rtt, packet loss rate, etc.
nimbus mentor: dave labissoniere programming language/s: python and java level of expertise: intermediate description:
as the features supported  by globus online expand, many jglobus users may want to connect to globus
measure new awesomeness of globus.
python level of expertise: advanced description: globus demogrid is a tool that will build an  instructional grid environment that you can then deploy, using virtual  machines, on a cloud (such as amazon ec2) or on your own physical resources.
project idea guidelines this section is intended only for mentors who want to propose new project  ideas for students.
this project will involved extensive experimentation with the scheduler on large-scale distributed resources such as open science grid and teragrid, and possibly the amazon ec2 cloud computing service and petascale supercomputers at doe and teragrid sites as well.
michael wilde familiarity with parallel and distributed computing models performance measurement and evaluation skills plotting and data analysis skills scripting skills in shell, python, or similar languages enabling distributed, interactive debugging and status  monitoring/reporting of swift parallel and distributed scripts globus project:
to support this in a seamless way, this project proposed to implement the jglobus api for the gridftp client using the rest interfaces provided by globus online.
intermediate description:
requirements: scripting via shell and/or python rest swiftscript functional iteration constructs globus project:
this makes the creation of new vm images all the  harder for users.
programming language/s: java level of expertise: tbd description: the internet, the grid and the newly emerging cloud  environment have provided a community platform for scientists to share various  kinds of resources (e.g., experimental data and analytical applications) in the  form of services.
this project will involved refining the mapping model, and designing a new set of mappers and mapping conventions, based on user experience with the current mapping model, to make this style of script-writing even easier, more natural, and more robust and reusable.
to support this in a seamless way,  this project proposed to implement the jglobus api for the gridftp client using  the rest interfaces provided by globus online.
swift description: swiftscript, the language of swift, has a feel quite like a functional programming language.
this project entails creating an attractive swift  "starter kit" with tested and documented demos, on a set of  interesting but easy-to-install application problems.
www.ci.uchicago.edu/swift ) enables you to run many (tens of thousands and  more) application programs in parallel on clusters, grids, clouds, and  supercomputers, as well on on multicore workstations.
expertise: what level of expertise do you expect from the student?
in this project, we propose that you make globus more awesome.
a user still needs to contact a cloud admin and request an account, that cloud admin then needs to run the nimbus-new-user program and then send the new user back a url contained in the current web app.
while often appropriate, this is  inconvenient for (among other things) tutorials.
for example, if you want a  student to implement an idea you proposed in a paper, include a link to that  paper.
the modified code should be able to be compiled using mingw or cross-compiled using gcc on linux.
such a heuristic approach may complement  the existing syntax and semantics-oriented services discovery research, and  provide guidance to the construction of the next-generation of service search  engine.
the  deliverables of the project will be: implement the decision framework, test it using real workloads from past gridftp usage, and measure performance with and without the decision framework.
if you need additional inspiration on how to write up your idea, take  a look at last year's project ideas,  2009's list of ideas, or  2008's list of  ideas.
implement all appropriate jglobus gridftp client methods using the globus  online restful api document the usage of the client.
if not, please leave this field blank, and we will assign a mentor from the  mentor pool.
because of this they are sparsely populated files and the compress very well.
the driving factor of the research is our hypothesis that there is much  useful information implicit in the past use of scientific services.
at that point the user can retrieve their credentials.
while gridftp  employs models to predict the thread level, it also discourages changing the  thread level arbitrarily as it hurts overall performance.
however, efficiency drops when all streams experience packet loss.
| requirements= * must already be familiar with the globus toolkit.
the project will require the following steps: wireframe the application build the application according to the specifications document the usage of the application.
the decision would be made based on the provided email  address and a set of configurable rules (ex: accept all .edu, all uchicago.edu,  etc).
this web console could be either used  locally (by a single user), or installed on a site for several users to access  (e.g., if demogrid uses local resources instead of amazon ec2).
michael wilde level: intermediate requirements: globus project:
and how can such implicit information be used to facilitate service-based artifact reuse?
description: include a 1-2 paragraph description of what has to be  accomplished in this project.
the frontend will not know it has died until the time allocation for that vm expires, or until a user manually kills it.
references: [1] http://cassandra.apache.org [2] https://github.com/turtlebender/agamemnon [3] fruchterman, thomas m. j.; reingold, edward m. (1991).
it should be possible  to allow it to proceed in these situations.
however, some mentors might be interested in reviving  an old idea if you have an interesting proposal in mind.
a web page, or preferably, a web api will be created that allows a user to request an account given their email address (and some other set of information).
the project will deal with issues of usability, evaluating scientific workloads in cloud contexts, making it easy to grow and shrink resource clouds, and managing long-running workloads.
at the same time, the ability to do this make such an approach an  attractive vehicle by which new and prospective swift users can evaluate and  learn the system.
the app should  replicate most of the functionality of the current site and provide a secure  experience for users who want to interact with globus online.
demogrid mentor: borja sotomayor programming language/s:
requirements: integrate swift into globus online to provide an application execution  and scripting service globus project:
a common use is to set up a virtual compute cluster (pbs for example) composed of vms.
in gridftp, the  efficiency of a data transfer operation depends upon correctly predicting the  number of streams for performing the data transfer.
the swift parallel scripting system can be an ideal tool to enable new users of teragrid and opensciencegrid to rapidly achieve the ability to transition and scale up from a local sever or cluster environment to a more powerful grid environment with far greater computing resources.
we have created a mediawiki template to add new ideas to the list.
the broker is the central service which is contacted by each node.
in fact, google encourages that we include a couple  of these since they usually lead to the most interesting projects.
[2] j. lee, d. gunter, b. tierney, b. allcock, j. bester, j. bresnahan,  and s. tuecke, “applied techniques for high bandwidth data transfers  across wide area networks,” in proc.
intermediate description: embed the swift scripting engine into globus online to enable go users to define and execute parallel application scripts as a cloud-hosted service.
swift description: swift provides a powerful task execution site selector and scheduler which can sense the responsiveness and load level of computing sites and can throttle the volume of work that swift sends to the site up and down.
mentor: michael wilde level: introductory to intermediate requirements: globus project: [ none.]
python level of expertise: advanced description: globus demogrid is a tool that will build an instructional grid environment that you can then deploy, using virtual machines, on a cloud (such as amazon ec2) or on your own physical resources.
the app should replicate most of the functionality of the current site and provide a secure experience for users who want to interact with globus online.
to facilitate using cassandra, we developed a  graph database called agamemnon[2], which runs on top of cassandra.
in order to optimize the storage and  retrieval of data, this project would implement a new partitioner which uses a  standard graph visualization algorithm to distribute the data.
the globus online file transfer (rest) api documentation is here: http://transfer.api.globusonline.org
integrating service access capabilities in the swift parallel scripting  language globus project:
we need more flexible  management to limit the length of time a user can hold a connection, address  prioritization and responses to overburdened services, and prevent starvation.
three, add support for sparse files so that the compression is not  needed.
some of  these ideas were already picked up and implemented by students, or may be  outdated at this point.
to access the server, a user must  be authenticated, have appropriate read and write permissions, and respect the  total connection limit, but beyond that, there is no management or control.
to this end, the project will build models and techniques to study the  past behaviors of scientific services in the context of scientific experimental  processes.
after some experimentation, the first half of the  project will be replacing the marshalling layers and configuration files.
scientific workflows
they are not as detailed as the above project proposals, and some of them might not even be feasible during a single summer.
however, our recent analysis revealed that the reusability of  scientific services is very low.
the deliverables of the project will be: references: requirements: globus project:
experiments are expected to be carried out to test the new upper bound on scalability of swift, using this partitioned approach, and to test throughput of the swift system to ensure comparable performance.
the deliverables for this project would be: * develop  a metric of awesomeness.
requirements: programming language/s: python and java level of expertise: beginner description: currently the elastic processing unit is using amqp to  communicate messages between components.
in other words, the project can be done by any student who  is somewhat fluent in the programming languages listed in the project idea.
requirements will be gathered from discussion with swift users, analysis of existing swift scripts, and from a set of exploratory swift scripts to be written by the student.
this project  will add syntax and semantics to the language to permit indexing arrays by  using string keys and perhaps arbitrary objects as keys.
* must be an awesome student.
mentors our gsoc mentors (and their areas of expertise) are: bryce allen: globus online john bresnahan: nimbus, gridftp, globus xio tim freeman:
in this project we will add support for multi-part upload to the cumulus service.
a user can hold a connection open indefinitely and move an unlimited number of files (barring disk space or system quota constraints).
the  second half of the project will be security work and polishing.
swift description: swiftscript, the language of swift, has a feel quite  like a functional programming language.
for calling c and fortran, we expect to model this capability on mpi data-passing conventions.
jia zhang, daniel kuc, and shiyong lu, "confucius: a scientific  collaboration system using collaborative scientific workflows", in  proceedings of ieee international conference on web services (icws), 2010,  miami, fl, usa, jul. 5-10, pp.
we need to add to this a means for account requesting.
for example, if you wanted to do sort via mapreduce, all you need is a map to break up a file into buckets by key, and a merge that needs to take some buckets and put them back into a single file.
a problem comes up when a vm unexpectedly dies.
the result will be a pleasing and highly productive style of  specifying map-reduce problems in a simple functional notation.
if there is time in the project we will also modify the cloud client to  take the approval url (described above) as a parameter and use it to  automatically download the needed credentials from the rest service and install  them into the users cloud-client installation.
this section is intended only for mentors who want to propose new project ideas for students.
parallel streams often achieve high throughput by reducing bandwidth delay product.
we want to change this to make the idea list more navigable, so  please make sure you use the above template so it will be easier to switch to a  new format.
how to effectively and efficiently help scientists find suitable services and help them construct new workflows (experimental process) with existing services remains a big challenge.
michael wilde scripting in shell and/or python or similar prior experience with ec2 or boinc desirable
nimbus mentor: john bresnahan programming language/s: python and java level of expertise: intermediate description: lantorrent is a multicast network protocol in the nimbus toolkit that is used to propagate vm images to backend nodes for execution.
two, make an association of file extension to compression algorithm allowing lantorrent to send already compressed files to a receiver that will unzip them as they flow in.
add more chef recipes to demogrid globus project:
first we will make it  compress files as it sends them and uncompress them as they arrive.
nimbus mentor: dave labissoniere programming language/s: python and java level of expertise: beginner description:
we want to make its many parameters as self-tuning as possible, we want to determine what necessary controls to provide to the swift end-user and make these as simple and usable as possible.
the result will have great value for numerous scientific collaborations that wrestle with this difficult problem.
associated with  a gfork instance is a master process.
this is an ideal project  for junior programmers who seek an introduction to parallel computing and to  scientific applications.
the project will require the following  steps: conduct a gap analysis between the restful api for globus online and what  jglobus provides.
we want to make its many parameters as self-tuning as possible, we want to  determine what necessary controls to provide to the swift end-user and make  these as simple and usable as possible.
there are many alternative models to explore for this, including  "co-routine" styles of programming; methods for passing arguments and  results between language interpreters executing in parallel; expressing the  swift task graph in an efficient, scalable, but easy-to-program-with data  structure using the native language; conventions for mapping datasets and  wrapping external application programs; and conventions for embedding simple  snippets of swift code into scripts in other languages.
this project will add syntax and semantics to the language to permit indexing arrays by using string keys and perhaps arbitrary objects as keys.
the framework will consist of a) predicting the value of this parameter under given number of threads, (b) estimating overheads within gridftp in changing its current number of streams, and (c) adaptively deciding whether to change its current stream level.
this  project aims to answer two fundamental questions: what implicit information may  be extracted to help scientists better understand existing artifacts?
"graph  drawing by force-directed placement".
teragrid globus project:
at that point the user can retrieve their  credentials.
it should be possible to allow it to proceed in these situations.
the gridftp protocol is a backward compatible extension of the legacy rfc959 ftp protocol.
michael wilde flexible cloud and volunteer resource management for the swift parallel  scripting language globus project: swift description: preliminary work to date indicates that swift runs well  on cloud and volunteer computing resources.
one such algorithm is the fruchterman-reingold algorithm[3] this way, information that is closely related can be stored near each other.
some difficulties arise where it does not (for example in its foreach and iterate control constructs).
i would be interested to see constructs that more likemap , fold and scan as found in (for example)
this project will  involved refining the mapping model, and designing a new set of mappers and  mapping conventions, based on user experience with the current mapping model,  to make this style of script-writing even easier, more natural, and more robust  and reusable.
other sources of project ideas the above list of project ideas is by no means exclusive.
swift description: this project will involve experimentation with the swift parallel scripting programming model and its implementation, to create execution mechanisms that can partition a swift program's execution graph across multiple, distributed, asynchronous executors.
this will allow existing users  of the jglobus client to migrate to using globus online with few (or, ideally,  no) changes to their existing code.
mentor: michael wilde web 2.0 programming with dhtml, css, google gadgets data analysis and visualization in matlab, octave, or r user interface usability analysis and enhancement skills enhancing the swift parallel scripting library globus project:
this leaves the frontend thinking it has resources in use that are not and could actually be freed up for us with other vms.
for example, limit low priority user to one concurrent connection, but a high priority user to 10 connections.
this task touches most layers of the  stack: cloud client, web services, servicenode communication, libvirt  integration.
michael wilde scripting in shell and/or python or similar solid experience using linux systems
mentor: michael wilde familiarity with parallel and distributed computing models advanced scripting skills in the chosen scripting language (python  preferred)
this should include an installer as well as  service management support.
the frontend will not know it has died until the time  allocation for that vm expires, or until a user manually kills it.
once the execution graph is partitioned, mechanisms need to be in place to coordinate the execution graph, and to ensure that performance (e.g. throughput of tasks/sec) is not impacted significantly.
as a proof of concept, this project will build a prototyping search  engine, as a plugin to taverna, a known life science scientific workflow  management workbench.
the project will involve enhancing the initial, primitive library "import" capability of swift, and will explore how to add "namespaces" and library search mechanism to the language.
nimbus mentor: john bresnahan programming language/s: python level of expertise: intermediate description: cumulus is an s3 look a like service.
advanced description: currently the nimbus toolkit is geared towards xen.
gridftp is the primary protocol used  within globus online for performing bulk data transfers.
the  main task here will be adding support for kvm image formats (qcow2, qed,  raw...) and device drivers (ide, scsi, virtio).
some difficulties arise where it does  not (for example in itsforeach and iterate control  constructs).
for example, terminating a running vm, listing vms by user, node, etc.
ec2 and other iaas platforms allow the user to fetch the console output for inspection and debugging.
swift description: swift provides a powerful task execution site selector  and scheduler which can sense the responsiveness and load level of computing  sites and can throttle the volume of work that swift sends to the site up and  down.
the service would allow a user to request access to a nimbus cloud via a rest api.
when data is stored in  cassandra, it is distributed via a partitioner, which determines which data  should go to which backend datastore.
demogrid currently supports a limited number of grid technologies (see "supported grid technologies" in http://confluence.globus.org/display/demogrid/introduction+to+demogrid).
case studies will be drawn from applications in biology  and astronomy where such service-oriented applications are abundant and the  need for this integration is high.
intermediate | description=
in this project, we propose that you make globus more  awesome.
google summer of code 2011 ideas from globus globus has been accepted as a google summer of code 2011 mentoring  organization.
this algorithm needs to be extensively tested, measured, and enhanced, and its performance and capabilities should be documented in academic papers.
for now, the above would render like this: increase awesomeness of globus globus project: globus toolkit at-large mentor: john q. globus programming language/s: java and c level of expertise: intermediate description: we already know globus is awesome, but there's no upper  bound on awesomeness.
michael wilde level: advanced requirements: globus project:
the project is to convert this messaging to rest or http rpc based  mechanisms and to ensure that there is a retry mechanism in place that fits  with the reliability design.
this project will deal with many file naming conventions and data  access services, and will provide mechanisms to maintain and access large-scale  collaboration-wide data catalogs.
swift description: using distributed grid resources on the open science  grid ( www.opensciencegrid.org ) and teragrid ( www.teragrid.org ) requires  that application programs used by a user workload be installed on each  computing site that will be used on a given grid.
the  project will involve enhancing the initial, primitive library  "import" capability of swift, and will explore how to add  "namespaces" and library search mechanism to the language.
we currently have a web application that allows for delivery of credentials  to users.
nimbus programming language/s: python and java level of expertise:
associated with a gfork instance is a master process.
once the account is approved (either automatically or via the sysadmin) the  user will be sent email with a link to a web page.
a user  still needs to contact a cloud admin and request an account, that cloud admin  then needs to run the nimbus-new-user program and then send the new user back a  url contained in the current web app.
after some experimentation, the first half of the project will be replacing the marshalling layers and configuration files.
if its profitable to change its current thread level.
depending at what level you were thinking of addressing mapreduce applications, i might be interested in co-mentoring students on this project as well.
this allows  us to use graph semantics for modeling our data.
for  example, adequate for sophomore, or even freshmen, students in computer science  or engineering. intermediate: you assume some advanced knowledge in computer  science, but not specifically on globus (e.g., the student may have to know  about networks and distributed systems).
the project will deal with issues of usability,  evaluating scientific workloads in cloud contexts, making it easy to grow and  shrink resource clouds, and managing long-running workloads.
mentor: michael wilde familiarity with parallel and distributed computing models performance measurement and evaluation skills plotting and data analysis skills advanced scripting skills in shell, python, and/or perl intermediate java programming skills multi-level workflow programming models globus project:
hence it lacks the ability to automatically sort, partition,  merge, and reduce results.
the nimbus iaas platform currently does not provide a way for users to see this output, this when a vm image fails to boot on nimbus it can be hard to figure out why.
[3] e. yildirim, d. yin, t. kosar, "prediction of optimal  parallelism level in wide area data transfers", in ieee transactions on  parallel and distributed systems, 2010.
will it involve a lot of independent research?
first we will make it compress files as it sends them and uncompress them as they arrive.
also, note that ideas don't necessarily have to be  concrete tasks ("add support for protocol foo in component bar") but  can also be "blue-sky" ideas (e.g., "gridftp is not currently  capable of dealing with the latencies involved in transferring large files to  mars.
}} this is the information you should include in each idea: idea_title: the title of your idea globus_project and globus_project_url: what project (in the  dev.globus sense of the word) does this idea relate to?
i think all is needed are some applications that swift would call.
advanced description: we propose a project to develop an android application  which will give access to the core services provided by globusonline.
demogrid programming language/s:
similarly, a  curses-based version of this exists, but many enhancements and improvements are  needed create reports and plots of swift script performance additional details on the third sub-project are: we have an older version of a plotting capability that suffers from  terrible performance (in parsing the log and organizing its data) and bugs, and  which produces many informative but rather confusing logs that are hard to  select, control, and interpret.
this  project will explore the ability to apply the swift implicitly-prallel data  flow programming model to calling in-memory functions such as long-running math  library routines, etc.
this will allow existing users of the jglobus client to migrate to using globus online with few (or, ideally, no) changes to their existing code.
this makes the creation of new vm images all the harder for users.
the user would provide an email address with their request.
in the nimbus iaas platform virtual machines are remotely executed and managed via libvirt.
programming_languages: what programming languages will be used in  the project?
international conference on  computing in high energy and nuclear physics (chep01), 2001.
michael wilde requirements: globus project:
the web page is only  available for a short period of time.
the decision would be made based on the provided email address and a set of configurable rules (ex: accept all .edu, all uchicago.edu, etc).
in order to optimize the storage and retrieval of data, this project would implement a new partitioner which uses a standard graph visualization algorithm to distribute the data.
the app should replicate  most of the functionality of the current site and provide a secure experience  for users who want to interact with globus online.
in this project we will add functionality to nimbus to periodically check the backend nodes for running vms.
this would be a good project to learn about  amqp and scalability of services.
requirements: understanding of basic network architecture understanding of network protocols and tcp communication dead vm reaper programming language/s: python and java level of expertise: beginner description: in the nimbus iaas platform virtual machines are  remotely executed and managed via libvirt.
swift description: this project will involve experimentation with the  swift parallel scripting programming model and its implementation, to create  execution mechanisms that can partition a swift program's execution graph  across multiple, distributed, asynchronous executors.
the master program runs  for the lifetime of the gfork daemon.
create a few useful event streams out of the logging info creating multiple reporting and display options including summaries,  tables, and plots that show various dimensions of a swift application's  activities basic plots to be produced by an integrated java plot library such as  jfreechart (http://www.jfree.org/jfreechart/samples.html)
requirements: a command of unix environments c programming a basic understanding of ftp gridftp server windows port programming language/s: c level of expertise: intermediate description: port the gridftp server code to windows 7.
once the  execution graph is partitioned, mechanisms need to be in place to coordinate  the execution graph, and to ensure that performance (e.g. throughput of  tasks/sec) is not impacted significantly.
in this project we will add support for multi-part upload to the cumulus  service.
haskell or other functional languages.
r is  pretty well underway.
if you are unsure of who to contact, or no mentor seems like  a good match, please contactborja sotomayor (our gsoc org admin), and he will  put you in touch with the right person.
depending at what level you were  thinking of addressing mapreduce applications, i might be interested in  co-mentoring students on this project as well.
the project ideas are grouped according to the globus projects that proposed them, but this is by no means an exclusive list of ideas; if you have a cool idea for a globus-related project, please contact one of thegsoc mentors.
this will  include credential management and file transfer capabilities.
more information can be  found here:https://github.com/nimbusproject/nimbus/issues#issue/33 requirements: kvm or xen a plus make kvm first class functionality globus project:
once you are ready to submit an application, remember that you must do so before april 8th through the gsoc webapp.
while often appropriate, this is inconvenient for (among other things) tutorials.
the project will involve the use of the  globus replica location service (rls) and other highly-scalable file / dataset  catalogs.
should be adequate for juniors or  seniors majoring in computer science or engineering who have taken upper-level  courses.
mike wilde enhance swift app() functions with run-time specifications globus project: swift description: add the ability to specify things like mpi width, ram  and walltime needs, disk space needs, etc. calculated by swift expressions from  variable info available in the script.
the portal provides the means to integrate  distributed data management, workflow launch and status monitoring, result  tracking, analysis and visualization.
swift description: in this project we propose to enhance both the display and control of running parallel workflows, adding capabilities to probe down to individual remote worker nodes to gain detailed insight on application performance, and generate an informative set of dynamic plots by which users can fully understand all aspects of their script's and application's behavior and performance this will be a good project for students with a strong interest in distributed computing, performance analysis and modeling, and graphical display of information.
this project will help to build a starter kit for such users that pre-configures swift for their use on these large-scale grid infrastructures, and which automates and hides many of the complexities in executing at such as large and highly distributed scale.
this will include  credential management and file transfer capabilities.
to this end, the project will build models and techniques to study the past behaviors of scientific services in the context of scientific experimental processes.
globus fork (gfork) - a user-configurable super-server daemon very similar to  xinetd that enables sharing of state across client connections for a service,  user-defined master programs that co-ordinate resource sharing.
globus has been accepted as a google summer of code 2011 mentoring organization.
mentor_name=john q. globus | mentor_email=john.q.globus@example.org | programming_languages=java and c | expertise=
for now, the above would render like this: globus project: globus toolkit at-large mentor: john q. globus programming language/s: java and c level of expertise: intermediate description: we already know globus is awesome, but there's no upper bound on awesomeness.
the system is distributed and relies heavily on messaging for incoming sensor data as well as control channel messages.
this leaves  the frontend thinking it has resources in use that are not and could actually  be freed up for us with other vms.
since the release of  cumulus amazon has added support for multi-part uploads to their protocol.
if possible,  include websites or papers related to this project.
there are 3 possible sub-projects here: developing the ability to connect to remote compute nodes and probe the  performance of a running application using a shell.
the  result will have great value for numerous scientific collaborations that  wrestle with this difficult problem.
i have a fairly good idea what this  should look like, so there is not a huge amount of design work involved.
for example, it can monitor system resources and implement algorithm to manage the connection requests to gridftp server and/or manage the memory usage of gridftp server processes.
globus implementation of gridftp is widely used for data movement in the grid community.
the project will require the following steps: requirements: globus project: globus online mentor: tom howe programming language/s:
advanced description: nimbus uses ssh to communicate with the vmm in the  nimbus cluster.
the deliverables for this project would be: develop a metric of awesomeness.
while swift, as a  functional-inspired programming language, makes it easy to specify a map-reduce  style of scripting, as a general functional language it operates on typed data  objects and does not intrinsically use the key-value data model of google and  hadoop mapreduce.
the swift parallel scripting model implements a dataset  typing model in which directory structures of scientific data can be described  as structure and array objects, and can be mapped from their on-disk structure  to an in-memory representation of that structure.
if you need to  elaborate on the level of expertise or the prerequisites of your project, you  should do so in therequirements field.
swift description: while the swift parallel scripting system is meant  primarily for users on large-scale clusters, grid, and supercomputers, its also  quite usable on multi-core workstations, and it can readily federate small  networks of such workstations or servers into a valuable parallel computing  resource.
requirements: an understanding of graph algorithms python programming a familiarity with cassandra and how cassandra distributes data ios application for globus online globus project: globus online programming language/s: objective c level of expertise:
requirements: an understanding of how to develop android applications experience using linux systems programming language/s: python and java level of expertise: intermediate description: currently in nimbus all of our user management tools  are run by the nimbus administrator.
a rudimentary prototype of  this exists and needs many enhancements display the overall status of a swift script in progress.
the deliverables for this project would be: a modified cloud client that remotely calls the fetch console method an additional operation on the service to fetch the console output modification to vm management code to capture the console output and  store it for fetching requirements: experience with an iaas platform (ec is fine) a plus replace ssh communication to cluster vmms with amqp globus project:
advanced description: when a system is booted, be it a vm or a real machine,  is very useful to read both for diagnostic information and debugging.
the project will require the following steps: requirements: globus project: nimbus mentor: john bresnahan programming language/s: python and java level of expertise: intermediate description: currently in nimbus all of our user management tools are run by the nimbus administrator.
two, make  an association of file extension to compression algorithm allowing lantorrent  to send already compressed files to a receiver that will unzip them as they  flow in.
}} this is the information you should include in each idea: right now, the template is rendered like an idea from last year's list of ideas.
swift description: as a relatively young language, swift does not yet have  a rich set of library functions to perform many of the common tasks needed in  typical scientific scripts.
requirements: what specific skills are required to do this  project.
there are many alternative models to explore for this, including "co-routine" styles of programming; methods for passing arguments and results between language interpreters executing in parallel; expressing the swift task graph in an efficient, scalable, but easy-to-program-with data structure using the native language; conventions for mapping datasets and wrapping external application programs; and conventions for embedding simple snippets of swift code into scripts in other languages.
the data-flow of this application can be expressed simply by two subsequent for loops.
i would be interested to see constructs that more like map , fold and scan as found in (for example) haskell or other functional languages.
in this project we will modify lantorrent in 3 ways:
however, our recent analysis revealed that the reusability of scientific services is very low.
swift programming language/s: shell, python level of expertise: intermediate description: embed the swift scripting engine into globus online to  enable go users to define and execute parallel application scripts as a  cloud-hosted service.
we will implement a  "decision framework" that will determine for gridftp if its  profitable to change its current thread level.
(languages, knowledge of protocols, should they already be familiar  with gt4/gt5 or is on-the-job training ok?, etc.)
currently it lacks persistence, so any service failure or restart causes failure of incomplete contexts.
the above list of project ideas is by no means exclusive.
swift description: swift's "leaf" or lowet-level functions are current application programs wrapped into a swift function interface.
the project will involve the use of the globus replica location service (rls) and other highly-scalable file / dataset catalogs.
this should be done natively (e.g. not cygwin).
however,  efficiency drops when all streams experience packet loss.
this should yield suggestions for changes to the globus
requirements: basic knowledge about xml, web services and scientific workflow (highly  preferred) "blue sky" ideas
this project will involved extensive  experimentation with the scheduler on large-scale distributed resources such as  open science grid and teragrid, and possibly the amazon ec2 cloud computing  service and petascale supercomputers at doe and teragrid sites as well.
initially we'd want to develop constructs which can replicate the present iteration constructs, but more nicely expressed - and then attempt to see how easy they are for people to use compared to the existing ones.
this would feed into the existing rich  swift "profile" framework that is currently only statically settable  at workflow start time.
the task is to provide a clean api and implementation which  takes requests and makes necessary calls in the service, then provide polished  and well-documented command line tools which communicate with these apis.
i  think all is needed are some applications that swift would call.
requirements: an understanding of how to develop applications in ios objective c programming (or c) basic understanding of globus online android app for globus online globus project: globus online programming language/s: java level of expertise:
globus online projects adaptive tuning in globus online globus project:
michael wilde familiarity with soap, rest and/or json scripting skills in python or similar language familiarity with xml integrating in-ram function calls and data passing globus project:
right now, the template is rendered like an idea from last year's  list of ideas.
requirements will be  gathered from discussion with swift users, analysis of existing swift scripts,  and from a set of exploratory swift scripts to be written by the student.
the project  ideas are grouped according to the globus projects that proposed them, but this  is by no means an exclusive list of ideas; if you have a cool idea for a  globus-related project, please contact one of thegsoc mentors.
mentors: michael wilde familiarity with map-reduce and other parallel programming concepts skills in scripting in python or similar languages moderate java skills to write and run hadoop program integrating swift parallel scripting semantics into python, r, octave,  and matlab globus project:
further we do not fully take advantage of some kvm features.
this request would trigger some configurable logic that would either automatically approve the request, reject the request, or put the request in a queue awaiting the admins approval.
for example, limit low priority user to one concurrent  connection, but a high priority user to 10 connections.
the master is free to do whatever it wants; it is a user-defined program.
the deliverables for this project would be: references: requirements: the following are "blue sky" project ideas.
the nimbus context broker provides a facility for  coordinating the launch of many vms and securely exchanging information.
swift mentor: michael wilde programming language/s: shell, python level of expertise:
the deliverables for this project would be: requirements: retrieved from " http://dev.globus.org/wiki/google_summer_of_code_2011_ideas" if you need additional inspiration on how to write up your idea, take a look at last year's project ideas, 2009's list of ideas, or 2008's list of ideas.
you could  support mapreduce style applications without explicit support from swift.
when the user visits that web page they can download their credentials and will then have access to the nimbus cloud.
while swift, as a functional-inspired programming language, makes it easy to specify a map-reduce style of scripting, as a general functional language it operates on typed data objects and does not intrinsically use the key-value data model of google and hadoop mapreduce.
software – practice &  experience (wiley) 21 (11): 1129–1164.
the goal of  this project is to develop a gfork plugin for connection management to the  gridftp server.
case studies will be drawn from applications in biology and astronomy where such service-oriented applications are abundant and the need for this integration is high.
such a heuristic approach may complement the existing syntax and semantics-oriented services discovery research, and provide guidance to the construction of the next-generation of service search engine.
ec2 and other iaas platforms allow the user to fetch the console output for  inspection and debugging.
enabling large-scale distributed application build and deployment under  swift globus project:
we will implement a "decision framework" that will determine for gridftp
right now the xml file created for launching vms with libvirt is generated in python code.
this  request would trigger some configurable logic that would either automatically  approve the request, reject the request, or put the request in a queue awaiting  the admins approval.
swift description: using distributed grid resources on the open science grid ( www.opensciencegrid.org ) and teragrid ( www.teragrid.org ) requires that application programs used by a user workload be installed on each computing site that will be used on a given grid.
swift description: while the swift parallel scripting system is meant primarily for users on large-scale clusters, grid, and supercomputers, its also quite usable on multi-core workstations, and it can readily federate small networks of such workstations or servers into a valuable parallel computing resource.
so, some knowledge of python is required.
more information about this can be found here: http://docs.amazonwebservices.com/amazons3/latest/dev/index.html?uploadobjusingmpu.html .
* measure current awesomeness of globus.