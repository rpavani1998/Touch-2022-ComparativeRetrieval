- privacy policy - your ad choices ©2012 about.com.
> word = 'ball' + b[3:7]  >>> print word balloons previous next
working with strings with a string, one concatenates instead of adding.
r for more operators, see the page "python operators".
a = 'big' b = 'baboons' phrase =
a part of the new york times company.
so if you need a space between the parts, you must be sure to include it when the two strings are joined.
if you want more than one letter but still less than the whole string, you can cull out a substring by using the slicing operator: >>> b = 'baboons' >>>
a + b full_phrase = b + " with " + a + " bahoochies" print phrase print full_phrase output: bigbaboons baboons with big bahoochies
- python 3.0 - regular expressions
see more about: - "hello, world!" - line-by-line file analysis - what is python?
overloading - perlop - linux command - unix command - php variable - php variable number - php variable
working with variables working with integer variables as you might imagine, you can perform any mathematical operation you like  on a numeric literal.
text - outputting unicode with python explore python must reads most popular - what is python?
r working with strings with a string, one concatenates instead of adding.
one can concatenate  strings or their values.
>>> b = 'baboons' >>
d = 300 pi = 3.14159265 circumference =
- learn python - hello, world!
a + b full_phrase = b + "  with " + a + " bahoochies" print phrase print full_phrase output: bigbaboons baboons with big bahoochies
so if you need a space between the parts, you  must be sure to include it when the two strings are joined.
z = b[2:7] >>>  print z boons you can, of course, combine that substring with another string value and  assign both to a single string literal.
for more operators, see the page "python operators".
the result is a string that shows no indication that the two parts were ever separate.
z = b[2:7] >>> print z boons you can, of course, combine that substring with another string value and assign both to a single string literal.
if you want more than one letter but still less than the whole string, you  can cull out a substring by using the slicing operator: >>> b = 'baboons' >>>
> word = 'ball' + b[3:7] >>> print word balloons previous next related articles - introduction - integers - strings - part 1 - strings - part 2 - strings - part 3 - accessing variables - working with variables - lists - tuples - dictionaries - using operators - definition for the term:
- python text editors - string methods - 1 of 2 by category - python programming - python tutorials - python data types - beginning python - python 3.0 - python library - regular expressions - web development - advanced python - database programming - networking - scriptips - python jobs - programming glossary - suggested resources python - about.com - computing & technology - python - most popular - latest articles - rss - advertise on about.com - our story - news & events - work at about - sitemap - all topics - reprints - help - write for about - user agreement - ethics policy - patent info.
- about.com - computing & technology - python python search - python - basic python - intermediate python - pro python discuss in our forum beginning python: data types from al lukaszewski, former about.com guide see more about: - python programming - python tutorials - python data types 7 of 10 previous next working with variables working with integer variables as you might imagine, you can perform any mathematical operation you like on a numeric literal.
one can concatenate strings or their values.
the result is a string that shows no indication that  the two parts were ever separate.