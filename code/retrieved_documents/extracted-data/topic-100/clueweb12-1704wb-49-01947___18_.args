i also plan to extend this metaprogramming approach in the future to model malware analysis patterns by introducing metamalware template library (mmtl).the unique and novel feature of this library is the inclusion of dual classes of behaviour such as leak<>, deadlock<>, overflow<>, residue<>, exception<>, contention<>, etc. parameterized by various structural memory classes like process<>, thread<>, heap<>, stack<>, region<>, buffer<>, etc. mdtl also includes classes to model software tracing and this will be used for simultaneous software trace and memory dump analysis case study in the forthcoming presentation.the unique and novel feature of this library is the inclusion of dual classes of behaviour such as leak<>, deadlock<>, overflow<>, residue<>, exception<>, contention<>, etc. parameterized by various structural memory classes like process<>, thread<>, heap<>, stack<>, region<>, buffer<>, etc.no comments » stoppages 2011 victimware analysis conference thursday, may 5th, 2011 this is a forthcoming virtual event to learn analysis of blockages, delays, obstructions, preventions, and stoppages in victimware suffering from software defects and malware.no comments » this is a forthcoming virtual event to learn analysis of blockages, delays, obstructions, preventions, and stoppages in victimware suffering from software defects and malware.the template classes can be more complex, of course, utilizing the full power of c++, stl, and existing libraries like boost.i’m learning now python language to write more interesting scripts for crash dump analysis pattern diagnostics, mining statistics, formatting and visualization.memory dump analysis services organizes a free webinar on unified software diagnostics (usd) and the new scalable cost-effective software support model calledpattern-driven software support devised to address various shortcomings in existing tiered software support organizations.posted in announcements, computer forensics, malware analysis, memory analysis forensics and intelligence, victimware | no comments » borrowing routine activity theory (rat) from criminology i would like to introduce the similar approach to abnormal software behavior with patterning activities that adds additional unmotivated offenders to combine malware (software rats) with unintentional ordinary common bugware: the application of rat to software can be metaphorically named as function activity theory (fat).forthcoming parts will introduce template classes and examples.forthcoming parts will introduce template classes and examples.no comments » memoretics as a science of memory snapshots borrows many ideas from the following disciplines (the list is not exhaustive): it also contributes many ideas back.mdtl also includes classes to model software tracing and this will be used for simultaneous software trace and memory dump analysis case study in the forthcoming presentation.debugging, analysis notation, announcements, antipatterns, best practices, cda pattern classification, crash dump analysis, crash dump patterns, debugware patterns, debugging, debugging methodology, debugging trends ,escalation engineering, java debugging, linux crash corner, mac crash corner, malware analysis, malware patterns, memory analysis forensics and intelligence, memory dump analysis services, pattern models, pattern prediction, presentations ,software behavior patterns, software chorology, software engineering, software narratology, software technical support, software trace analysis, software trace reading, software tracing implementation patterns, software troubleshooting patterns, structural memory patterns, structural trace patterns, systems thinking, testing, trace analysis patterns, training and seminars, troubleshooting methodology, unified debugging patterns, webinars, workaround patterns |debugging, analysis notation, announcements, antipatterns, best practices, cda pattern classification, crash dump analysis, crash dump patterns, debugware patterns, debugging, debugging methodology, debugging trends ,escalation engineering, java debugging, linux crash corner, mac crash corner, malware analysis, malware patterns, memory analysis forensics and intelligence, memory dump analysis services, pattern models, pattern prediction, presentations ,software behavior patterns, software chorology, software engineering, software narratology, software technical support, software trace analysis, software trace reading, software tracing implementation patterns, software troubleshooting patterns, structural memory patterns, structural trace patterns, systems thinking, testing, trace analysis patterns, training and seminars, troubleshooting methodology, unified debugging patterns, webinars, workaround patterns | no comments » windows debugging expert system windbg extension saturday, february 5th, 2011 got an insider information from memory dump analysis services that they are developing a prolog extension for memory dump analysis.