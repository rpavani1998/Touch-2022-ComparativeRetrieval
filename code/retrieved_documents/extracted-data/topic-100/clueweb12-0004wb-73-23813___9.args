processing then has a nice speed for showing things.
java and html parsing don’t seem to go together at all.
you might also be able to get away with just a little bit of code if you use just flash, although, if you really want to get serious with visualization, you'll need to learn actionscript.
for art processing definitely seems to be the software of choice for artists and designers.
i like the earlier user’s suggestions of using python for the data parse and then processing for the actual viz step.
the key here is not to use the default settings.
you might also be able to get away with just a little bit of code if you use just flash, although, if you really want to get serious with visualization, you'll need to learn actionscript.
i use openoffice for table analysis, because it does the same as excel, and it has comparable graphing capacity, but costs nothing.
for anything more complicated than table analysis spreadsheets are no good idea, you have to go for real stats packages.
plus, you don't need to include many details in a graphic made for presentation slides, because people can't see them from far away.
example: the new york times many want to add some spice to their presentations.
i love processing but something that it cannot beat is flash interactivity and it’s graphics rendering tree object model.
you'll be limited to their offerings though.
personally, i don't use it much for graphics since i'm comfortable with r and illustrator.
another awesome software is nodebox (that is python based too), unfortunately it’s for mac-users only.
illustrator is kind of pricey however.
oh, and let's not forget all the government organizations that have departments dedicated to putting together datasets.
as a note, john resig (the principal author of jquery, among other things) ported the processing framework to javascript, which makes it much more web-friendly.
good for simple visualizations; simple data manipulation, cost effective, and it can handle the conversion between a report layout to a viz.
probably not the most ideal method, but i’ve actually used php (+gd2) when drawing images derived from large data sets that reside in mysql databases.
illustrator is the most common choice for non-interactive graphics since it gives you drag-and-drop control over all the elements.
i'm going to assume you have a programming background if you're looking to do visualization for a web application.
i then viz it with tableau so it is interactive.
the end result is a java applet.
you can use the same software as the above, but there's also not much harm in using microsoft excel despite the stigma.
great thread…i agree about the many tools in the toolkit one that i’m starting to like is ethority; for a bi solution it put some thought into the data visualization functionality.
http://www.juiceanalytics.com/demos/airline/ http://media.juiceanalytics.co.....pdemo.html (view-sourceable) juicekit really isn’t for data-exploration–we use excel and nodebox for that (tableau, of course is great too)–but about publishing ny times quality visualizations.
planner reads » blog archive » best of flowingdata: september 2009 pingback: data visualization flowingdata explores how designers, statisticians, and computer scientists are using data to understand ourselves better — mainly through data visualization.
i use mathematica for pretty much anything where more than a couple of curves are required.
if the people that ordered the analysis don’t understand the viz the work is useless.
example: the new york times for presentations many want to add some spice to their presentations.
it’s compatible with firefox, safari, chrome, opera, and (with the explorer canvas script), internet explorer, and it works quite nicely.
for larger datasets flare seams more suitable for this task.
examples: many eyes, rescue time processing definitely seems to be the software of choice for artists and designers.
again, it goes back to how easy it is to learn and how much you can do with it.
upsides are programatic graph generation, quality & wide variety of plot types.
for web presentations, amcharts is an option.
even if i feel my questions are lame, i always get a useful answer.
the upside of flash is that it tends to load faster than java, and more people have flash than java installed on their computer.
the numerical python module – aka numpy – is great for data analysis and getting one’s head quickly around the data.
tableau is expensive and not as flexible as i’d like, but there’s a subset of tasks (basically making visualizations of 2 to ~5 dimensional data stemming from an sql query) for which it is excellent.
i like it you can make very concise javascript expressions to make quite sophisticated mappings from data to marks-on-screen.
this means graphics like what you see in the newspaper.
i've also heard a lot of good things abouttableau software.
i use python for static graphics, and data ‘analysis’ / ‘cleaning’ , then processing for realtime visualisation.
â€“ getting started | flowingdata | daniel johnson, jr. i guess i need to check out r. i’ve dabbled with processing, but as a flash+php developer, i typically stick to what i know best when trying to do a complex task.
again, it goes back to how easy it is to learn and how much you can do with it.
it makes flash so much better for guis and interactive datavis.
flowingdata membership how to make a contour map using color scales and palettes in r build interactive time series charts with filters
spss is a good tool that does not demand the steep learning curve of r. most data are not clean when you get them, they have missing data, outliers, etc.
here is an example of a good geotemporal one in action: http://tiny.cc/jfogk it’s called geotime interesting thread, nathan.
hi nathan, i’m use the import-functions from google docs (spreadsheets) for data-scrapping.
our online tools are usually done with flash or flex.
it can be also free if you use opensource flex sdk for actionscript programming.
i also use a lot of python and beautiful soup for manipulating data.
from r, you can import your file as a pdf into illustrator.
plus, you don't need to include many details in a graphic made for presentation slides, because people can't see them from far away.
i also use inkscape a little to tidy up r plots and add additional annotation i heart processing, especially offline, because java applets are annoyingly long to start.
the free vista (athttp://www.visualstats.org and at http://www.uv.es/~prodat/vista ) allows – among full multivariate stats – to run a visual exploratory data analysis under windows, mac and unix.
for quick plots, excel is fine.
it’s highly customizable and extremely fast.
then, i’m embed diagrams, google maps, tables etc.
the good news is, well, that there are a lot of (free) available tools out there to help you get started.
you can either do stuff in the actual flash program, or you can use actionscript for a pure coding solution.
the data i work with is rarely clean or structured in a way ready to be vized.
beautifulsoup is a good python library to parse html (and xml) pages: http://www.crummy.com/software/beautifulsoup/ great pointers on public databases.
both apps let me do most of the complex stuff with drag and drop, and create many iterations and approaches to the data quickly.
these intro to r slides might help too: http://forums.flowingdata.com/.....o-r-slides pingback: popurls.com // popular today
with all of the available tools to help you visualize data, it can be confusing where to start.
for vector graphic i use inkscape.
processing.js is getting much better though.
not only is processing pretty easy, but it has such a great user community.
â€“ getting started | flowingdata « netcrema – creme de la social news via digg + delicious + stumpleupon + reddit python is very good for static visualizations.
it's important to have actual data when you're learning, because the visualization tool that you use will depend on it.
the first isprocessing, which was designed to make coding easier and to give you more bang for the buck.
ultimately, visualization is not just about using one piece of software, but having a full toolbox at your disposal.
you can actually do a lot in microsoft excel and make it look good.
check out the site and processing forums for plenty of tutorials and tips.
in particular, we want to make it easy to make flare visualizations that work with flex data binding.
if you want to do something more complicated than your traditional graphs, you can design it by hand in illustrator or your can do it inr (either programmatically or with one of the add-on libraries), which is a software environment for statistical computing and graphics.
you can actually do a lot in microsoft excel and make it look good.
â€“ getting started — some random dude definitely saving this post! google spreadsheets has a motion gadget widget that is very nice to show time-based data.
the flare visualization toolkit is a good place to start.
i was disappointed you didn’t mentioned the javascript infovis toolkit as a web visualization tool (http://thejit.org).
for web visualizations, i’ve recently had great luck with flot.js for standard line charts.
i’d say that if you’re looking for a nice integration with web standards the javascript infovis toolkit is a good option.
we use tableau for brainstorming ideas (with whatever db is needed).
oh, and let's not forget all the government organizations that have departments dedicated to putting together datasets.
the others only paint a picture.
for analysis there are a lot of analysis tools, and the preferred one will change depend on who you ask.
it’s a very good alternative to processing in some specific jobs.
the good news is, well, that there are a lot of (free) available tools out there to help you get started.
personally, i don't use it much for graphics since i'm comfortable with r and illustrator.
from r, you can import your file as a pdf into illustrator.
then our designers use illustrator to mock up the viz.
to that end, processing is a lot easier to learn coding-wise.
you can either do stuff in the actual flash program, or you can use actionscript for a pure coding solution.
downsides are cost, and very steep learning curve.
either way, the end result is something that runs in the flash environment.
unlike excel which has to be refreshed, tableau is active and interactive.
i’m pretty heavily into tableau, excel and sql and have looked at r, but frankly it looks like the learning curve is too long to be worth the investment when tools like tableau are available (if you have the funds) which do a very good job.
the only product that we’ve come across that can cover all three of the traditional, single visualization techniques – spatial, temporal, and link analysis – is geotime.
my doings lean a little in the art direction, but i’m originally from the infovis side.
i use lyza fromhttp://lyzasoft.com to not only connect to many data sources and transform, but to figure out what data to look at with profiling and verify it is valid.
the tool uses in-memery analysis and is able to show all data at once.
and a crosstab is often the most complicated tool a non-statistician can understand.
also, flare uses flash which means that your visualization will work in 95% of browsers and machines (which is a good thing).
and it’s various add on packages for more and more analysis and visualisation – rcurl comes in very handy for scraping data, along with ggplot, plyr and reshape to name a few.
for me usability for the analysist and understandability for the enduser of the analysis are crucial, besides all the whistles and bells of nice viz gadgets.
for publication this means graphics like what you see in the newspaper.
pingback: (pluri)tal / ilpga [u. paris 3] i use maganview (http://www.magnaview.com) for data analysis and visualization.
it’s available athttp://processingjs.org/. we use sql or ms access connected to tableau.
if you want to do something more complicated than your traditional graphs, you can design it by hand in illustrator or your can do it inr (either programmatically or with one of the add-on libraries), which is a software environment for statistical computing and graphics.
with all of the available tools to help you visualize data, it can be confusing where to start.
it gives you control over all the elements in your graphic - color, stroke, font, orientation, etc.
the new school of information security i use http://visualizefree.com to create analytic visualizations.
illustrator is the most common choice for non-interactive graphics since it gives you drag-and-drop control over all the elements.
this is an issue that does not pop up too much here, because statisticians love their tools.
url) is interesting, but i haven’t used it enough to understand what it’s best suited for.
check out the site and processing forums for plenty of tutorials and tips.
what visualization software to use now that you have the answers to those two questions in mind, we can make a decision on what will work best for you.
ultimately, visualization is not just about using one piece of software, but having a full toolbox at your disposal.
if you don't know anything about computer code, you can try many eyes or fusion charts.
if you don't know anything about computer code, you can try many eyes or fusion charts.
also looking at workflows involving excel -> r -> powerpoint to speed up some chart generation.
at work most of the 10k charts we publish each year are done in excel, then imported in illustrator.
it’s free, far more usable than gimp (another open source graphics program) and suits very well my needs.
it's important to have actual data when you're learning, because the visualization tool that you use will depend on it.
you can use the same software as the above, but there's also not much harm in using microsoft excel despite the stigma.
geotime combines all three to tell the full story.
for web applications i'm going to assume you have a programming background if you're looking to do visualization for a web application.
the r learning curve is very much worth it if you ever need to do anything beyond simple data manipulation that you are comfortable with in other programs.
the upside of flash is that it tends to load faster than java, and more people have flash than java installed on their computer.
i finally convinced my company to get a couple tableau desktop licenses – well worth it!
you'll be limited to their offerings though.
it gives you control over all the elements in your graphic - color, stroke, font, orientation, etc.
the first isprocessing, which was designed to make coding easier and to give you more bang for the buck.
cendres.net we use juicekit (http://juicekit.org) , our open-source lightly patched flare library integrated with features that make integration with flex easier.
frank, the vista sites look a little… dated (e.g. no mention of any os after windows 2000).
it was an easy way to go from query -> image manipulation without having to create an api or anything.
http://code.google.com/p/flot/ also, the raphaël javascript library is great for drawing custom svg/vml (compatible across browsers), basically any vector graphics.
