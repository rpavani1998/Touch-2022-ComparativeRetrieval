when faced with unequal class sizes, classification accuracy is often an inappropriate measure of performance.the recent growth in high-speed internet connections enable malware to propagate and infect hosts very quickly, therefore it is essential to detect and eliminate new (unknown) malware in a prompt manner[1].these proportions do not reflect real-life situations in which malicious code is significantly lower than 50% and therefore might report optimistic results.more and more researchers realized that the performance of their classifiers may be sub-optimal due to the fact that the datasets are not balanced.thus, having a relatively high false-positive is reasonable in order to decrease the probability of missing an unknown malicious file.a common method of launching these attacks is by means ofmalicious software (malware) such as worms, viruses, and trojan horses, which, when spread, can cause severe damage to private users, commercial companies and governments.recent studies, which we survey in the next section, have shown that by using byten-grams to represent the binary file features, classifiers with very accurate classification results can be trained, yet there still remains room for improvement.from the results we conclude that for this problem domain, complex classifiers, such as the ensemble random forest algorithm[44] which induces many decision trees and then combines the results of all trees, and the boosted decision tree[48] generate a more accurate classifier.the results show that malicious software opcode distributions differ significantly from non-malicious software and suggests that the method can be used to detect malicious code.it is shown that all classifiers, excluding ann, had a similar trend and perform better when using mfp of 15% - 30% in the training set, while random forest and boosted decision tree outperformed all other classifiers exceeding 94.5% accuracy and 87.1% tpr, while keeping the fpr bellow 4%.we believe that the application of cost-sensitive classification depends on the goals to be achieved, and accordingly the cost of having a misclassification of each type.data mining methods (logistic regression, artificial neural networks and decision trees) are used in[21] to automatically identify critical instruction sequences that can distinguish between malicious and benign programs.in future work we plan to experiment with cost-sensitive classification in which the costs of the two types of errors (i.e., missing a malicious file and false alarm) are not equal.in previous studies classification algorithms were employed successfully for the detection of unknown malicious code.thus, generalization of the detection methods is crucial in order to be able to detect unknown malware before its execution.