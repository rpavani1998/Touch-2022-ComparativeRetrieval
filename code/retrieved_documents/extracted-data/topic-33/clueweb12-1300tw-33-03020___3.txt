your first choice should depend in what you want to work with, open source (free) or closed source (paid).
mark73 wrote: i know there are biases...
i will not discuss further regarding classic asp since it is really  already legacy tech, and unless you have a very specific reason to learn it (supporting legacy system) then you are advised against it.
what do you like and dislike about it.
however it is not all “sunshine and rainbows”.
unfortunately there is only so much time and far too many areas of interest to  cover all the bases so i must try to choose wisely.
classic asp is outdated and could be  thought of as microsoft’s first attempt at web server side technology.
in terms of security generally speaking unless the developer is extremely “sloppy” than it is fairly secure “out of the box”.
in my view this would be a more advantageous option, because both technologies have a lot to offer.
pm posts: 38 location: wisconsin, usa mark73 wrote: no need to thank me
[question] posted: mon apr 02, 2012 8:03
this would be ideal.
are you familiar  with both and if so could you summarize the differences for me?
however if you require to do something that is  outside of the scope of the framework; then you will have to battle with the  framework in order to do what you want to achieve.
pm posts: 47  hi encryptedbytes, just to  clarify, when you say asp, do you mean "classic asp" or  "asp.net" as in aspx?
asp.net is simply a “web framework” that uses the .net platform to power it.
the other problem is  "spaghetti code" this is when sql, business logic, and presentation  logic are all mashed into one place.
however it is an uphill struggle, because it started of from the wrong foot!
even if my post was of some benefit to someone then i feel i'm following the it ninja's main ethos!
i'm an  experienced windows user so asp with sql is going to be right up my alley, but  i see php and mysql all over the place and i've read good things about them.
the second part is  the bcl(base class library).
it  is script based(visual basic or jscript) and executes on the server.
group 2 (closed source; ms  stack): in this group are classical asp and asp.net along  with ms sql server.
i feel i need to give this  some thought and it deserves a detailed answer.
this already gives me something to "chew on", so thanks for that.
if you are aware of how conceptually java works then “.net” has many similar parallels.
.net is a very  large topic and i can’t do it justice in this small write-up and i highly  suggest you read up on this topic for further information.
are there major  advantages or disadvantages involved?
so i promise i will get back to on this!
the it ninja the comprehensive online it community.
before committing to a particular path i'll likely "sleep on it" and return to your posts a couple more times to be (more) sure i am heading in the direction best suited to me.
i don't think a little opinion mixed in with the fact is going to hurt anyone.
in terms of php from a development  perspective it has a "double edged" sword effect: in one  sense it is incredibly easy to do common things (90% of most web application  functions, eg send email, connect to database, parse data etc).
the other issue is that security is not "default", in other words one has to actively know what they are doing to avoid serious security issues.
i'm  sure others here will find this all very informing as well, thank you very much  for laying it out so well!
the results have been a disastrous, the  industry has been effected in a negative way, of course one can not put 100%  blame on php alone it is far more complex than that.
encryptedbytes last edited by encryptedbytes on thu mar 29, 2012  10:49 pm, edited 1 time in total.
in summary: quote: asp.net  is like an advanced spacecraft, it has all the advanced bells and whistle.
however frameworks, invariably become yet another layer of abstraction.
this means one can share code across different  domains(example, desktop application classes could be used in web  application projects and vice versa).
_________________ ~ encryptedbytes top display posts from previous: all posts1 day7 days2 weeks1 month3 months6 months1 year sort by authorpost timesubject ascendingdescending print view previous topic | next topic page 1 of 1 [ 10 posts ] who is online users browsing this forum: no registered users and 1 guest you cannot post new topics in this forum you cannot reply to topics in this forum you cannot edit your posts in this forum you cannot delete your posts in this forum you cannot post attachments in this forum search for: jump to: select a forum ------------------
it takes great care and experienced and highly competent developers to create very clean and highly maintainable code.
classic asp is outdated and could be thought of as microsoft’s first attempt at web server side technology.
in fairness, php has come a long  way and has strived in each release to "improve" the many many  language design issues.
unlike php and other server side scripting technologies, asp.net are source compiled, which means that they are very efficient for creating cpu demanding web applications.
i like the idea of open-source  and free and also get a sense that php/mysql will be easier to digest and get  familiar with.
i would add further, that another option would be to actually learn both.
despite being primarily a windows user, my  initial thoughts are to go the php/mysql route.
the second part is the bcl(base class library).
in  summary: quote: using php, is like driving a  fast racing car, without any safety gear, no helmets, no harness.
this is a huge problem because this reduces maintainability; readability and makes it very difficult to extent etc.
[question] posted: mon apr 02, 2012 6:53 pm advisor joined: sun mar 25, 2012 7:22
however it is an uphill struggle, because it  started of from the wrong foot!
in my view this would be a more  advantageous option, because both technologies have a lot to offer.
however in reality it is almost always run in a windows environment.
perhaps it is for this very reason that as of late many "web frameworks" have become so incredibly popular.
i'm sure others here will find yours posts  quite informative as well.
asp/asp.net and sql server //todo
posted: thu mar 29,  2012 10:48 pm advisor joined: sun mar 25, 2012 7:22 pm posts: 38 location: wisconsin, usa  mark73 wrote: as promised here is my answer, please  note these are my views only
asp.net is simply a “web framework” that uses  the .net platform to power it.
they are created to solve this very issue of  "separation of concerns".
in this group there is also the "java stack"  jsp and it is also cross platform.
there are also many downsides: it is not really cross platform, picking asp.net means you are effectively tied to the microsoft platform.
however this "ease" of use comes at a major cost, the language is a total failure.
the other problem is one of "barrier to entry"; because its so "easy" to "learn" php.
i don't think a little opinion mixed in with the fact  is going to hurt anyone.
pm posts: 47 hi encryptedbytes, just to clarify, when you say asp, do you mean "classic asp" or "asp.net" as in aspx?
is it  difficult to learn? _________________ ~
before committing to a particular path i'll likely  "sleep on it" and return to your posts a couple more times to be  (more) sure i am heading in the direction best suited to me.
.net is a very large topic and i can’t do it justice in this small write-up and i highly suggest you read up on this topic for further information.
in theory at least, not only is the .net platform language agnostic(having over 40 languages) but also os independent (via mono project).
pm posts: 38 location: wisconsin,  usa  mark73 wrote: part ii asp.net and  sql server...
but i'm not really sure which is going to be the best bet for me.
reading back my post, i know there are  biases, this was not intentional but a side effect of working on one tech more  than another.
i'm looking forward to the next part  covering the asp/closed source end of the equation, but no need to be in a  rush, there are several points to consider already in the php/open source  information that you've posted.
both use the exact same underlying technology, however are abstracted differently.
“.net” in a one-liner explanation can be thought of as microsoft’s “answer” to java.
however in reality it is almost always run in a windows  environment.
[question] posted: mon apr 02, 2012 3:21 pm advisor joined: sun feb 26, 2012 11:44 am posts: 41 part ii asp.net and sql server asp.net (which should not be confused with classic asp) are both microsoft propriety closed source web technologies.
welcome introduction house rules career development curriculum vitae it interviews skills and roles performance reviews and raises and general job advice front ui development graphics design css and html
the .net platform allows multiple languages to target  the clr, this is done by first compiling source could to msil(microsoft  intermediate language), which can then be turned into highly optimised clr  byte code.
but if you want to do something really fast and really simply and for free then this is not it.
it is paid software; you will need to pay for licences for commercial uses.
in summary: quote: using php, is like driving a fast racing car, without any safety gear, no helmets, no harness.
the bcl provides a common set of  libraries to handle the usual software tasks such as graphics processing and  file handling.
it is paid software; you will need to pay for licences for commercial  uses.
again, thanks for your efforts!
asp.net provides a whole host  of advanced features such as custom controls, global .asax handlers, generic  handles, master pages, and many other features to build enterprise level  systems.
in some online communities it can be difficult to get a response to these kinds of questions, and often it becomes a debate between the respondents, leaving the asker more confused than they were to begin with.
so i promise i will get back to  on this!
adding a new layer of abstraction will  mean that as long as what you have in mind is within the strictures of the  framework then all is possible.
[question] posted: mon apr 02, 2012  6:53 pm advisor joined: sun mar 25, 2012 7:22
[question] posted: mon apr 02,  2012 3:21 pm advisor joined: sun feb 26, 2012 11:44 am posts: 41 part ii asp.net and sql server asp.net (which  should not be confused with classic asp) are both microsoft propriety  closed source web technologies.
[question] posted: tue apr 03, 2012 4:35 am advisor joined: sun mar 25, 2012 7:22
group 2 (closed source; ms stack): in this group are classical asp and asp.net along with ms sql server.
in order to understand asp.net and how its related eco system fit in, you first need to understand what “.net” is.
it's when opinion supersedes the information  that the message gets lost and little or nothing is actuallylearned.
having worked with all the technologies mentioned (bar jsp); here is the breakdown: i would like to make two groups: group 1 (open source; lamp stack): this group is the php and mysql combination, and will be typically run under linux based servers.
in terms of security generally speaking unless the developer is  extremely “sloppy” than it is fairly secure “out of the  box”.
this has meant that a lot of "non developers"  or people who have no formal training as professionally programmers get into  "web development".
if you are aware of how conceptually java works  then “.net” has many similar parallels.
again, thanks for  your efforts!
encryptedbytes last edited by encryptedbytes on thu mar 29, 2012 10:49 pm, edited 1 time in total.
top mark73 post subject:
javascript seo software development web developement general development databases and web servers sql databases web servers servers linux and unix based windows lounge cafe member content powered by phpbb ® forum software © phpbb group codfaction style by daniel st. jules of gamexe.net
however frameworks, invariably  become yet another layer of abstraction.
i'd love to hear from the titn community about the pros and cons of these languages and especially from others with experience with more than one of them.
mark73 wrote:  i would add further, that another option would be to actually learn both.
is it difficult to learn? _________________ ~
despite being primarily a windows user, my initial thoughts are to go  the php/mysql route.
however i can give you a brief idea.
this means one can share code across different domains(example, desktop application classes could be used in web application projects and vice versa).
_________________ ~ encryptedbytes top mark73 post subject:
in terms of tooling, it is really mature and feature complete.
asp/asp.net and sql server
of course php can be used with any sql solution, and could be used with microsoft sql server.
i'm glad to have found a place like titn with members such as yourself!
i  haven't read much about jsp, but it sounds a bit interesting too.
i will not discuss further regarding classic asp since it is really already legacy tech, and unless you have a very specific reason to learn it (supporting legacy system) then you are advised against it.
pm posts: 38 location: wisconsin, usa  mark73 wrote: no need  to thank me
pm posts: 38 location: wisconsin, usa mark73 wrote: part ii asp.net and sql server... thanks so much for taking the time to follow up on your previous post with the other part of the equation, you've really laid out the differences and advantages/disadvantages in a very accessible way and have given me a good understanding of the major factors in deciding which way to go.
studio(the .net ide).
i'm sure others here will find yours posts quite informative as well.
it is not open source, and microsoft has an aggressive  development cycle, constantly updating and changing the technologies.
i haven't read much about jsp, but it sounds a bit interesting too.
the .net platform allows multiple languages to target the clr, this is done by first compiling source could to msil(microsoft intermediate language), which can then be turned into highly optimised clr byte code.
however this is  not the norm.
studio(the  .net ide).
i feel i need to give this some thought and it deserves a detailed answer.
in fairness, php has come a long way and has strived in each release to "improve" the many many language design issues.
posted: thu mar 29, 2012 10:48 pm advisor joined: sun mar 25, 2012 7:22 pm posts: 38 location: wisconsin, usa mark73 wrote: as promised here is my answer, please note these are my views only
both use the  exact same underlying technology, however are abstracted differently.
it seems like php, asp, and jsp are the common language for this,
follow @theitninjas board index » software development » web developement page 1 of 1 - board index - search - register [ 10 posts ] php, asp, or jsp?
if you look at the history behind the birth of php one can understand why this is the case.
it's the least i can do for your efforts.
top encryptedbytes post subject:
posted: wed mar 28, 2012 8:29  am advisor joined: sun feb  26, 2012 11:44 am posts: 41  hi encryptedbytes, a very  good question, i'm going to ear mark this for later.
one example could be a wamp stack: using a  windows based os with php and mysql.
in terms of php from a development perspective it has a "double edged" sword effect: in one sense it is incredibly easy to do common things (90% of most web application functions, eg send email, connect to database, parse data etc).
the other issue is that security is not  "default", in other words one has to actively know what they are  doing to avoid serious security issues.
in the  winforms world, the abstraction is an event based paradigm(those coming  from a desktop programming environment will be very familiar with this).
it takes a master driver to race such a car.
more) sure i am heading in the direction best suited to me.
.net has two parts, first there is the virtual  machine called the clr(common language runtime).
hello encryptedbytes, no need to thank me
even if my post was of some benefit to someone then i feel i'm following  the it ninja's main ethos!
i like the idea of open-source and free and also get a  sense that php/mysql will be easier to digest and get familiar with.
top encryptedbytes post  subject:
.net has two parts, first there is the virtual machine called the clr(common language runtime).
top encryptedbytes post subject: re: php, asp, or jsp?
posted: wed mar 28, 2012 7:50 pm advisor joined: sun mar 25, 2012 7:22 pm posts: 38 location: wisconsin, usa  dereckt wrote: hi encryptedbytes, just to clarify, when you say asp, do you mean  "classic asp" or "asp.net" as in aspx?
thanks so much for taking the time to follow  up on your previous post with the other part of the equation, you've really  laid out the differences and advantages/disadvantages in a very accessible way  and have given me a good understanding of the major factors in deciding which  way to go.
however if you require to do something that is outside of the scope of the framework; then you will have to battle with the framework in order to do what you want to achieve.
focusing on all aspects of it from it jobs to software development.
pm advisor joined: sun feb 26, 2012 11:44 am posts: 41 encryptedbytes wrote: mark73 wrote: part ii asp.net and sql server... thanks so much for taking the time to follow up on your previous post with the other part of the equation, you've really laid out the differences and advantages/disadvantages in a very accessible way and have given me a good understanding of the major factors in deciding which way to go.
i'd  love to hear from the titn community about the pros and cons of these languages  and especially from others with experience with more than one of them.
perhaps it is for this very  reason that as of late many "web frameworks" have become so  incredibly popular.
encryptedbytes top mark73 post subject:
it is for this  reason that most professional developers look with "disapproval" when  it comes to php.
mark73 wrote: i would add further, that another option would be to actually learn both.
however this is a rare combination.
unfortunately there is only so much time and far too many areas of interest to cover all the bases so i must try to choose wisely.
in  order to understand asp.net and how its related eco system fit in, you first  need to understand what “.net” is.
what an excellent, well thought out, and informative post!
it takes a  master driver to race such a car.
mark73 wrote:  i know  there are biases...
posted: wed mar 28, 2012 8:29 am advisor joined: sun feb 26, 2012 11:44 am posts: 41 hi encryptedbytes, a very good question, i'm going to ear mark this for later.
of course php can be used with  any sql solution, and could be used with microsoft sql server.
the bcl provides a common set of libraries to handle the usual software tasks such as graphics processing and file handling.
pm posts: 38 location: wisconsin,  usa  i have a pretty good grasp of basic html and have been learning css and  some javascript, but i think i need to know more about doing things on the  server side.
i'm glad to have found a  place like titn with members such as yourself!
i'm sure others here will find this all very informing as well, thank you very much for laying it out so well!
because your opinion is based on experience i think it is both relevant and valuable.
reading back my post, i know there are biases, this was not intentional but a side effect of working on one tech more than another.
_________________ mark73 post subject:
however this is not the norm.
are there major advantages or disadvantages involved?
are you familiar with both and if so could you summarize the differences for me?
posted: wed mar 28, 2012 8:25 am advisor joined: tue feb 28, 2012 1:40
and i advise you do your own testing and research .
login | register | faq
sorry i will post the rest later!
if you look at the history behind the birth of  php one can understand why this is the case.
once again, asp.net can also be used with mysql (as mysql  is cross platform).
it takes great care and experienced and highly competent developers to create  very clean and highly maintainable code.
as such winforms developers must understand “page cycles” in order  to effectively develop web application.
i like the idea of open-source and free and also get a sense that php/mysql will be easier to digest and get familiar with.
the results have been a disastrous, the industry has been effected in a negative way, of course one can not put 100% blame on php alone it is far more complex than that.
in such cases, php or even classic asp would be much better  suited.
but if you want to do something really fast and really simply and for free then  this is not it.
of course this combination is  not strictly the only combination.
[question] posted: wed mar 28, 2012  6:57 am advisor joined: sun mar 25, 2012 7:22
asp.net currently comes in two “camps”, one is the  “established winforms” and other is the fairly newer  “mvc” ala ruby/python inspired web framework.
however i can give  you a brief idea.
one example could be a wamp stack: using a windows based os with php and mysql.
re: php, asp, or  jsp?
once you have made this choice, here are the details of each technology from my perspective: php and mysql it is cross platform and free.
pm advisor joined: sun feb 26, 2012 11:44 am posts: 41   encryptedbytes wrote: mark73 wrote: part ii asp.net and sql server... thanks so much for taking  the time to follow up on your previous post with the other part of the  equation, you've really laid out the differences and advantages/disadvantages  in a very accessible way and have given me a good understanding of the major  factors in deciding which way to go.
_________________ ~ encryptedbytes top display posts from  previous: all posts1 day7 days2 weeks1 month3 months6 months1 year  sort by authorpost timesubject ascendingdescending print  view previous topic | next topic page 1 of 1
it is for this reason that most professional developers look with "disapproval" when it comes to php.
the other problem is "spaghetti code" this is when sql, business logic, and presentation logic are all mashed into one place.
i'm looking forward to the next part covering the asp/closed source end of the equation, but no need to be in a rush, there are several points to consider already in the php/open source information that you've posted.
before committing to a particular path i'll likely "sleep on it" and return to your posts a couple more times to be (
it's when opinion supersedes the information that the message gets lost and little or nothing is actuallylearned.
who knows though... maybe after getting my feet wet with one i may develop an interest in going even further and start looking into the other.
pm posts: 38 location: wisconsin, usa i have a pretty good grasp of basic html and have been learning css and some javascript, but i think i need to know more about doing things on the server side.
in some online communities it can be difficult to get a response to these kinds of  questions, and often it becomes a debate between the respondents, leaving the  asker more confused than they were to begin with.
asp.net provides a whole host of advanced features such as custom controls, global .asax handlers, generic handles, master pages, and many other features to build enterprise level systems.
having worked with  all the technologies mentioned (bar jsp); here is the breakdown: i  would like to make two groups: group 1 (open source; lamp  stack): this group is the php and mysql combination, and  will be typically run under linux based servers.
however it is not all “sunshine and  rainbows”.
in this group there is also the "java stack" jsp and it is also cross platform.
this has meant that a lot of "non developers" or people who have no formal training as professionally programmers get into "web development".
there are also many downsides: it is not really cross  platform, picking asp.net means you are effectively tied to the microsoft  platform.
because your opinion is based on experience i think it  is both relevant and valuable.
although via  the "mono" project one can technically run asp.net platform under  linux, its not a very popular combination.
once you have made this choice, here are the details of each  technology from my perspective: php and mysql it is cross platform and free.
before committing to a particular path i'll likely "sleep on it" and  return to your posts a couple more times to be (more) sure i am heading in the  direction best suited to me.
it is script based(visual basic or jscript) and executes on the server.
it’s far more complex, sometimes it may even be overkill if you want to do simple things.
posted: wed mar 28, 2012 8:25  am advisor joined: tue feb  28, 2012 1:40
in such cases, php or even classic asp would be much better suited.
although via the "mono" project one can technically run asp.net platform under linux, its not a very popular combination.
of course this combination is not strictly the only combination.
re: php, asp, or jsp?
posted: thu mar 29, 2012 9:41 am advisor joined: sun feb 26, 2012 11:44 am posts: 41 hello encryptedbytes, as promised here is my answer, please note these are my views only and i advise you do your own testing and research.
posted: thu mar 29, 2012 9:41  am advisor joined: sun feb  26, 2012 11:44 am posts: 41  hello encryptedbytes, as  promised here is my answer, please note these are my views only
top dereckt post subject:
[question] encryptedbytes post subject:
in the winforms world, the abstraction is an event based paradigm(those coming from a desktop programming environment will be very familiar with this).
unlike php and other  server side scripting technologies, asp.net are source compiled, which means  that they are very efficient for creating cpu demanding web applications.
it is not open source, and microsoft has an aggressive development cycle, constantly updating and changing the technologies.
in summary: quote: asp.net is like an advanced spacecraft, it has all the advanced bells and whistle.
despite being primarily a windows user, my initial thoughts are to go the php/mysql route.
asp.net currently comes in two “camps”, one is the “established winforms” and other is the fairly newer “mvc” ala ruby/python inspired web framework.
who knows though... maybe  after getting my feet wet with one i may develop an interest in going even  further and start looking into the other.
they are created to solve this very issue of "separation of concerns".
this is a huge problem because this  reduces maintainability; readability and makes it very difficult to extent etc.
if i'm going to learn something new i should probably go with the  latest and greatest, which would be asp.net, but if "classic" asp is  still in wide use it wouldn't hurt to consider it as well.
inexperienced drivers will go fast, however they will also likely crash it and die in a blazing inferno.
and i  advise you do your own testing and research.
“.net” in a  one-liner explanation can be thought of as microsoft’s  “answer” to java.
it’s far more complex, sometimes it may even be overkill if you want to  do simple things.
[question] posted: wed mar 28, 2012 6:57 am advisor joined: sun mar 25, 2012 7:22
as such winforms developers must understand “page cycles” in order to effectively develop web application.
once again, asp.net can also be used with mysql (as mysql is cross platform).
your first choice should  depend in what you want to work with, open source (free) or closed source  (paid).
i'm an experienced windows user so asp with sql is going to be right up my alley, but i see php and mysql all over the place and i've read good things about them.
inexperienced drivers will go fast,  however they will also likely crash it and die in a blazing inferno.
in theory at least, not only is the .net platform language  agnostic(having over 40 languages) but also os independent (via  mono project).
posted: wed mar 28, 2012 7:50 pm advisor joined: sun mar 25, 2012 7:22 pm posts: 38 location: wisconsin, usa dereckt wrote: hi encryptedbytes, just to clarify, when you say asp, do you mean "classic asp" or "asp.net" as in aspx?
the other problem is one of  "barrier to entry"; because its so "easy" to  "learn" php.
if i'm going to learn something new i should probably go with the latest and greatest, which would be asp.net, but if "classic" asp is still in wide use it wouldn't hurt to consider it as well.
almost the entire development can be done from inside of visual
adding a new layer of abstraction will mean that as long as what you have in mind is within the strictures of the framework then all is possible.