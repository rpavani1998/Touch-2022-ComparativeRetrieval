i would also add some higher-level (less computer-science oriented, simply because the task at hand is generating web pages 'on the fly').
firstly managment of privilege - but that applies (afaik) to any web-based system.
"c:\usr\local\j2sdk1.4.2_03\jre\bin\server\jvm.dll" java.library.path =
i would say that while php has tremendous strength, it equally lacks in its implementation of oop requirements.
cold fusion е  разработен  за хора,  които нямат  добри  програмистки  умения,  докато php  залага  основно на  това.
html отколкото  perl.
php разполага с почти всички хубави функционалностти на perl: конструкции, сиктасис и т.н., без да това да го прави сложен и объркан като perl.
in php, it's possible to make sure your include files  are not included more than once.
стандартните  компоненти  на asp са  изключително  ограничени и  ако имате  нужда от  по-сложни  функции, като  операции с ftp  сървъри, ще  се наложи да  си закупите  допълнителни  компоненти.
"php is commonly said to be faster and more efficient for complex programming tasks and trying out new ideas.
with a single line - header("content-type: text/vnd.wap.wml"); you can be in another "mobile" dimension :).
php comes closest to solving my problems, many of which are very much in the enterprise applications domain.
its true  that there is a bit more code required to supplement things that $soft and  others give you for a price, but the bottom line is that most of these things  are not very difficult to do properly.
yes, php is an interpreted language (but...php accelerator?
the fact of the matter is that the world is rapidly shifting towards an soa mentality, and rich applications presented through the web.
where as in asp/vbscript, you can't due to the fact that ssi is processed before the vb code.
asp2php е най-често споменавания метод както тази» възможност от страната на клиента.
c# (.net), java -- hell even actionscript have a  fully oo implementation allowing effective implementation of recognized design  patterns.
c# (.net), java -- hell even actionscript have a fully oo implementation allowing effective implementation of recognized design patterns.
it'd be a sad world  to live in where there was only one programming language/methodoly/idiom -  diversity is a great thing.
i believe that the php community today  suffers from this mentality.
this is particularly evidenced in  the lack of strict type casting.
една  от  положителните  страни на asp е  използването  на vbscript.
in other words, if you are using a connected data source, such as a sql database, try shifting the processing time back a layer by providing a medium interval return from the data source to an xml file that the web service can access.
една от положителните страни на asp е използването на vbscript.
jsp have almost no bug at all, or at least i did not find any, but it is hard to debug.
let's get rid of all the back support and compatabilities for  legacy code in favor of maturing the language and increasing its value (and  decreasing objections from the enterprise market) daniel at  cedilotte dot com 03-nov-2005 07:58
there's also the problem of  namespace collisions in large apps.
web consultant we probably all agree that php, compared to what coldfusion was at the time of the writing of that part of this faq, is far more capable of complex scripts, and also generally outperforms coldfusion in similar tasks, too.
истинският  език за  програмиране  на asp е visual basic script или jscript.
once these issues are addressed i think we'll see more support of php, and less resistance to its place in the enterprise.
currently, asp.net is at the same level than php and, i  would say that is better because i can choose what language to use (php is also  available for .net by the way).
and i called it "init fileobject"  why always those objects...
php разполага  с почти  всички  хубави  функционалностти  на perl:  конструкции,  сиктасис и  т.н., без да  това да го  прави сложен  и объркан  като perl.
migrating from php 4 to php 5 php and com last updated:  fri, 02 jan 2009 add a note user contributed notes php и  останалите  езици tony 16-apr-2008 11:01 the paragraph on "cold fusion" (it's  actually "coldfusion", by the way), and in the included link is so  woefully inaccurate and out of date, that it's not even funny.
you can easily make dynamic wml pages for mobile phone users with php.
най-голямото  предимство  на php пред perl е, че
another thing related  to php vs asp.
your comparisons are interesting and well thought out.
"c:\usr\local\php\extensions" to correctly utilize php in enterprise applications, one may want to bear in mind that if php is being used synchronously, it should be kept to the presentation layer only.
and i like his  spirit.
all the php api functions are there and there's  plenty of examples due to the many existing modules and their source codes.
while that may be relevant for application programming, it's totally irrelevant for web programming.
should become perl is a very tried and true language; it's been  around since the late eighties, but php is maturing very quickly.
asp не е точно език за програмиране, той е съкращение от active server pages.
i believe that the php community today suffers from this mentality.
най-големият  недостатък  на asp е, че в  частност е  език  използван  само с microsoft internet information server  (iis).
cold fusion  е  предназначен  само за win32, solaris, linux и  hp/ux.
копие от него можете да откриете» тук.
take all you need ... and even more.add a note
also, asp.net can make things that php don't such as manipulate the server's filesystem (y use that technique in the database system of my own cms made with .net) and not only the files that are inside the website.
yes, php is an interpreted  language (but...php accelerator?
compiled java classes act more like optimised / confuscated scripts and still needs an interpreter in the end.
abstraction is a stupid thing to bicker  about.
there are issues with using php for this kind of application.
how about coldfusion mx?
coldfusion mx server cost about $1300, but the total built in functionality and versatility makes it a worthwhile.
in my mind, the proof is in the pudding - which technology results in the better, more production-ready applications?
i hope that the better  wins symcbean 21-feb-2005 01:00
истинският език за програмиране на asp е visual basic script или jscript.
web programming, imho, is about being able to get a quick, organized solution out quickly so that it can be maintained and dynamic.
и ефикасен при сложни задачи и нововъведения.
php is generally referred to as more stable and less resource intensive as well.
the fact of the matter is that the world is  rapidly shifting towards an soa mentality, and rich applications presented  through the web.
php е  разработен  специално за  уеб  програмиране,  докато
той е  относително  лесен за  разбиране  език особено,  ако вече  знаете как се  програмира  на visual basic.
добро  резюме по  въпроса
but what's always been lacking has been fully implemented oop.
it's necessary an update to this article.symcbean currently, asp.net is at the same level than php and, i would say that is better because i can choose what language to use (php is also available for .net by the way).
in light of this php should be regarded as valuable tool for application development.
if you still cannot get the php processes back up to par, then you should consider using php as an asynchronous page constructor, thus shifting php itself back to the business process layer and allowing the web service (apache, iis, netscape, etc.) to return html files instead.
i truely believe that also picks a part of the puzzle...
but i did find out in only 1 hour that the syntax of php gives you much less typing than asp, that is a fact.
abstraction is a stupid thing to bicker about.
i'm not familiar with coldfusion mx, but as it sounds like it's a rather new product, i would draw the conclusion that it isn't what the writer of this faq had in mind when addressing php vs. coldfusion comparisons.
the only problem is that you take at least twice times to make same program on jsp and it is not even close as well documented and easy to use as php.
as a pure cs language, there is no doubt that java is superior.
asp се  смята за  по-бавен,  по-тежък и  по-нестабилен  език от php.
but as a web page generator, i have moved from a java-centric approach to a php approach, leveraging servlets or beans as needed "under the covers".
да, от  страната на  сървъра»
i'll admit that for a very few applications, then  server hardware is more expensive than developer time - like if you're turning  around more than 500000 hits/hour, then it may work out cheaper to develop in  'c' with half the servers than php, but this is far from the sort of volume  i've seen on an enterprise application.
your point about a string being encapsulated in a string class is somewhat irrelevant if you are a programmer cranking markup.
well, all i can say about asp.net and the .net frameworks is that rather than adopt them we decided to switch all of our development to php and other open-source tools.
compiled java classes act more like  optimised / confuscated scripts and still needs an interpreter in the end.
друга силна страна на cold fusion са отличните му възможности за търсене, но някои специалисти твърдят, че те не са функционалност, която трябва да бъде включена в един скриптов език за уеб.
also,  asp.net make a lot easier for programmers to make programs that communicate  with the web site without needing of a browser (i use that technique in a small  application that allows my site's users to "navigate" the site and  also send and receive personal messages a lot faster than with the web) php needs to get improved to be better than asp.net.
гъвкавостта/сложността на perl го прави по-удобен за писане на код, с който друг програмист би имал трудности при разчитането.
how about php and java?cash at nospam dot thesilverside dot com you can use php vs java in following order 1.
in php.ini file add - extension=php_java.dll - [java] java.class.path = "c:\usr\local\php\extensions\php_java.jar" java.home = "c:\usr\local\j2sdk1.4.2_03" java.library =
halcyon  (платена), chili!soft asp  от» chili!soft  (платена).
i think there's been a slight overlook within the comments about php's model  for oop.
first create a file object...
that makes the syntax of for example the "for" statement less to my desire, which i like better in vbscript (asp)...
firstly, i was absolutely thrilled to see the enhancements  of php5.
web consultant since 1994 19-jan-2005 09:26 ...
all the options and extras from db+php oriented web-site can easily be transfomed into a wap version of your site.
if you're on windows) would be more appropriately used within the business process and data access layers.
php does not have the out-of-the-box functionality for the above needs.
the intern 02-aug-2007 11:04 a comparison between php and  python can be found on python's website:http://wiki.python.org/moin/pythonvsphp fabioissamu at yahoo dot com 21-feb-2007 09:48 tim bray, who - among many other things - co-edited the xml 1.0 and xml  namespace definitions, was invited to the international php conference to give  a keynote about "how to combine php technology with java based on  enterprise systems".
i do like the syntax of php a lot and the speed of it is great, although the client/server interactivity of asp with windows and mac clients is what i'm excited to see grow with future versions of php.mavi_br at someplace dot com i've been working with php, jsp, java and cfm for 2 years now.nospam at phppatterns dot com i can tell that for web development only, php is not nearly as good as cfm on speed, on ease to use and on interaction.
search for in the function list all php.net sites this mirror only online documentation bug database site news archive all changelogs just pear.php.net just pecl.php.net just talks.php.net general mailing list developer mailing list documentation mailing list view this page inenglish brazilian portuguese french german japanese korean polish romanian russian spanish turkish other
php vs coldfusion mx http://www.macromedia.com/devnet/mx/coldfusion/articles/php_cfmx.html
really...  now, i know the argument is that php is related to the web -  not application development.
i really  must take issue with (cash at nospam dot thesilverside dot com)'s comments  regarding enterprise applications and php.
overall, well done - and a very popular topic!
i'm very dissappointed to see that languages (like c#), sponsored by the likes of m$ have been able to develop such mature oo languages so rapidly, while php remains... well... practically in the stone age.
all the php api functions are there and there's plenty of examples due to the many existing modules and their source codes.19-mar-2006
да, от страната на сървъра»
how about php and java?
php comes closest to solving  my problems, many of which are very much in the enterprise applications domain.
the same thing in php  that's all...
perl е  добре  изпитан и  стабилен  език, излязъл  още през 80-те  години, но php се  развива  много бързо.
the fact of the matter is that most of these new and "improved" development tools dont save much, if any money, and are mostly, unnecessary.
ahumeniy at vtr  dot net 21-may-2005 07:43
a comparison between php and python can be found on python's website:http://wiki.python.org/moin/pythonvsphpfabioissamu at yahoo dot com tim bray, who - among many other things - co-edited the xml 1.0 and xml namespace definitions, was invited to the international php conference to give a keynote about "how to combine php technology with java based on enterprise systems".
съществува ли автоматично конвертиране от asp към php?
thanks to it's common language  runtime, .net technology allows the programer to choice wich language to use.
if you really want to maintain higher speed on presentation, then perhaps one would want to incorporate asynchronous instead of synchronous processing into the presentation layer of your application.
asp servers crash very much.
i would say that while php has  tremendous strength, it equally lacks in its implementation of oop  requirements.
php  работи на  почти всички  платформи;
ive programmed in c, c++, vb, asp (since the  original beta in 1995) and asp.net, com, com+, .net
now, granted, there are ways to do things like method overloading, but c`mon....
also, asp.net make a lot easier for programmers to make programs that communicate with the web site without needing of a browser (i use that technique in a small application that allows my site's users to "navigate" the site and also send and receive personal messages a lot faster than with the web) php needs to get improved to be better than asp.net.
по подразбиране поддръжката на
гъвкавостта/сложността  на perl го прави  по-удобен за  писане на  код, с който  друг  програмист  би имал  трудности  при  разчитането.
well, all i can say about asp.net and the .net frameworks is that rather  than adopt them we decided to switch all of our development to php and other  open-source tools.
adding more tiers into your application is a recipe for disaster since it reduces scalability by creating bottlenecks/crossovers and has a big impact on transparency.
---------------------------------
iis сървърите улеснявайки първоначалното му използване.
съществуват  няколко  проекта в  процес на  разработка,  които  позволяват
if you start out with php, ask yourself how much time and money you have in developing the source to provide the functionality you are looking for.
the intern i'm not going to debate the the pros and cons of each language, but please -- let people be informed by information that's more based in reality.
това  ограничава  възможностите  й до win32  базирани  сървъри.
asp  да бъде  използван и в  други  платформи и  уеб сървъри:»  instantasp от »
i put this into a function because the line is simpy to long
atoi_monte at hotmail dot com take openening of a file in asp...
---------------------------------anonymous at coward dot com quote: this is a comparison between php and java/jsp: http://www.tek271.com/articles/javaorphp.html any comments?
cold fusion е разработен за хора, които нямат добри програмистки умения, докато php залага основно на това.
embedding object-oriented code into a page can be much more painful (and slower to execute) than leveraging traditional coding techniques.
the only disadvantage about php is the somewhat quirky language and inconsistant (and long) function names, which makes it hard for newbies to learn from scratch.
the fact of the matter is that most of these new and  "improved" development tools dont save much, if any money, and are  mostly, unnecessary.
in php.ini file  add - extension=php_java.dll
php работи на почти всички платформи; cold fusion е предназначен само за win32, solaris, linux и hp/ux.
стандартните компоненти на asp са изключително ограничени и ако имате нужда от по-сложни функции, като операции с ftp сървъри, ще се наложи да си закупите допълнителни компоненти.
той е относително лесен за разбиране език особено, ако вече знаете как се програмира на visual basic.
perl е  предназначен  за много  повече неща и  заради това  може да бъде  много  по-сложен.
frameworks and in  c("sharp").
i agree with web consultant concerning to asp.net and .net framework.
php обикновено  е по-стабилен  и се нуждае  от по-малко  ресурси,  докато cold fusion има  по-добра  обработка на  грешките,  връзката с  бази данни и  датите,  въпреки че в php 4  е поставено  началото на  отделен слой  за връзка с  бази данни.
thanks to it's common language runtime, .net technology allows the programer to choice wich language to use.
one of the first things i saw was that php is based on c, which is one of the hardest programming languages in the world.
also you can write caching *with* php, also checkouthttp://shootout.alioth.debian.org/, and have you seen the benchmarks for pharrot?).
now,  granted, there are ways to do things like method overloading, but c`mon....
here's a php coders response to abduls "java or php" article?dir at badblue dot com "php or java?": http://www.phppatterns.com/index.php/article/articleview/12/1/3/ to ahabra,developer at i-space dot org very interesting page.
adding more tiers into your application is a recipe for disaster  since it reduces scalability by creating bottlenecks/crossovers and has a big  impact on transparency.
cold fusion  разполага с  добро ide и като  цяло е  по-лесно да  се започне с  него, докато php  първоначално  изисква  повече  познания.
berjoza at  bigmir dot net 26-mar-2004 06:25
during his keynote, he presented some very interesting comparison  between the popular development "frameworks" php, ruby on rails (ror,  rails) and java http://www.tbray.org/talks/php.de.pdf in  that he show php the first in scalability bb at servertje dot nl 06-jun-2006 02:58
i've been using php for... gees... a long time now.
it'd be a sad world to live in where there was only one programming language/methodoly/idiom - diversity is a great thing.
therefore, some higher-level things to consider: 1) compare the complexity of real-world production applications (postnuke.com vs ?
and i like his spirit.
it's worth building it out further.
asp only runs on windows servers, and we all know how much windows crashes.
we simply got tired of all the churing of the development platform from $soft: things like changing api's during final betas, undocumented api's etc.berjoza at bigmir dot net ive programmed in c, c++, vb, asp (since the original beta in 1995) and asp.net, com, com+, .net
i agree with web consultant  concerning to asp.net and .net framework.
we have found php to be an excellent replacement for  similar $soft tools and technologies for web development.
you can use php vs java in following order 1.
in discussion boards, jpgraph vs. ?
3) compare native database and directory support.
php се смята за по-бърз
firstly managment of privilege - but  that applies (afaik) to any web-based system.
това ограничава възможностите й до win32 базирани сървъри.
also you can write caching *with* php, also  checkouthttp://shootout.alioth.debian.org/, and have you seen the benchmarks  for pharrot?).
there's a lot been written elsewhere on  php and scalability which i won't repeat here.
let's get rid of all the back support and compatabilities for legacy code in favor of maturing the language and increasing its value (and decreasing objections from the enterprise market) another thing related to php vs asp.ahumeniy at vtr dot net
sounds like this faq needs to be updated.phalcomb at arbolnet dot com how about asp.net and .net framework?
frameworks and in c("sharp").
probably the worst comparison i have seen in a long while.
there's a comma splice in this article:good dot midget at gmail dot com perl is a very tried and true language, it's been around since the late eighties, but php is maturing very quickly.
there's also the problem of namespace collisions in large apps.
futhermore, due to php's lack of oo support, true collaborative  team development is greatly hindered.
i would ask the following, however as you investigate this topic further... you'll soon become the php vs. java guru.
once these  issues are addressed i think we'll see more support of php, and less resistance  to its place in the enterprise.
legit development teams rely on this to effectively lock down their interfaces, implement error handling, etc etc etc.
now, i know the argument is that php is related to the web - not application development.
but for web programming, jsp doesn't hold a candle to php, imo.
hopefully ibm will jump in here and kick things into high gear.
php vs. cold fusion", not "php vs. compiled languages (jsp,asp.net, and coldfusion mx)".
none out-of-the-box database integration with popular rdbms(oracle,sql server), integration with com and to java servlet and enterprise javabeans, that alone make coldfusion mx and asp.net an attractive development platform.
there's a comma splice in  this article: perl is a very tried and true language, it's been  around since the late eighties, but php is maturing very quickly.
hopefully ibm will jump in here and kick things into  high gear.
firstly, i was absolutely thrilled to see the enhancements of php5.
in content management, phpbb.com vs. ?
what's more important is the capability  of the language.
there's a lot been written elsewhere on php and scalability which i won't repeat here.
since i regularly develop  embedded applications with php using http as the communications substrate for  transactions spanning 6 or more origanisations, i'd like to know whay i  shouldn't be using php / processing synchronously, and how i can create a near  real-time system without synchronous operation.
2) compare slinging (generation) of markup which is where php excels (as it was designed to sling markup - this includes features such as character transformations, variable accessibility, web page captures (see the fopen call which captures a web page in a single function call).
java is a better solution.
i'm very dissappointed to see that languages (like c#), sponsored by  the likes of m$ have been able to develop such mature oo languages so rapidly,  while php remains... well... practically in the stone age.
i think there's been a slight overlook within the comments about php's model for oop.daniel at cedilotte dot com
on applications programming..
since i regularly develop embedded applications with php using http as the communications substrate for transactions spanning 6 or more origanisations, i'd like to know whay i shouldn't be using php / processing synchronously, and how i can create a near real-time system without synchronous operation.
its true that there is a bit more code required to supplement things that $soft and others give you for a price, but the bottom line is that most of these things are not very difficult to do properly.
друга силна  страна на cold fusion  са отличните  му  възможности  за търсене,  но някои  специалисти  твърдят, че  те не са  функционалност,  която трябва  да бъде  включена в  един  скриптов  език за уеб.
cold fusion разполага с добро ide и като цяло е по-лесно да се започне с него, докато php първоначално изисква повече познания.
i hope that the better wins i really must take issue with (cash at nospam dot thesilverside dot com)'s comments regarding enterprise applications and php.web consultant since 1994
we have found php to be an excellent replacement for similar $soft tools and technologies for web development.
php is fast but is a pain on some aspects and has loads of bugs.
they may be out there for java - i would just like to know where they are and who is using them.
also, asp.net can make things that php don't such as manipulate the  server's filesystem (y use that technique in the database system of my own cms  made with .net) and not only the files that are inside the website.
(suggestions please).
java provides beans and struts, coldfusion provides  fast development and .net....
the global variables, lack of package system, and loosely typed nature of php makes it easier to use and get stuff done in, while the syntax is still clean and easy to maintain.
java provides beans and struts, coldfusion provides fast development and .net....
php might be good for developing non complex websites for no cost; however when you are developing enterprise web systems that have to integrate with many different flavor of sources ..
they penalize php for class scope and global variables and such.
if you are an experienced c or c++ programmer, i think php makes automaticly the best choice out of php vs asp.
има  от michael j sheldon в  пощенския  списък на php.
i find that most suggested "design patterns" are weak workarounds in php.
i'll admit that for a very few applications, then server hardware is more expensive than developer time - like if you're turning around more than 500000 hits/hour, then it may work out cheaper to develop in 'c' with half the servers than php, but this is far from the sort of volume i've seen on an enterprise application.
futhermore, due to php's lack of oo support, true collaborative team development is greatly hindered.
it will also give more resources back to php and your web service processes.
halcyon (платена), chili!soft asp от» chili!soft (платена).
i don't think asp itself is the evil one in this.
the advantage here is programming the relative simple business logic in  php and programming those core functions that really require speed in php  modules, if you really have to.
the paragraph on "cold fusion" (it's actually "coldfusion", by the way), and in the included link is so woefully inaccurate and out of date, that it's not even funny.
asp се смята за по-бавен, по-тежък и по-нестабилен език от php.
when it comes to stability.
i think that for the rest the pick of language is pretty personal.
php има по-стриктен и подреден сиктаксис без да губи гъвкавостта си и е по-лесен
with php 5, i would just like to remind everyone, there will be a lot of concessions to java programmers (mostly to lure c++ hackers to php over c# or java) like constants, abstract stuff, and access control.
while it won't impact the programming that much ( you can still code just like you always have) you can at least feel more like c++ when we finally get to use php5.
i would say : use what you need for your application, cfm is truly the fastest, as it has a daemon running instead of a per request, plus the ability to cache queries that is awesome.
i find that most suggested "design patterns" are  weak workarounds in php.
asp2php е  най-често  споменавания  метод както  тази»  възможност  от страната  на клиента.
the only disadvantage about php is the somewhat quirky language and  inconsistant (and long) function names, which makes it hard for newbies to  learn from scratch.
i had the pleasure to talk with him
i have to note that a very big advantage of php over asp is that php has much easier commands...
surely, web consultant must have made the same conclusion based on his discovery that the faq is outdated and thus should be updated.
good dot midget at gmail dot com 17-dec-2005 12:49
where as in asp/vbscript, you can't due to the  fact that ssi is processed before the vb code.
this will allow your web presentation layer to load the data significantly faster than it is now.
in our business there is a huge risk  from not having access to source code and we simply cant be held hostage by a  third party company: when you add up the dollar value of this risk for our  business it far exceeds the few dollars we need to spend in extra supplemental  coding - which is done once so its a one-time cost.
what's more important is the capability of the language.
how long does it really take to write a good data abstraction  layer - that can be repurposed.
dan as far as i can see, web consultant apparently missed the topic, which was "3.
how is a interpreted languge faster and less resource intensive than a compiled languge(jsp,asp.net, and coldfusion mx)?
we simply got tired of all the churing of the development  platform from $soft: things like changing api's during final betas,  undocumented api's etc.
should become perl is a very tried and true language; it's been around since the late eighties, but php is maturing very quickly.
копие от него  можете да  откриете»  тук.
съществуват няколко проекта в процес на разработка, които позволяват asp да бъде използван и в други платформи и уеб сървъри:» instantasp от »
good thing on jsp is that you can write real applications and have perfect interaction by using classes, plus it is much more of a serious language.
php обикновено е по-стабилен и се нуждае от по-малко ресурси, докато cold fusion има по-добра обработка на грешките, връзката
legit development teams rely on this to  effectively lock down their interfaces, implement error handling, etc etc etc.
съществува  ли  автоматично  конвертиране  от asp към php?
php има  по-стриктен и  подреден  сиктаксис  без да губи  гъвкавостта  си и е  по-лесен за  интегриране  в
aside from page caching, (to my knowledge) you simply cannot get any faster than that.
php е най-добрия език за уеб програмиране, а другите езици?
asp не е точно  език за  програмиране,  той е  съкращение  от active server pages.
най-големият недостатък на asp е, че в частност е език използван само с microsoft internet information server (iis).
i'm not  going to debate the the pros and cons of each language, but please -- let  people be informed by information that's more based in reality.
java would have the advantage in generic database access (jdbc) but php has the advantage in ldap support (jndi has several bugs which we have run into - quite painful) and native database access (e.g., oracle or mysql integration).
this is particularly evidenced in the lack of strict type casting.
най-голямото предимство на php пред perl е, че php е разработен специално за уеб програмиране, докато perl е предназначен за много повече неща и заради това може да бъде много по-сложен.
there are issues with  using php for this kind of application.
с бази данни и датите, въпреки че в php 4 е поставено началото на отделен слой за връзка с бази данни.
the advantage here is programming the relative simple business logic in php and programming those core functions that really require speed in php modules, if you really have to.
по  подразбиране  поддръжката  на asp е  включена при  iis сървърите  улеснявайки  първоначалното  му  използване.
in light of this php should be regarded as valuable tool  for application development.
other languages that were previously mentioned througout the notes above (such as perl, java, and the .net clr...
php или cold fusion?
and that while vbscript is based on basic (beginners allpurpose symbolic instruction code)...
on the other hand you just can't do anything very special with cf like opening a socket with the ease of php.
" i like to see proof of this statement.
i think it's worth to mention that it's incredible easy to write a php module in c and use it in your scripts with the speed of true machine language.
how long does it really take to write a good data abstraction layer - that can be repurposed.
my experience with asp and php is about equal, i think they both serve equally as good of a purpose depending on what the programmer is trying to do.
добро резюме по въпроса има от michael j sheldon в пощенския списък на php.
php се смята за  по-бърз и  ефикасен при  сложни  задачи и  нововъведения.
it's necessary an update to this  article.
perl е добре изпитан и стабилен език, излязъл още през 80-те години, но php се развива много бързо.
migrating from php 4 to php 5 miscellaneous questions migrating from php 4 to php 5 php  and com last updated: fri, 02 jan 2009 view this page in english brazilian portuguese french german japanese  korean polish romanian russian spanish turkish other php и  останалите  езици php е  най-добрия  език за уеб  програмиране,  а другите  езици?
i've been using php for... gees...  a long time now.
in php, it's possible to make sure your include files are not included more than once.
during his keynote, he presented some very interesting comparison between the popular development "frameworks" php, ruby on rails (ror, rails) and javabb at servertje dot nl http://www.tbray.org/talks/php.de.pdf in that he show php the first in scalability
i think it's worth to mention that it's  incredible easy to write a php module in c and use it in your scripts with the  speed of true machine language.
if you ever tried to configure a web server for wap, serving wml content you know it's not an easy job.
in our business there is a huge risk from not having access to source code and we simply cant be held hostage by a third party company: when you add up the dollar value of this risk for our business it far exceeds the few dollars we need to spend in extra supplemental coding - which is done once so its a one-time cost.
i code too shortly in php to make a full analysis yet, but the complex object structues of vbscript is something i really put in question, php has a much easier syntax when it comes to that...