however by making whitebeam an xml application - and having the programs structured using valid xml unleashes a whole set of additional facilities such as: asp and php provide mechanisms that can substitute 'output' in place of 'script'.however by making whitebeam an xml application - and having the programs structured using valid xml unleashes a whole set of additional facilities such as: use xml and html editors to see document structure many php and asp applications hide all their output in streams of print statements.in the asp and php theonly way of achieving this is through script, which can make the pages being generated look very clumsy, which in turn makes maintainance and development more difficult and costly.php effectively provides a procedural interface allowing direct access to underlying software, but to use that technology you must learn both php - and how to use that technology.obvious among these are the ability to store persistent data between page access, recognise client sessions and associated data, implement a robust security model etc.the result is a feature rich environment, but one that can be daunting to new users of the environment.asp, php are text based technologies - they have no intrinsic awareness of xml or document structure this difference may seem rather subtle - and if all you do with whitebeam is to write php like applications but using javascript then the differences will probably not be apparent.there is no doubt that you can develop reliable, scaleable applications, but in that case you have to write your own framework to make it happen.whitebeam libraries whitebeam provides an intuitive, well documented object orientated set of apis that abstract away the underlying complexity in order to reduce barriers to entry for new users.where php and asp process a text page for embedded script, whitebeam introduces a two-parse approach, processing an properly formatted xml file and then executing behaviours associated with specific xml markup within those pages.as far as php or asp are concerned - a program file has no structure - it is a text file on which simple text substitution is performed.if you have the biggest server you can afford then your only options are to replace the core functionality with your own session tracking code, using for example a database to store session information.whitebeam provides an intuitive, well documented object orientated set of apis that abstract away the underlying complexity in order to reduce barriers to entry for new users.using standard libraries, if you have performance issues, you can make use of industry stanard load balancers to run your application on two servers concurrently.whitebeam provides a rich set of xml markup to allow you to define your pae structure rather than having to use php control constructs.