the global variables, lack of package system, and loosely typed nature of php makes it easier to use and get stuff done in, while the syntax is still clean and easy to maintain.in light of this php should be regarded as valuable tool for application development.adding more tiers into your application is a recipe for disaster since it reduces scalability by creating bottlenecks/crossovers and has a big impact on transparency.the only disadvantage about php is the somewhat quirky language and inconsistant (and long) function names, which makes it hard for newbies to learn from scratch.legit development teams rely on this to effectively lock down their interfaces, implement error handling, etc etc etc."php is commonly said to be faster and more efficient for complex programming tasks and trying out new ideas.my experience with asp and php is about equal, i think they both serve equally as good of a purpose depending on what the programmer is trying to do.in our business there is a huge risk from not having access to source code and we simply cant be held hostage by a third party company: when you add up the dollar value of this risk for our business it far exceeds the few dollars we need to spend in extra supplemental coding - which is done once so its a one-time cost.php is generally referred to as more stable and less resource intensive as well.also, asp.net make a lot easier for programmers to make programs that communicate with the web site without needing of a browser (i use that technique in a small application that allows my site's users to "navigate" the site and also send and receive personal messages a lot faster than with the web) php needs to get improved to be better than asp.net.good thing on jsp is that you can write real applications and have perfect interaction by using classes, plus it is much more of a serious language.if you are an experienced c or c++ programmer, i think php makes automaticly the best choice out of php vs asp.compiled java classes act more like optimised / confuscated scripts and still needs an interpreter in the end.it'd be a sad world to live in where there was only one programming language/methodoly/idiom - diversity is a great thing.web consultant we probably all agree that php, compared to what coldfusion was at the time of the writing of that part of this faq, is far more capable of complex scripts, and also generally outperforms coldfusion in similar tasks, too.