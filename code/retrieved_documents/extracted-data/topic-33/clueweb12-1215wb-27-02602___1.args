asp support is also enabled by default in the iis server making it easy to get up and running.
the biggest drawback of asp is that it's a proprietary system that is natively used only on microsoft internet information server (iis).
cold fusion has better error handling, database abstraction and date parsing although database abstraction is addressed in php 4.
cold fusion has better error handling, database abstraction and date parsing although database abstraction is addressed in php 4.
perl is a very tried and true language, it's been around since the late eighties, but php is maturing very quickly.
the flexibility / complexity of perl makes it easier to write code that another author / coder has a hard time reading.
the biggest advantage of php over perl is that php was designed for scripting for the web where perl was designed to do a lot more and can because of this get very complicated.
asp support is also enabled by default in the iis server making it easy to get up and running.
php has a less confusing and stricter format without losing flexibility.
some of the pros of asp is that since it primarily uses vbscript it's relatively easy to pick up the language if you're already know how to program in visual basic.
some of the pros of asp is that since it primarily uses vbscript it's relatively easy to pick up the language if you're already know how to program in visual basic.
the biggest drawback of asp is that it's a proprietary system that is natively used only on microsoft internet information server (iis).
the components built in asp are really limited, so if you need to use "advanced" features like interacting with ftp servers, you need to buy additional components.
the components built in asp are really limited, so if you need to use "advanced" features like interacting with ftp servers, you need to buy additional components.
asp is said to be a slower and more cumbersome language than php, less stable as well.
this limits it's availability to win32 based servers.
php has pretty much all the 'good' functionality of perl: constructs, syntax and so on, without making it as complicated as perl can be.
cold fusion has a good ide and is generally easier to get started with, whereas php initially requires more programming knowledge.
asp is said to be a slower and more cumbersome language than php, less stable as well.
asp is not really a language in itself, it's an acronym for active server pages, the actual language used to program asp with is visual basic script or jscript.
the biggest advantage of php over perl is that php was designed for scripting for the web where perl was designed to do a lot more and can because of this get very complicated.
another thing that is listed as one of cold fusion's strengths is its excellent search engine, but it has been mentioned that a search engine is not something that should be included in a web scripting language.
php has a less confusing and stricter format without losing flexibility.
php is easier to integrate into existing html than perl.
cold fusion is designed with non-programmers in mind, while php is focused on programmers.
php is generally referred to as more stable and less resource intensive as well.
cold fusion has a good ide and is generally easier to get started with, whereas php initially requires more programming knowledge.
php is commonly said to be faster and more efficient for complex programming tasks and trying out new ideas.
php is commonly said to be faster and more efficient for complex programming tasks and trying out new ideas.
php has pretty much all the 'good' functionality of perl: constructs, syntax and so on, without making it as complicated as perl can be.
the flexibility / complexity of perl makes it easier to write code that another author / coder has a hard time reading.
another thing that is listed as one of cold fusion's strengths is its excellent search engine, but it has been mentioned that a search engine is not something that should be included in a web scripting language.
php is generally referred to as more stable and less resource intensive as well.
perl is a very tried and true language, it's been around since the late eighties, but php is maturing very quickly.
php is easier to integrate into existing html than perl.
cold fusion is designed with non-programmers in mind, while php is focused on programmers.
asp is not really a language in itself, it's an acronym for active server pages, the actual language used to program asp with is visual basic script or jscript.
this limits it's availability to win32 based servers.