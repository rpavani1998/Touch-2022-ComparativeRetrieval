cold fusion has a good ide and is generally quicker for new programmers to achieve results for very simple applications, whereas php initially requires more programming knowledge.asp is said to be a slower and more cumbersome language than php, with less overall stability.yet php's command-line interpreter (cli) is powerful enough to perform high-level tasks much in the same way perl has been traditionally employed.the flexibility / complexity of perl can make it difficult for developers of varying skill levels to collaborate.php has a less-confusing and stricter format without losing flexibility.in large part, php has all the 'good' functionality of perl - constructs, syntax, et cetera - without making it as complicated as perl can be.one of the pro's of asp is that, since it primarily uses vbscript, it's relatively easy to pick up the language if you're already proficient in visual basic.the biggest advantage of php over perl is that php was designed for scripting for the web, while perl was designed to do a lot more.while coldfusion once had better error handling, database abstraction, and date parsing, the database abstraction shortfalls were addressed in php 4.however, the components built in asp are really limited, so if you need to use "advanced" features (like interacting with ftp servers), you'll need to buy additional components.the biggest drawback of asp is that it's a proprietary system that is natively used only on the microsoft internet information server (iis) platform.php is also easier to integrate into existing html than perl.asp support is also enabled by default in iis, making it easy to get up and running.cold fusion is designed with non-programmers in mind, while php is focused on programmers.this limits its availability to win32 based servers.