i built and ran these tests because i was personally curious about comparative performance.
like always developers will find ways to make any platform shine or slow down using any random anti-pattern.
track the time it takes to build it, the environment cost and the amount of traffic each one can handle.
to me (your mileage may vary) the exciting thing about php is not the language / platform so much as it is what thousands of clever php developers have done with it (drupal, joomla, wordpress, phpbb, nuke, etc.)
pingback from php and community – techportal first, a scripted language against a compiled one, the fact that you are even trying to compare the two makes me think you shouldn’t be in the benchmarking business at all.
anyway, i still love both asp.net & php because both these give me opportunity to work and accomplish great things, even though, i have always preferred asp.net before php.
shame all .net developers are negative to language which makes websites more maintainable (yeah, even designer can do change & develop his skills without paying $$$ to anyone).
geof on august 6th, 2009 4:12 pm @jay khatri, its true that php has more freelance projects.
for nearly every non-trivial web site, the bottleneck is at the network and database level, not in the speed of execution of the business logic and presentation script.
and the html output… i can provide you with 100s php sites which do not validate at all too.
if some day during my life, i luckly see the asp.net/mvc can fully run on linux/unix, or the environments are cheap enough for beginning companies, i will be happy mono now supports asp.net/mvc.
syntax isn’t weird as long as you have no programming preferences/fixations (it seems to me you have some strong ones).
also, i plan to progress to more snecario based tests (full page renderings, etc.) – suggestions are welcome.
-joe database is the main scalability and performance issue, page ui content is the second biggest performance factor in my experience – assuming no serious coding errors.
i know php enough to get around and to hijack the good ideas and put them in asp.net.
because those projects are piece of shi*t.
(my personal guess is that it’s unlikely that sun will markedly improve mysql performance on windows. )
in shared hosting, everyone on that host can read/write to your memcache instance.
there are few things i would like to know like how php in iis configured, if fastcgi than version of fastcgi.
(i mean, real programming languages) i think asp.net is far better platform than php and an asp.net developer is a lot more productive than a php developer.
not meaning to be too skeptical here, but one wonders if ms really is serious about its overtures to the open-source community given these types of contrived comparisons touted by an ms employee who purports to be "neutral" (i.e., "i love them both").
but adding apc would only put php on equal ground, since .net already has something similar in the form of compiled byte code.
you are typical of the internet warrior who whines becuase they don’t like the results.
"and please do not even compare masterpage to smarty or zendview -> ko would be instant."
savage on august 6th, 2009 6:10 pm great tests joe we appreciate your efforts.
well the tone of article was set by the first few lines "i’m paid by microsoft to write both php and asp.net code.
afaik quite experienced developers had a problem to agree sessions between asp & .net after turning viewstate.
first, while i appreciate the enthusiasm of my .net friends, the point of my exercise thanks joe, this is really interesting stuff and may help someone to show to their client to go for .net
i started building and running these tests because everyone had opinions about comparative php performance (windows versus linux & 5.2 versus 5.3), but no one had any solid data.
i like all 3, although if given a choice i would always go the .net route.
is there a way where you can compare asp with asp.net because many people like me have the doubt that microsoft is killing asp in the upcoming servers.
"semi-professional", such a condescending attitude.
the article is available at: pcquest.ciol.com/…/109070402.asp flávio stakoviak on august 6th, 2009 9:50 am nice, i always thought asp.net was slower than php.
" lamp: "my professor told me enough.
jay khatri on august 6th, 2009 7:02 am hi friends, i am using asp.net and never known to php and dont even like to be switched as i am quite comfort on windows platform.
"you can’t share sessions easily between two php apps running on the same machine too.
with asp.net and php, .net was faster but not greatly.
yes, asp.net is universally faster than php (on windows and on linux) with the exceptions of file copy and attribute operations.
it’s also about knowing your server, optimizing it properly, and knowing how to exploit the resources you have.
as ultimate object of learning asp.net for me is to earn money.
i started building and running these tests because everyone had opinions about comparative php performance (windows versus linux & 5.2 versus 5.3), but no one had any solid data.
here in canada has released a pile of training money for anyone affected by the recession i qualify for training money the only accredited courses i can find in b.c. canada are open source drupal php and so on i wold like to learn asp.net with some credits since i have a passion for and have invested so much time i on asp.net microsoft rules you guys are a great team
i can tell 90% of them will never go live..they are cheap projects for some cheap people a way of making quick money.
i have personally made only few of the tests for which you already provided more detailed explanation and tests on your results spreadsheet
feel free ot email me directly if you like and if you create a scenario that renders different results, i’ll be happy to post the results here as well.
they said it was because iis 7 provides a true multithreaded web server for php.
@exo viewstate can be turned off on per control, per page, etc. basis.
i believe with the speed of hardware, and it’s relatively cheap cost, the difference in speeds with most things (.net, php, perl) are negligible.
basically you’re paying for electricity & no licensing fees.
but as a freelancer when i see online projects, i always found php products are many more than asp.net.
some php optimizers compile the actual script, which is exactly what happens with asp.net.
if i normalize your empty loops to your string assignment loops i discover that the first two cause a 20% increase in time consumed.
but .net have big projects..that php devs can only dream of..
in my opinion that makes the article meaningless.
i have just started to play a bit with php to get a feel for what it can do since i dont have asp.net on my mac except virtually.
and if you end up using one of these existing apps, asp.net looses all the productivity advantage.
file access is faster on linux by a small percentage, except for file copy operations which was as much as 60% slower on windows probably due to the acl advanced security.
you also have access to this code to further enhance your controls and optimize it to your needs.
to factor that all in, you’ve got to consider a gazillion things, like the development environment, rad vs. rup, startup hardware costs (must consider #users served over x amount of time, not just #users served at a snapshot in time), startup software costs, ongoing licensing costs, ongoing maintenance costs, developer availability, code comprehensibility, security costs, and on and on.
we can probably say that in terms of raw execution – performance on linux versus windows is probably a wash (more or less equivalent) so that the performance of php itself becomes a moot factor in choosing linux or windows for php application deployment.
among these, php is the worst thing i’ve touched ever.
5.3′s mysql driver has better performance, measured on linux.
– thank you sharique php is ugly like hell.
i rememeber attending a mix ’08 iis session where they were showing php test on iis 7 showed signigicant perf increases over apache.
for microsoft to rule the programming scene i would like to see them secure their operating system.. don’t allow processes rights to files they don’t need.
anyway, i still love both asp.net & php because both these give me opportunity to work and accomplish great things, even though, i have always preferred asp.net before php.
pingback from brandon savage’s blog: of lies, damned lies, and benchmarks | php i hope people actually looked at your spreadsheet, because your article is misleading.
sql server always uses transactions (few exceptions here), but mysql not always and i don’t know about postgree in this case.
@jay khatri, its true that php has more freelance projects.
i miss so many nice features from .net that i feel one quickly has gotten used to having.
we did not have any windows users complaining, so far.
opus131 on august 6th, 2009 4:22 pm php has always been, and will always be, tailored to semi-professional environments.
i can certanly say that for really simple application asp.net is way faster to develop than php or rails but when the things start to get more complicated i would not choose asp.net i would go for rails (ruby) or django (python).
"mysql access from php on linux is a tiny bit faster than sql server access on windows" – i think you meant to say, "is twice as fast" as sql server, according to your data.
what i would like to see is a good comparison on architecture in terms of how productive can i get.
i now use studio 2008 exclusively for coding although homesite had some nice touches i still consider superior to any other editor, particularly its extensibility via jscript and user-defined forms.
my though is that sometime you can afford a few milliseconds of performance loss to save you wallet.
i saw a team of 20 experienced developers from india (no 1st-timers) rewrite 50% of an existing application in 1 year for a cost of about $1m. single request times were 2-3 seconds per page, when the existing system was under .5 seconds per page.
beforehand i’d like to say that i’m not a fanatic, and, i’ve also tested alot of thing you already did, in different version along the last years.
i think that too many decisions are taken in our industry on personal belief and rumours, which many of these comments and on similar tests show.
to suggest testing scenario to reveal all the asp.net/ms sql power.
to factor that all in, you’ve got to consider a gazillion things, like the development environment, rad vs. rup, startup hardware costs (must consider #users served over x amount of time, not just #users served at a snapshot in time), startup software costs, ongoing licensing costs, ongoing maintenance costs, developer availability, code comprehensibility, security costs, and on and on.
asp: datetime nextweek = new system.datetime().adddays(7); php: $secnextweek = time() + (7 * 24 * 60 * 60); just because php doesn’t seem to have a similar adddays() function you don’t need to calculate (7 * 24 * 60 * 60) in every loop iteration.
oops, i meant you’ve got the class for asp.net but not the page like you have in php..
scriptstar on august 5th, 2009 4:42 pm "asp.net is universally faster than php (on windows and on linux)"
as ultimate object of learning asp.net for me is to earn money.
my though is that sometime you can afford a few milliseconds of performance loss to save you wallet.
and i’m sure if php was faster you folks at microsoft would start working on making asp.net faster so i don’t know why dave would think you would jimmy the test keep up the good work joe!!!!!!
i use php projects (drupal, etc…) because they are free, numerous and quite often, though not always, of high quality.
i also see from your web site that you are a php developer so i understand your rant.
hi friends, i am using asp.net and never known to php and dont even like to be switched as i am quite comfort on windows platform.
"semi-professional", such a condescending attitude.
i make things in asp.net while i dabble in php.
asp.net (c#) operations, object use, library calls, etc. are significantly faster that the php equivalents.
designer we’re able to pick our code after ~month and changing it as they want it.
you can’t share sessions easily between two php apps running on the same machine too.
haven’t messed with php much yet; no incentive to do so.
i have just started to play a bit with php to get a feel for what it can do since i dont have asp.net on my mac except virtually.
however this staement by you "i would still prefer php over asp.net if it were slower… speed is just a small factor.
diego toala on august 6th, 2009 7:55 pm "postgresql performance is very close on both platforms (within 6/100 of a second for 1000 operations) – it’s faster on windows and faster still on windows with php 5.3" for sure, postgresql is better with php.
the article is available at: pcquest.ciol.com/…/109070402.asp nice, i always thought asp.net was slower than php.
hands down the reason i use asp.net is because of the ide.
a toshiba tecra m5 with 4 gig of ram and a 60 gig 7200 rpm hard drive.
this is wrong from the start as somebody already pointed out(k i think was the name).
i was quite surprised by that knowing that php with fastcgi does have a number of optimizations on iis7.
what makes php important is all these existing open source applications.
if you don’t care to write code in php, say it.
i could have easily redone the entire application by myself in .net in the same amount of time, and guaranteed better response times.
first, i didn’t test 5.3 becuase the ubuntu package manager doesn’t include 5.3.
obviously other performance gains can only be a good thing, i don’t see why a newcomer would choose php over .net, simply due to the depth of support you guys (ms) give, the size of the community and the nature of c# and asp syntax.
+ mod_deflate you would notice difference in speed/development.
but still i feel that micorsoft technologies are simpler and easy to implement.
also, i often find asp.net applications in production that are running in debug mode.
asp.net (c#) operations, object use, library calls, etc. are significantly faster that the php equivalents.
"smarty can be weird if you don’t understand template engine principles.
k on august 6th, 2009 7:06 pm i don’t think it’s fair to compare php without an opcode cache (like apc).
linux done well once will server years.
i often find this comparisons to be a bit biased towards the expertise of the person testing it, if one is more proeficient with windows then the tests tend to favour windows, if the tester is more proeficient with linux it favours linux etc.
i can tell 90% of them will never go live..they are cheap projects for some cheap people a way of making quick money.
i think a better comparison is to create a web app in both php and asp.net.
it would be also nice to test mono asp.net on ubuntu and win
the other thing thats nice is unlike windows server which i have to worry about getting hacked/viruses all the time linux servers are extremely easy to secure.
comment warning i know some will be incensed by these tests.
just sayin’ way to go "dave" or should i say anonymous coward (my term for posters who lack the courage to provide a real name and contact information.
i know you can’t setup every type of caching solution.
assuming they finished the app in another year (i left the company disgusted with their choice, which i advised against), the total cost would be approaching $2m, for something i could have done for about 1/20th the cost with faster performance in .net.
most developers i have come across don’t even care about performance.
if you are building an application, or running an application that supports it, postgresql might be a better database choice since it performs pretty much the same on windows and linux.
not everyone knows how to get the best performance out of their systems/code.
because those projects are piece of shi*t.
2 remarks : - to the author : running php without an opcode cache is like running asp.net in debug mode… it’s just "not-done".
php vs. asp.net on linux and windows thanks for performing tests.
if you can code php to be faster, again, go for it.
and if you get around to doing that kind of test, you should probably account for the fact that it typically takes hours to set up and configure a windows server (while most linux sysadmins can do it in under 10 minutes).
second, making wild statements like ‘asp.net is universally faster than php’ without providing explicit details on how to duplicate the results that you posted, shows you are not a very trust worthy source.
i found it most helpful, as i too am a "switch hitter" in that i develop projects in both asp.net and php/mysql.
usually, when someone creates benchmarks, they are trying to prove that their thing is faster than someone else’s thing.
use an opcode cache and then compare performance of real applications, not a bunch of loops.
pingback from web pro asp – active server page development news of course c# + asp.net is faster than php.
haven’t messed with php much yet; no incentive to do so.
good article lloyd a magazine to which i contribute articles recently did a php on win vs. lin article and found that ph ran better on linux than windows.
however, i disagree because ultimately i need to meet client’s needs which might require the use of asp.net for one project, and php for a different one.
thing is most of the time, people disregard several importan aspects while testing, making a test in a standard out of the box install of linux/apache/php/mysql/postgresql vs windows/iis/mysql/postgresql is not quite accurate, the hardware for starters should be the same, then, both operating systems / software should be configured for maximum performance (since that’s what a sane person would do in a production environment) and only then compare results.
what you tested was almost not related to real life more or less complex projects (in my opinion, – i may be wrong).
i’m working with php at work exclusively (my boss is obsessed with the whole lamp thingie).
guy even had problem with proper installation of php 5.3 on ‘ubuntu’.
right ….’encryption’ & ‘securing the code’ …but why is in the way that html will output it and be invalid.
– yes none were added but .net has its global assembly cache by default.
in our country; an avarage .net developer earns two to three times salary than an avarage php developer of same experience.
"shame all .net developers are negative to language which makes websites more maintainable".
personally, i’ve seen firsthand the hidden costs of both java and .net in an fortune 500 environment, and .net still has my focus.
if i had to choose, i would utilize asp.net simply because i like the visual studio ide experience.
i have quite similar experience… i have started working on php but ended up with asp.net because simply i feel the power which is above php.
both windows and linux implementations of php will benefit from php byte code caching.
this is “misfit data” – while i do work for microsoft, this data is not “official microsoft” data and is not endorsed or ratified by microsoft in any way.
i could have easily redone the entire application by myself in .net in the same amount of time, and guaranteed better response times.
last time i tried a windows server, it encountered a "stop error" after just a week!
how about – instead of whining "i don’t believe thye thing i know is slower than the thing i don’t know" you actually download the code and run some tests yourself.
it would be nice if you could add mono 2.4 performance numbers.
since you can’t provide opposing data you make stuff up.
on the other hand the free stack seems to remain perpetually unfinished, unpolished and all the pieces to the puzzle are laying all over the place and documented in gibberish.
the whole infrastructure seem so bare.
is there a way where you can compare asp with asp.net because many people like me have the doubt that microsoft is killing asp in the upcoming servers.
template engine syntax is then really useful & powerful at same time.
php’s ides are jokes with no punchlines; they really, really suck.
so you deny php the advantage that .net has.
php joe, i must apologize for my rant, i did go off the deep end a little, but in my own defense the file ‘ http://www.msjoe.com/pages/aspnet_perf_test_source.htm‘ does not display correctly in firefox 3.5 on my laptop, which led me to believe that there was missing information.
.net has the benefit of using bytecode, while php has to parse the file and "compile" for each page request.
but .net have big projects..that php devs can only dream of..
it’s all about business, if you keep your mind as a developer go ahead and cry like a baby "mommy i want asp.net" or "mommy i want php", but if you are a professional software engineer you have to be technical in your choice, and manage the variables of your project, this is not a soccer game.
symphony, zf & ci are three best for rad in php.
.net has the benefit of using bytecode, while php has to parse the file and "compile" for each page request.
morning dew joe stagner on august 6th, 2009 8:38 am sharique, good questions.
i like asp.net/mvc, c#, visual studio, iis, sql server and windows server, and i have followed ms over 10 years, but when i plan to start a small business, i find i have not enougth $ to buy the environments, although maybe i can use the illegal soft of visual studio, sql server and windows server, but if i do so in my own business, i feel very sorry and uncomfortable, if i use the illegal soft, maybe some day, before i have made some money, i have lost my future.
i was quite surprised by that knowing that php with fastcgi does have a number of optimizations on iis7.
smarty can be weird if you don’t understand template engine principles.
it’s all about business, if you keep your mind as a developer go ahead and cry like a baby "mommy i want asp.net" or "mommy i want php", but if you are a professional software engineer you have to be technical in your choice, and manage the variables of your project, this is not a soccer game.
personally, i’ve seen firsthand the hidden costs of both java and .net in an fortune 500 environment, and .net still has my focus.
in any event, it’s nice to now have some data that php performance on windows and linux are “in the same ballpark”.
congratulation, excelent article vinod – this is typical of the stuff i found when i did my initial search.
- to apfel : from php 5.3.0 onwards : asp: datetime nextweek = new system.datetime().adddays(7); php: $secnextweek = new datetime()->add(new dateinterval("p7d")); wim, in fact, my lamp host does not include op-code caching.
for the record, i’ve written objective-c, php, perl and asp/vb/c#/.net.
i have no reason to believe that php will be any better, especially given joe’s numbers.
here in canada has released a pile of training money for anyone affected by the recession i qualify for training money the only accredited courses i can find in b.c. canada are open source drupal php and so
i’m sure the same thing could be done with php.
like always developers will find ways to make any platform shine or slow down using any random anti-pattern.
with asp.net and php, .net was faster but not greatly.
i built and ran these tests because i was personally curious about comparative performance.
you are welcome to comment and disagree, but if you can’t be polite i’ll simply delete your comments and block your ip address.
vs2008 has done a great job creating user controls by wrapping js and css into their ide.
yes, i could implement php byte caching, or for asp.net i could use page caching, partial page caching, sql cache dependency, multi threading, etc.
so you deny php the advantage that .net has.
ok – please see the results of add op-code caching here msjoe.com/…/php-linux-windo i don’t know why anyone is surprised by these results.
doing a simple extrapolation from 7 million to 20 million we can see that a do while loop doing a text assignment takes 16% less time to complete than when it has nothing to do.
the biggest selling point of php/mysql is the price.
i agree that the folks who developed drupal, joomla and wordpress have done a great job using php to accomplish this.
"postgresql performance is very close on both platforms (within 6/100 of a second for 1000 operations) – it’s faster on windows and faster still on windows with php 5.3" for sure, postgresql is better with php.
take security seriously be like apple and (borrow) an already great filesystem and make it your own.. its bsd licensing after all.
(v2 ot the driver will improve performance. )
so i think as i freelancer i have less opportunity.
pingback from programming news: asp.net beats lamp and wimp in performance test | programming and development | techrepublic.com thanks for sticking your head out.
now, i see, with good development practices, you can have a great performance at asp.net too.
out designers still have hard time to understand why the hell we’re using a weird templating language (smarty) over another templating language (php).
i noted that with asp and php, php was generally faster.
i think php is more maintainable.
i am not a lamp person by any means, but that made sense because my lamp friends always talk about scaling as adding more servers, ie more hardware.
i am not a lamp person by any means, but that made sense because my lamp friends always talk about scaling as adding more servers, ie more hardware.
i don’t think it’s fair to compare php without an opcode cache (like apc).
especially when all php frameworks are extending language, while asp is something completely different to c#.
if you’re the dev, it is up to you to decide what storage you’ll use – viewstate, session, etc.
because comparing .net platform with php would be like comparing an ocean with my reservoir.
take my code or write your own and argue with facts.
for the record, i’ve written objective-c, php, perl and asp/vb/c#/.net.
@gargamel honestly, get the sources, optimize php as you like, call zend for help, run the tests and come report the results.
pingback from windows | all days long kevin isom on august 5th, 2009 9:00 pm joe, thanks for the effort.
well zend, code igniter & symphone are offering same amount of reusable libraries.
function calls were faster on windows object creation / access was faster on linux with php 5.2 but faster on windows with 5.3 library calls were faster on linux.
as long as someone’s willing to pay me a good buck i’ll write in, or learn, whatever language and/or framework they need me to write in for them.
hey, vdd – if your company uses comparisons like these to make decisions about real-world web solutions, you might want to keep your resume updated.
would help to make an informed decision on using php for anything… my initial php trials tell me im better off learning objective-c on mac than web development, if im going to do any mac dev at all, since there is nothing that let me be as productive as i am in .net.
i really dislike mysql as it does weird things sometimes with queries and prefer stored procedures on sql server.
thanks & best regards jay khatri i have in the past worked with asp with msaccess/sql server, php with mysql and asp.net with sql server.
.. and logic suggests that sun is less than compleatly interested in it’s performance on windows.
what i would like to see is a good comparison on architecture in terms of how productive can i get.
now, i see, with good development practices, you can have a great performance at asp.net too.
i also did some simple tests back when asp.net was v1.1.
it’d be expensive to put on and i think it’d take some work to do fairly.
tonight it’s a good night sleep.
i found it most helpful, as i too am a "switch hitter" in that i develop projects in both asp.net and php/mysql.
i wasn’t investigating how much speed an expert could custom tailor the tests to on a specific platform.
my php skills and bowed to .net.
the things mentioned are unanimous and needs to be appreciated by everyone………… it solution nice post, thanks for writing about it it would be great to apply the same test to jsp and add the result to your spreadsheet.
i posted all the details and the code to duplicate my tests (i guess you were so upset at php perfarmance that you missed that.)
because comparing .net platform with php would be like comparing an ocean with my reservoir.
@will cause they don’t know how to use it properly mate.
and that’s totally great and works best for ms developers.
the windows 08, iis 7, fastcgi was fully updated.
i noted that with asp and php, php was generally faster.
memcache doesn’t have locks.
all these days, i was a bit guilty of not honing my php skills and bowed to .net.
as long as someone’s willing to pay me a good buck i’ll write in, or learn, whatever language and/or framework they need me to write in for them.
if you can code .net to be faster, go for it.
php on linux versus php on windows….. i really though one would just be faster than the other, but i was wrong.
this type of test would only be fair if you tested classic asp, which isn’t compiled.
good article lloyd vinod unny on august 6th, 2009 9:47 am a magazine to which i contribute articles recently did a php on win vs. lin article and found that ph ran better on linux than windows.
both windows and linux implementations of php will benefit from php byte code caching.
i wasn’t investigating how much speed an expert could custom tailor the tests to on a specific platform.
yes, asp.net is universally faster than php (on windows and on linux) with the exceptions of file copy and attribute operations.
yes, it is very simple: run a memcached server, modify the code to use it properly, pray so that it will not loose your session data.
the second reason i asp.net is that the windows technology stack is cohesive and well documented (ubuntu is a great tack for the linux community).
morning dew sharique, good questions.
my clients ultimately dictate what programming language to use based on their server environment.
i have personally made only few of the tests for which you already provided more detailed explanation and tests on your results spreadsheet
i have been able to shave seconds off first loads with css spriting techniques, javascript packaging, and cdn.
i have used both php and asp.net and really hooked up to asp.net now because of the visual studio ide it beats any php ide out there hands down (my opinion ).
yeah, damn easy via memcache, using ‘session_set_save_handler()’.
and please do not even compare masterpage to smarty or zendview -> ko would be instant.
i really dislike mysql as it does weird things sometimes with queries and prefer stored procedures on sql server.
to me (your mileage may vary) the exciting thing about php is not the language / platform so much as it is what thousands of clever php developers have done with it (drupal, joomla, wordpress, phpbb, nuke, etc.)
asp.net 2 + mssql free – (color green) $$$$ – thousands – (color pink) php is dead.
i would still prefer php over asp.net if it were slower… speed is just a small factor.
when i confer a preference for something in php, my microsoft peers send me flame mail and when i confer a preference for something in asp.net, my php friends come out of the woodwork to call me a microsoft shill.
this is very painful.
you can’t compare an opcode cache to page caching.
first, i didn’t test 5.3 becuase the ubuntu package manager doesn’t include 5.3.
standard were natively installed on 2 separate (but identical) hard drives.
asp.net 2 + mssql free – (color green) $$$$ – thousands – (color pink) dave on august 6th, 2009 6:45 pm php is dead.
i use php projects (drupal, etc…) because they are free, numerous and quite often, though not always, of high quality.
standard were natively installed on 2 separate (but identical) hard drives.
speed of execution of a web scripting language is so rarely a performance bottleneck that this discussion isn’t even worth having.
i program primarily in php because my customers request it not because its the best thing ever.
out of the box benchmarks worth just that… good effort though.
so what does all that mean ? by and large i think the php team and the microsoft iis team have accomplished good raw performance equivalence across platforms.
on the other hand the free stack seems to remain perpetually unfinished, unpolished and all the pieces to the puzzle are laying all over the place and documented in gibberish.
now i dont feel guilty when i see any php open source tools or web sites.
you’ll notice php beats asp.net on most levels.
this article is not a true comparison of apples to apples simply because .net has caching built in, php doesn’t, by default.
thanks you solved my problem, becaz currently i am working in both php and asp.net and even in jsp.
so its easy to see the difference on basis of financial benefits.
take my code or write your own and argue with facts.
so i have a two part question 1, if i do the php thing will it help me be better asp.net developer in the long run basically how much is related 2, where could i get the equivalent training in asp.net in this part of the world nollkoll on august 6th, 2009 1:00 pm mildly interesting comparison.
it choked badly when they cranked up the user load in testing.
developer earns two to three times salary than an avarage php developer of same experience.
php vs. asp.net on linux and windows sharique on august 6th, 2009 2:06 am thanks for performing tests.
i know my php friends and the linux dudes (and dude-etts) will probably come out of the wood work to refute my tests and results i’ve always thought that if high end performance options were part of your needs requirements, then .net programming has some advanced options “out of the box” like multi-threading, asynchronous requests, and a number of caching options.
a mistery… as you’re mentioning symphony, i think it is the best thing in the php world.
i would like to be sure if you are more productive in asp.net than php (have you ever tried a php mvc framework "caephp, codeigniter, symfony, zend")
"asp.net is universally faster than php (on windows and on linux)"
they also had a vested interest in getting good response times to prove themselves valuable.
i’m not a ms developer because i just don’t believe in closed code.
version 1 of the php driver for sql server (v2 is in the works) is somewhat slower than mysql or postpresql but probably not enough to discourage use where diverse developer access is desired.
next, only true developers who understand the importance of performance, security and optimization will understand my point here.
thing is most of the time, people disregard several importan aspects while testing, making a test in a standard out of the box install of linux/apache/php/mysql/postgresql vs windows/iis/mysql/postgresql is not quite accurate, the hardware for starters should be the same, then, both operating systems / software should be configured for maximum performance (since that’s what a sane person would do in a production environment) and only then compare results.
when i confer a preference for something in php, my microsoft peers send me flame mail and when i confer a preference for something in asp.net, my php friends come out of the woodwork to call me a microsoft shill.
frank on august 6th, 2009 7:20 pm i make things in asp.net while i dabble in php.
great tests joe we appreciate your efforts.
php’s ides are jokes with no punchlines; they really, really suck.
this means that for different environments, the choice may vary.
this is “misfit data” – while i do work for microsoft, this data is not “official microsoft” data and is not endorsed or ratified by microsoft in any way.
(just as the early learning complexity of asp.net can have it’s drawbacks. )
"mysql access with linux is faster by more than a little and on windows" – again, you meant to say "is about five times faster", again according to your data.
but the technology they used was very inadequate for the task, and the tco was poorly calculated up front.
for a real comparison you should have used a bytecode cache system for php, because the asp.net code is compiled and cached by default after the first request.
my clients ultimately dictate what programming language to use based on their server environment.
assuming they finished the app in another year (i left the company disgusted with their choice, which i advised against), the total cost would be approaching $2m, for something i could have done for about 1/20th the cost with faster performance in .net.
not tweaking performance on both systems was a good choice for this test.
thankfully – you are not representative of the php community.
raw statement execution seems faster on windows.
given that the test were single user and the macine wasn’t running anything else, i suspect tests would not be effected by 64bit.
to me php sites universally have better performance than asp.net powered ones.
can you also put some more effort in comparing java and asp.net.
i now use studio 2008 exclusively for coding although homesite had some nice touches i still consider superior to any other editor, particularly its extensibility via jscript and user-defined forms.
i saw a team of 20 experienced developers from india (no 1st-timers) rewrite 50% of an existing application in 1 year for a cost of about $1m. single request times were 2-3 seconds per page, when the existing system was under .5 seconds per page.
thanks for the hard work joe.
overall i’ve been pretty impressed with the reactions to my first round of php/linux/windows/asp.net performance tests.
but personally i enjoy programming in asp.net and in jsp becaz becaz i love java and c#.
it choked badly when they cranked up the user load in testing.
lloyd on august 6th, 2009 9:03 am adding a xaml/silverlight comparison would be a good idea.
but i have seen java applications converted to rails, and rails was faster, the way you code determines the speed of your application a lot and i can tell you that ruby can give you a lot of happiness, (happy programmer is more productive).
not my question, i can learn to code in anything, frankly.
yes, i could implement php byte caching, or for asp.net i could use page caching, partial page caching, sql cache dependency, multi threading, etc.
usually, when someone creates benchmarks, they are trying to prove that their thing is faster than someone else’s thing.
(my personal guess is that it’s unlikely that sun will markedly improve mysql performance on windows. )
mysql access from php on linux is a tiny bit faster than sql server access on windows (assuming common data types and select statements) but probably not enough to matter.
thank you geof on august 6th, 2009 3:45 am php is ugly like hell.
rad stands in lamp for what it should be.
it gives me motion sickness to think of starting from scratch on a free stack.
ubuntu by default also installs the suoshin security extension, which adds a performance penalty.
i know php enough to get around and to hijack the good ideas and put them in asp.net.
it’d be expensive to put on and i think it’d take some work to do fairly.
it would be better if ubuntu with php 5.3 is also tested.
this means that for different environments, the choice may vary.
so i think as i freelancer i have less opportunity.
there are few things i would like to know like how php in iis configured, if fastcgi than version of fastcgi.
c# is pick up asp.net mvc and voila, you have the full control over your html output "afaik quite experienced developers had a problem to agree sessions between asp & .net after turning viewstate" ermmm, this is a bit lame.
that is, in php, you design your own controls, your own javascript and your own css to fit your needs for what your website’s intended use.
i believe with the speed of hardware, and it’s relatively cheap cost, the difference in speeds with most things (.net, php, perl) are negligible.
it gives me motion sickness to think of starting from scratch on a free stack.
given that the test were single user and the macine wasn’t running anything else, i suspect tests would not be effected by 64bit.
i have no reason to believe that php will be any better, especially given joe’s numbers.
they also had a vested interest in getting good response times to prove themselves valuable.
if i had to choose, i would utilize asp.net simply because i like the visual studio ide experience.
i’m paid by microsoft to write both php and asp.net code.
hajan on august 5th, 2009 5:07 pm joe, thanks for the article and for sharing the tests you’ve made.
the second reason i asp.net is that the windows technology stack is cohesive and well documented (ubuntu is a great tack for the linux community).
–> my comment was deleated becuase i can neither read or be polite and i’m only here to whine becuase i’m too lazy to add value.
in any event, it’s nice to now have some data that php performance on windows and linux are “in the same ballpark”.
anyone in the right mind will tell you that ubuntu 9.04 is a much beefier operating system than windows 2008.
hi sam, i see that you can’t read since your comments don’t comply with my requsts.
the environments are cheap enough for beginning companies, i will be happy.
on i wold like to learn asp.net with some credits since i have a passion for and have invested so much time i on asp.net microsoft rules you guys are a great team
all tests were run on the same machine.
who’s the fastest … beforehand i’d like to say that i’m not a fanatic, and, i’ve also tested alot of thing you already did, in different version along the last years.
saying that php isn’t a "professional" language is just dippy, since nearly all of the largest web sites in the world today were built with php.
but as a freelancer when i see online projects, i always found php products are many more than asp.net.
but the technology they used was very inadequate for the task, and the tco was poorly calculated up front.
i think all technologies have their faults.
different tools for different jobs (employers, too).
you are welcome to comment and disagree, but if you can’t be polite i’ll simply delete your comments and block your ip address.
iis session where they were showing php test on iis 7 showed signigicant perf increases over apache.
but adding apc would only put php on equal ground, since .net already has something similar in the form of compiled byte code.
i often find this comparisons to be a bit biased towards the expertise of the person testing it, if one is more proeficient with windows then the tests tend to favour windows, if the tester is more proeficient with linux it favours linux etc.
by and large i think the php team and the microsoft iis team have accomplished good raw performance equivalence across platforms.
that alone dictates which will perform better.
@ozzy true, not every page, regardless to the language validates.
mysql access with linux is faster by more than a little and on windows, mysql access deteriorates in version 5.3 (this seems to be poor implementation, see postgresql below.)
in .net, as we all know, everything is compiled so how would you know that a control you’re throwing on your page that has js and css embedded, code that you have no access to, is 1.
the web servers were apache2 on linux and iis 7 on windows.
" imo, the point was: why someone would use a templating engine over another templating engine @ozzy you’re right – it is messy.
i talked with them, they were smart guys.
i know my php friends and the linux dudes (and dude-etts) will probably come out of the wood work to refute my tests and results i’ve always thought that if high end performance options were part of your needs requirements,  then .net programming has some advanced options “out of the box” like multi-threading, asynchronous requests, and a number of caching options.
typo3, oscommerce, blah blah… most of these projects are perfect examples of heavy spaghetti, anti-pattern software.
however, upon further investigation, i realized that it does display in ie.
postgresql performance is very close on both platforms (within 6/100 of a second for 1000 operations) – it’s faster on windows and faster still on windows with php 5.3 ms sql server access from php 5.2 on windows is marginally slower than mysql access on linux.
long live c# hi joe, i would have loved to seen how classic asp performed against it’s big brother asp.net on windows server 2008.
as a c# developer, i really dislike the ugly php, but maybe i have to make a decision to use lamp.
rad in .net makes things not maintainable really.
i miss so many nice features from .net that i feel one quickly has gotten used to having.
i agree that the folks who developed drupal, joomla and wordpress have done a great job using php to accomplish this.
my comment was deleated becuase i can neither read or be polite and i’m only here to whine becuase i’m too lazy to add value.
if you dislike the results and want to refute them – do the work.
sigh… if some day during my life, i luckly see the asp.net/mvc can fully run on linux/unix, or
for my side projects, i’m not touching this so called "programming language".
i have quite similar experience… i have started working on php but ended up with asp.net because simply i feel the power which is above php.
however, i disagree because ultimately i need to meet client’s needs which might require the use of asp.net for one project, and php for a different one.
congratulation, excelent article joe stagner on august 6th, 2009 9:50 am vinod – this is typical of the stuff i found when i did my initial search.
they said it was because iis 7 provides a true multithreaded web server for php.
you are the first and your results will be taken into consideration, so we will set a windows system for testing trying to check the results.
mysql access from php on linux is a tiny bit faster than sql server access on windows (assuming common data types and select statements) but probably not enough to matter.
we got comments from user that they like the speed of the new driver (compared to libmysql, which is used with 5.2).
you managed to call me dishonest and incompetant in the same commnet – which also proves you didn’t read teh orriginal post.
i have done a few real life tests, file access is way too slow in windows and mysql is generally way faster than sql.
(just as the early learning complexity of asp.net can have it’s drawbacks. )
avinash on august 5th, 2009 10:49 pm nice one.
mysql backup and restore features are very bad.
long live c# andrew on august 6th, 2009 5:29 am hi joe, i would have loved to seen how classic asp performed against it’s big brother asp.net on windows server 2008.
would help to make an informed decision on using php for anything… my initial php trials tell me im better off learning objective-c on mac than web development, if im going to do any mac dev at all, since there is nothing that let me be as productive as i am in .net.
