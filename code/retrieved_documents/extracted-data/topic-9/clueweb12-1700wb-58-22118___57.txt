redhat has just released version 7.0 of its distribution, caldera, 2.2, debian, 2.1, and so forth.
each of these packages is selected by the distribution vendors to be a genuine and stable release of that package.
isn't its security model outdated?
managers will typically request that ``linux'' skills be taught to their employees through a training course.
on one hand, they may find a flaw in these internals that can be  indirectly exploited to compromise the security of a server.
it will explain everything you need to know about setting up partitions, dual boots, and other installation goodies.
there may also  have been subtle changes in the file system layout.
commercial unix third party software that has been ported to linux will  pose very little problem at all.
what's nice about rpm based distributions (redhat, mandrake, and others) is that almost all developers provide redhat .rpm
the hacker  may go one step further to cause those machines that are compromised to begin  executing those same programs.
linux has read and write support for all these file systems.
for those who are paranoid that the software they have downloaded is not  the genuine article distributed by the maintainer of that software, digital  signatures can verify the packager of that software.
cost of dedicated software that provides functions not inherently  supported by the operating system.
at some point, this crosses the definition of  what is called a "worm."
linux can interoperate seamlessly with windows shared file systems, so this is one area where you will have few migration problems.
what are the hardware requirements?
there are hence no prohibitive compatibility problems between linux distributions.
new graphics/network cards are always being released onto the  market.
it will run almost any  16-bit or 32-bit dos application.
there are so many different linux versions -- is this not confusion and  incompatibility?
linux is also considered far easier to maintain than any commercial unix system because of its widespread use and hence easy access to linux expertise.
of the popular server operating systems, unix  certainly has the most versatile, flexible, and applicable security model and  file system structure.
open source advocates vie for the superiority of the open source development model.
where is that documentation?
d.6 migrating to linux
the capabilities of linux are constantly expanding.
a further issue is that when a security hole is discovered, system administrators fail to heed the warnings announced to the linux community.
most cities have mailing lists  where responses to email questions are answered within hours.
with commercial systems, users are too stingy to share their knowledge because they feel that they owe nothing for having spent money on software.
smtp and pop/imap servers are an internet standard and can be replaced with linux servers.
this is the responsibility taken on  by those who create linux distributions.
unix is used for visualization and graphics rendering (as for some hollywood productions).
are linux cds readable from windows?
if you are using scrap hardware, an adequate machine for the x window system should not have less than an intel 486 100 mhz processor and 8 megabytes of ram.
there are commercial emulators that will run a virtual 386 machine under l inux.
the rule is basically this: if you have three packages that you would need to get working on a different distribution, then it is trivial to make the adjustments to do this.
you will then have to compile your own kernel for the processor you are using and possibly recompile packages.
this section discusses the relative merits of different unix systems and  nt.
the  only other stable release of the kernel was the previous 2.2 series which was  the standard for more than a year.
gnu is a recursive acronym.
fundamentally, linux is just a unix system, and a very user-friendly one at  that, so any difficulties with linux ought not to be greater than those with  your proprietary unix system.
in our experience (from both discussions and development), linux's  critical operations are always pedantically optimized--far more than would  normally be encouraged in a commercial organization.
that is doubly if you  are also paying for an operating system.
if this were to support a virus, it would only be able to damage the user's restricted space, but then it would be the application that is insecure, not l inux per se.
this tends to cost you in time or support charges.
explain the restrictions of linux's ``free''gnu general public  license.
new linux users  discover that help abounds and that they never lack friendly discussions about  any computing problem they may have.
gnu gpl and library gpl.
gpl advocates take issue with freebsd because its licensing allows a commercial organization to use freebsd without disclosing additions to the source code.
in this  way, you can trust linux far more than commercial institutions that think they  have a lot to lose by disclosing flaws in their software.
files (the file that a redhat package comes in).
as of early 2001 the figure was about 10-20 million.
see ``where do i get linux?''
gnu means doing things once in the best way  possible, providing solutions instead of quick fixes and looking exhaustively  at possibilities instead of going for the most brightly colored or expedient  approach.
this tends to cost you in time or support  charges.
it is only because of their efforts that the many critical packages that go into a unix distribution are available.
this is evident from user interest and industry involvement in linux ; journal subscriptions, web hits, media attention, support requirements,  software ports, and other criteria.
many developers of different areas of expertise collaborate to find the best way of doing things.
do not develop using tools that are tied very closely to  the operating system and are therefore unlikely to ever have unix versions;  there are free cross platform development tools that are more effective than  popular commercial ides: use these languages instead.
note that recently some distributions are coming out with pentium-only  compilations.
another issue is that linux servers are often installed by lazy people who  do not take the time to follow the simplest of security guidelines, even though  these guidelines are widely available and easy to follow.
linux software tends to prefer windows floppy disk formats, and iso9660 cd formats, even though almost everything else uses a different format.
linux is the core of a free unix operating system for the pc and other hardware platforms.
it is questionable whether the performance penalties we are talking about are of real concern in most practical situations.
most of the packages available in linux distributions  are also available for freebsd.
finally, many professional companies provide assistance at comparable hourly rates.
watch thelinux weekly news  to catch these.
should their basic unix knowledge be incomplete, a book like this one will  provide a good reference.
the hacker may also mechanically try to attack a large number of machines by using custom programs.
once you have decided on a distribution (see previous question), you need  to download that distribution or buy or borrow it on cd.
open source advocates vie for the superiority of the open source  development model.
freebsd  should rather be compared to debian than linux.
there are web mail and web groupware services that run on linux  servers that can be used from internet explorer.
it  also means distributed and open development, encouraging peer review,  consistency, and portability.
because all packages require this library, this was said to introduce incompatibility.
the different distributions are very similar and share binary  compatibility (provided that they are for the same type of processor of  course)--that is, linux binaries compiled on one system will work on another.
when you get linux, it will be inside a standard distribution, probably on a cd.
if you are a private individual with no unix expertise available to help you when you run into problems and you are not interested in learning about the underlying workings of a unix system, then you shouldn't install linux.
a gnu is a  large beast and is the motif of the free software foundation (fsf).
this makes linux more secure because security holes are discovered and reported by a wide network of programers.
d.4 linux support this section explains where to get free and commercial help with linux.
you can browse the installation documentation on the cd (if it has  any) using internet explorer.
it is slightly less  elegant to install.
depending on the area you look at, either linux or freebsd will have a better  implementation.
linux is supposed to lack proper smp support and therefore not be as scalable as other oss.
i personally prefer to have access to the source code so that i know what my software is doing.
in addition, linux supports a wide range of other file systems like those of os/2, amiga, and other unix systems.
depending on the area you look at, either linux or freebsd will have a better implementation.
most companies tend to underestimate how entrenched they are in windows skills.
many arguments put forward regarding server costs fail to take into  account the complete lifetime of the server.
you need to read through the install guide in detail.
bit binaries with little to no performance penalty.
negative cost of multiple servers: linux can run many services (mail,  file, web) from the same server rather than requiring dedicated servers, and  this can be a tremendous saving.
gnu software is software designed to meet a higher set of standards than its proprietary counterparts.
also consult the resources in chapter 13, ``what web pages should i look at?''
another partial reason for this superiority is that gnu software is often written by people from academic institutions who are in the center of it research and are most qualified to dictate software solutions.
for instance, make a policy that all documents must be saved in a portable format that is not bound to a particular wordprocessor package.
downloading from an ftp site is going to take a long time unless you have  a really fast link.
there is also criticism of linux's smp (multiprocessor) support, and lack of a journalling file system.
the average secretary will take many frustrating weeks gaining confidence with a different platform, while the system administrator will battle for much longer.
for instance, it is entirely feasible to run apache (a web server package) on a sco, irix, or sun systems, yet managers will request, for example, that their staff be taught how to configure a linux ``web server'' in order to avoid web server licensing fees.
if you have a hundred packages that you need to get working, then you have a problem.
this has been steadily improving to the point where microsoft office 2000 is said to be actually usable.
for instance, document font sizes, page breaking, and spacing will not be preserved exactly.
cost of essential upgrades.
because users constantly interact and discuss linux issues, 99% of the problems a user is likely to have would have already been documented or covered in mailing list archives, often obviating the need to ask anyone at all.
because many of the critical components of a typical linux distribution are really just gnu tools developed long before linux, it is unfair to merely call a distribution ``linux''.
especially worthwhile are distributions developed in your own country that specialize in the support of your local language.
because gnu software is open source, any hacker can easily research the  internal workings of critical system services.
kernel versions speak of features, not compatibility.
with 64  megabytes of ram and a 2-megabyte graphics card (i.e., capable of run 1024x768  screen resolution in 15/16 bit color).
in general, well-established brand names will always work, but will tend to cost more.
proprietary software is often looked down upon in the free software world  for many reasons: the development process is closed to external scrutiny.
because all packages require this library, this was  said to introduce incompatibility.
linux software tends to prefer windows floppy  disk formats, and iso9660 cd formats, even though almost everything else uses a  different format.
the web is also an excellent place for support.
unfortunately, it's not a marketable term because it requires this very explanation, which tends to bore people who don't really care about licensing issues.
commercial  distributions may contain proprietary software that you may not be allowed to  install multiple times.
(see also ``what is gnu?''
should their basic unix knowledge be incomplete, a book like this one will provide a good reference.
industry and universities use unix systems for scientific simulations and unix clusters for number crunching.
debian package management is vastly superior to any other.
most companies tend to underestimate how entrenched they are in windows  skills.
another important consideration is that the freebsd maintainers go to far more effort securing freebsd than does any linux vendor.
you should have no hesitation to install these  on linux.
it is therefore questionable whether free software is more secure or not.
freebsd is like a linux distribution in that it also relies on a large number of gnu packages.
the developer who does the porting will need to be an expert in unix development and an expert in windows development.
when we speak of free software, we are referring to freedom, not price.
proprietary unix systems are not as user friendly as linux.
for those who are paranoid that the software they have downloaded is not the genuine article distributed by the maintainer of that software, digital signatures can verify the packager of that software.
proprietary software is often looked down upon in the free software world for many reasons: the result of these limitations is that proprietary software gnu software, on the other hand, is open for anyone to scrutinize.
on the other hand, your windows or os/2 server, for example, has to be  licensed.
for people to feel it is useful means that they  have to have used it over a period of time; in this way only good, thoroughly  reviewed software gets included.
at some point in the future, a large number of users may be using the same  proprietary desktop application that has some security vulnerability in it.
once you have decided on a distribution (see previous question), you need to download that distribution or buy or borrow it on cd.
each of these packages is selected by the distribution vendors to be a  genuine and stable release of that package.
at boot time, a boot prompt will ask you to select which operating system you would like to boot into.
you as the user are not going to download arbitrary untested software any more than you would if you were using windows.
using a newsgroup has the benefit of the widest possible audience.
is that almost all developers provide redhat .rpm
this makes freebsd a  more trustworthy alternative.
sometimes it means ``public domain'' software that anyone can modify but which  can be incorporated into commercial packages where later versions will be  unavailable in source form.
it runs a great number of 32-bit dos games as well.
debian: this is probably the most technically advanced.
can i view my windows, os/2, and ms-dos files under linux?
an office tends to operate organically with individuals learning tricks from each other over long periods of time.
if you are an absolute beginner and don't really feel like thinking about  what distribution to get, one of the most popular and easiest to install is  mandrake.
some commercial unix systems are irix (for silicon graphics); solaris or sunos for sun microsystem sparc workstations; hp unix for hewlett packard servers; sco for the pc; osf for the dec alpha machine and aix for the powerpc/rs6000.
most of all other software in a typical linux distribution is also under the gpl or the lgpl (see below).
remember that linux is your operating system.
none of these arguments offset the fact that either of these systems is  preferable to a proprietary one.
you can make a linux system completely airtight by following a few simple guidelines, like being careful about what system services you expose, not allowing passwords to be compromised, and installing utilities that close possible vulnerabilities.
when the word gnu is mentioned, it usually evokes feelings of extreme left-wing geniuses who in their spare time produce free software that is far superior to anything even large corporations can come up with through years of dedicated development.
most of the packages available in linux distributions are also available for freebsd.
sometimes this means that development takes longer as more people  quibble over the best way of doing things.
in addition, linux supports a  wide range of other file systems like those of os/2, amiga, and other unix  systems.
does linux only support 2 gigs of memory and 128 meg of swap?
linux runs on other projects are in various stages of completion.
most distributions have very comprehensive installation guides, which is the reason i do not cover installation in this book.
the linux community has also produced a document called the linux  filesystem standard.
you still have to buy windows  though.
next: e. the gnu general up: rute previous: c. rhce certification cross-reference contents
it helps to think more laterally when trying to get information about linux : would-be l inux users everywhere need to know how to install l inux.
finally, many professional companies provide assistance at comparable  hourly rates.
it's a pain to install and manage,  although school kids who don't know any better love it.
if  this were to support a virus, it would only be able to damage the user's  restricted space, but then it would be the application that is insecure, not l inux per se.
the dos emulator package for linux is called dosemu.
a useful distribution of packages that includes the x window system (unix's graphical environment) will occupy less than 1 gigabyte.
you will be able to cut and paste between windows and linux application.
for example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have.
linux is supported by the community that uses linux.
collaborated effort between different developers means that code is  shared and effort is not replicated.
do not develop using tools that are tied very closely to the operating system and are therefore unlikely to ever have unix versions; there are free cross platform development tools that are more effective than popular commercial ides: use these languages instead.
remember also that with linux, a sufficient understanding of the system  makes it possible to easily detect and repair the corruption, without have to  do anything drastic, like reinstalling or buying expensive virus detection  software.
i personally prefer to have access to the source code so that i know what my  software is doing.
many developers of different  areas of expertise collaborate to find the best way of doing things.
gui applications written specifically for windows are difficult to port to  a unix system.
what is the total cost of installing and running a linux system compared  to a proprietary unix system?
it's also probably not worthwhile debating these kinds of speed issues when there are so many other good reasons to prefer linux.
(see the previous question.)
see the question  on security below.
this section explains where to get free and commercial help with linux.
it is especially noticeable how fast the  file system access is and how it scales smoothly when multiple services are  being used simultaneously.
what if linus torvalds stopped supporting linux?
the hacker may also mechanically  try to attack a large number of machines by using custom programs.
you can make a linux system completely airtight by following a few simple  guidelines, like being careful about what system services you expose,
it is also because of them that a freely available, comprehensive, legally definitive, free-software license is available.
it is not found, for instance, that security holes are covered up by maintainers for commercial reasons.
also try see what happens when you do a net search with ``linux installation guide.''
for  instance, make a policy that all documents must be saved in a portable format  that is not bound to a particular wordprocessor package.
there are some word processors  that have both unix and windows versions whose operation is identical on both  oss.
some freely available unix systems are netbsd, freebsd, and openbsd and also enjoy widespread popularity.
at boot time, a boot prompt will ask you to  select which operating system you would like to boot into.
shareware refers to completely nonfree software that is encouraged to be  redistributed at no charge, but which requests a small fee if it happens to  land on your computer.
it's also probably not worthwhile debating these kinds of speed issues  when there are so many other good reasons to prefer linux.
is incompatible with other proprietary software.
also make sure you have the latest version of whatever it is you're buying or downloading.
linux has several times the installed base of any unix system.
sometimes it means ``public domain'' software that anyone can modify but which can be incorporated into commercial packages where later versions will be unavailable in source form.
most probably, a team of core developers would take over the task if linus no longer worked on the kernel.
the total cost of a server includes the following:
this means that your old 386 will no longer work.
a worm is a thwarting of security that exploits the same security hole recursively through a network.
this is in contrast to the differences between, say, two unix operating systems  (compare sun vs. irix).
the linux unix c library implementation is called glibc.
for technical reasons, however, the swap space formerly required division into separate partitions of 128 megabytes each.
the average secretary will take many frustrating weeks gaining  confidence with a different platform, while the system administrator will  battle for much longer.
d.5 linux compared to other systems
get a grip on what this means: you can run minesweep under linux and it will come up on yourx window screen next to your other linux applications and look exactly like what it does under windows--and you don't have to buy windows.
there may also have been subtle changes in the file system layout.
is it true  that there is no threat of viruses with unix systems?
this has resulted in contrasting  reports that either claim that linux costs nothing or claim that it is  impossible to use because of the expense of the expertise required.
this section answers questions about the nature of free software and the concepts of gnu.
hence, rather ask around who locally sells linux on cd.
this has resulted in contrasting reports that either claim that linux costs nothing or claim that it is impossible to use because of the expense of the expertise required.
there are no commercial exceptions to this rule for a basic pc.
because of the legal terms of the gpl, for  linux to be distributed under a different copyright would require the consent  of all 200+ persons that have ever contributed to the linux source code.
this may not be up-to-date, so it's best to go to the various references  listed in this document and get the latest information.
this may not be up-to-date, so it's best to go to the various references listed in this document and get the latest information.
it is not free software at all.
new linux users discover that help abounds and that they never lack friendly discussions about any computing problem they may have.
linux can interoperate seamlessly with windows shared file systems, so  this is one area where you will have few migration problems.
linux programs will work regardless of the kernel version.
unfortunately,  it's not a marketable term because it requires this very explanation, which  tends to bore people who don't really care about licensing issues.
sometimes this means that development takes longer as more people quibble over the best way of doing things.
availability of used hardware and the os's capacity to support it.
the linux kernel is now on release version 2.4.3 as of this writing.
how does freebsd compare to linux?
for example, unix inherently restricts access to files outside the user's privilege space, so a virus would have nothing to infect.
note that no corporate body oversees linux.
on one hand, they may find a flaw in these internals that can be indirectly exploited to compromise the security of a server.
d.3 linux distributions this section covers questions that about how linux software is packaged  and distributed and how to obtain linux.
could he sell out to a company?
cases where vandals have  managed to substitute a bogus package for a real one are extremely rare and  entirely preventable.
another partial reason for this superiority is that gnu software is often  written by people from academic institutions who are in the center of it  research and are most qualified to dictate software solutions.
force your developers to test their web pages on netscape/mozilla as well  as internet explorer.
to check on hardware support, see the hardware-howto
learn about the capabilities  of linux by watching internet publications: a manager who is not prepared to do  this much should not expect their staff to do better.
developement of this operating system started in 1984; it was called the gnu project of the free software foundation (fsf).
the term gnu/linux is more accurate and gives credit to the larger part of linux.
also make sure you have the latest version of whatever it is you're buying or  downloading.
however, many applications (especially large and complex ones) do not  display correctly under linux or crash during operation.
viruses are small programs that exploit social engineering, logistics, and the inherent flexibility of a computer system to do undesirable things.
unix systems are used as database, file, and internet servers.
it is true, however, that multiple versions of libraries can coexist on the same system, and hence no serious compatibility problem was ever introduced in this transition.
at some point, this crosses the definition of what is called a "worm."
it is really academia that develops the theoretical models for computer science--industry only implements these.
gnu represents this software licensed under the gnu general public  license--it is calledfree software.
another issue is that linux servers are often installed by lazy people who do not take the time to follow the simplest of security guidelines, even though these guidelines are widely available and easy to follow.
unix systems that run on specialized hardware are almost never worth what you paid for them in terms of a cost/performance ratio.
hundreds of web pages are devoted to linux.
it is important to gauge whether your staff have a real understanding of the tcp/ip networks and unix systems that you are depending on, rather then merely using a trial-and-error approach to configuring your machines.
because of the community nature of linux users, there is openness and  honesty with regard to security issues.
because source code can be viewed by anyone, developers write code more  carefully and are more inspired and more meticulous.
of the popular server operating systems, unix certainly has the most versatile, flexible, and applicable security model and file system structure.
get a grip on what this means: you can run minesweep under linux and it  will come up on yourx window screen next to your other linux  applications and look exactly like what it does under windows--and you don't  have to buy windows.
allowing passwords to be compromised, and installing utilities that close  possible vulnerabilities.
there are more examples of linux versions of windows languages,  however, any application that interfaces with many proprietary tools and is  written in a proprietary language is extremely difficult to port.
many windows games do, however, work quite well under linux, including those with accelerated 3d graphics.
however, most of the time peer review results in a more reliable product.
unix systems are the backbone of the internet.
hence, your  other partitions will be readable from linux.
hence, your other partitions will be readable from linux.
a net search will reveal the enormous amount of information available.
there have been a great many misguided attempts to show that linux  performs better or worse than other platforms.
linux might even split into different development teams if a disagreement did break out about some programming issue, and it might rejoin later on.
other vendors have since followed suit in making the transition to glibc (also known as libc6).
many companies also develop in-house applications specific to their  corporation's services.
unix systems are multitasking and multiuser systems, meaning that multiple concurrent users running multiple concurrent programs can connect to and use the same machine.
redhat: this is possibly the most popular.
although linux is free, a good knowledge of unix is required to install  and configure a reliable server.
this section covers questions that pertain to linux as a whole.
gnu has also become a movement in the computing world.
hence, if you get one of these on cd, feel free to install it as many times as you like.
an international mirror for linux distributions is metalab  distributions mirror .
managers will typically request that ``linux'' skills be taught to their  employees through a training course.
there are more examples of linux versions of windows languages, however, any application that interfaces with many proprietary tools and is written in a proprietary language is extremely difficult to port.
files (the file that a redhat  package comes in).
it's what is meant by virus-software-for-l inux.
viruses are small programs that exploit  social engineering, logistics, and the inherent flexibility of a computer  system to do undesirable things.
in other cases,  authors write software for their own use out of their own dissatisfaction for  existing proprietary software--a powerful motivation.
other vendors have since  followed suit in making the transition to glibc (also known as libc6).
utilities also exist to convert packages meant for one distribution to be installed on a different distribution.
hence, if your hardware is not performing the absolute best it can, it's by a very small margin.
typical users should purchase an entry-level pc with at least 16 megabytes of  ram if they are going to run the x window system (unix's graphical environment)  smoothly.
l inux departs completely from every habit they might have learned about their computer.
costs far more than it is worth.
winelib is a part of the wine package (see below) and allows windows c applications to be recompiled to work under linux.
you can find  reviews on the internet.
in general, the performance improvement of a linux machine is quite visible to users and administrators.
linux typically performs 50% to 100% better than other operating systems on the same hardware.
what is open source vs. free vs. shareware?
be aware that people will make any excuse to avoid having to learn something new.
because source code can be viewed by anyone, developers write code more carefully and are more inspired and more meticulous.
the linux kernel is distributed under the gnu general public license (gpl) which is reproduced in appendixe and is available from the fsf home page .
identify common  problems and create procedures for solving them.
the arguments comparing the freebsd kernel to the linux kernel center around the differences between how various kernel functions are implemented.
this will not only improve code quality but will make the code more portable.
it sometimes refers to any proprietary vendor releasing source code to their package, even though that source code is not free in the sense of users being able to modify it and redistribute it.
on the other hand, individuals may find a flaw in these internals that they can report to the authors of that package, who will quickly (sometimes within hours) correct the insecurity and release a new version on the internet.
the gnu project is an effort  to create a free unix-like operating system from scratch; the project was  started in 1984.
what is clear is that the number of linux users is doubling consistently  every year.
the orbiten free software survey  came up with the following breakdown of contributors after surveying a wide array of open source packages.
there are web mail and web groupware services that run on linux servers that can be used from internet explorer.
the embedded market (small computers without operators that exist inside appliances) has recently turned toward linux systems, which are being produced in the millions.
if you are an absolute beginner and don't really feel like thinking about what distribution to get, one of the most popular and easiest to install is mandrake.
it has been in development  for many years now, and has reached the point where many simple programs work  quite flawlessly under linux.
it is  also doesn't matter to the end user because the end user has selected a popular  linux distribution packaged by someone who has already dealt with these issues.
richard stallman is the founder of the fsf and the creator of the gnu general public license.
one gigabyte of free disk space is  necessary.
it has recently  become the most popular and may be worth using in preference to redhat.
apparently this works extremely well, with virtually no changes to the source code being necessary.
because the unix name is a registered trademark, most systems are not called unix.
gnu (pronounced with a hard g) is an acronym for gnus not unix.
linux typically performs 50% to 100% better than other operating systems  on the same hardware.
the linux community has also produced a document called the linux filesystem standard.
typical users should purchase an entry-level pc with at least 16 megabytes of ram if they are going to run the x window system (unix's graphical environment) smoothly.
in this case, it will  be essential to hire an experienced developer who is familiar with the gnu  compiler tools.
gpl advocates take issue with freebsd because its licensing allows a  commercial organization to use freebsd without disclosing additions to the  source code.
most can (and do) actually work on any other of the unix systems mentioned above.
each of these is based on particular commercial or moral outlooks.
it is questionable  whether the performance penalties we are talking about are of real concern in  most practical situations.
the hacker may go one step further to cause those machines that are compromised to begin executing those same programs.
many other popular distributions are worth installation.
freebsd should rather be compared to debian than linux.
at some point in the future, a large number of users may be using the same proprietary desktop application that has some security vulnerability in it.
identify common problems and create procedures for solving them.
on the other hand, debian packages are mostly created by people  on the debian development team, who have rigorous standards to adhere to.
shareware refers to completely nonfree software that is encouraged to be redistributed at no charge, but which requests a small fee if it happens to land on your computer.
it will run almost any 16-bit or 32-bit dos application.
the only other stable release of the kernel was the previous 2.2 series which was the standard for more than a year.
please consult the various internet resources listed for up-to-date information.
gnu software, on the other hand, is open for anyone to scrutinize.
however, although linux cannot itself execute a virus, it may be able to pass on a virus meant for a windows machine should a linux machine act as a mail or file server.
open  industry and academic standards are adhered to, to make software consistent and  compatible.
is linux enterprise-ready?
as of early 2001 the figure was  about 10-20 million.
various estimates have been put  forward based on statistical considerations.
before installing any linux machines, you should identify what each person in your organization does with their computer.
when  redhat brought out version 5.0 of its distribution, it changed to glibc from  the older libc5 library.
thousands of web pages are devoted to different free software packages.
the installation procedure will be completely different for each distribution.
a useful distribution of packages that includes the x window system  (unix's graphical environment) will occupy less than 1 gigabyte.
it is not the case that any person is free to modify original distributions of packages and thereby hurt the names of the maintainers of that package.
how  compatible are the different distributions?
this enables mostly flawless running of windows under linux if you really have to and at a large performance penalty.
it helps to think more laterally when trying to get information about linux :
what is often missed, is that their staff  have little basic unix experience to begin with.
what are the principal issues when migrating to linux from a non-unix  system?
(see also next question.)
when all these factors are considered, any company should probably make a  truly enormous saving by choosing a linux server over a commercial operating  system.
you as the user are not going to download arbitrary untested software any  more than you would if you were using windows.
can do anything behind your back without your knowing.
linux is as secure as or more secure than typical unix systems.
what is the total cost of installing and running linux compared to a  proprietary non-unix system?
browse around your cd to find it or consult your vendor's web site.
this is a process that many gnu software packages  are continually going through, to no ill effect.
the attributes of some distributions are: mandrake: mandrake is redhat with some packages added and updated.
surely the free software community has long since generated documentation to help them?
linux users, on the other hand, are very supportive of other linux users.
it also means distributed and open development, encouraging peer review, consistency, and portability.
linux has a far more dedicated and ``beginner friendly'' documentation project than any commercial unix, and many more user-friendly interfaces and commands.
d.7 technical this section covers various specific and technical questions.
i have never read a completely conclusive study.
usually these studies are done with one or other competing system having better expertise at its disposal and are, hence, grossly biased.
linux's up-and-coming graphical user interfaces (gui) are the most functional and aesthetically pleasing ever to have graced the computer screen.
it doesn't really matter much  from the end user's perspective, since gnu software by its nature always tends  to gravitate towards consistency and improvement, one way or another.
one of the purposes of the fsf is to promote and develop free alternatives to proprietary software.
such systems are sitting ducks and are often attacked.
as linux begins to dominate the embedded market, that  number will soon surpass the number of all other operating systems combined.
freebsd is not merely a kernel but also a distribution, a development  model, an operating system standard, and a community infrastructure.
it can do anything that any other network server can do, more efficiently and reliably.
still others have a specialized purpose, like real time work or high security.
to avoid this problem, numerous virus detection programs for linux are now becoming available.
more information on these  licenses can be had from themetalab license list  what is gnu?
today, u nix systems are used by large isps through to small businesses as a matter of course.
it is not the case that any person is free to modify original  distributions of packages and thereby hurt the names of the maintainers of that  package.
being an in-house application, the primary concern of  the developers was to ``get it working'', and that might have been accomplished  only by a very small margin.
on the other hand, debian packages are mostly created by people on the debian development team, who have rigorous standards to adhere to.
one gigabyte of free disk space is necessary.
what is the most popular unix in the world?
note that scrap hardware can bevery time consuming to configure.
even if it did happen, new developers would probably rally in  defiance and continue to work on the kernel as it is.
suddenly running the code on a different platform will unleash havoc, especially if it was badly written.
what about smp and a journalling file system?
the different distributions are very similar and share binary compatibility (provided that they are for the same type of processor of course)--that is, linux binaries compiled on one system will work on another.
there are a great many theoretical paradigms of operating system that vary in complexity and practicality.
if you really need this much memory, you should be using a 64-bit system,  like a dec alpha, or sun ultrasparc machine.
note that recently some distributions are coming out with pentium-only compilations.
neither of  these extreme views is true.
gnu also means a healthy disrespect for the concept of a deadline and a release schedule.
the following is based on my personal experience during the migration of three large companies to linux.
a good linux machine is a pii 300 (or amd, k6, cyrix, etc.)
how should a supervisor proceed after making the decision to migrate to l inux?
this is somewhat true and has been the case until kernel 2.4 was released in january 2001.
can i run windows programs under linux?
you may not be able to migrate to linux immediately, but you can save yourself enormous effort by taking steps in anticipation of that possibility.
the gnu project is an effort to create a free unix-like operating system from scratch; the project was started in 1984.
this means  that in the event of a power failure, there is very little chance that the file  system would ever be corrupted, or that manual intervention would be required  to fix the file system.
linux itself can operate as a web, file, smb (winnt), novell, printer, ftp, mail, sql, masquerading, firewall, and pop server to name but a few.
a further issue is that when a security hole is discovered, system  administrators fail to heed the warnings announced to the linux community.
wean people off tools and network services that do not have unix  equivalents.
free software, in  the sense offreedom to modify and redistribute is the preferred term and  necessitates a copyright license along the same vein as the gpl.
these people come from such a variety of places, that such a task is logistically infeasible.
companies will have to make careful decisions about standardizing what people use, and creating customizations peculiar to their needs.
whereas windows does not offer a wide range of options with regards to  desktops and office suites, the look-and-feel of a linux machine can be as  different between the desktops of two users as is windows 98 different from an  apple macintosh.
freebsd is like a linux distribution in that it also relies on a large  number of gnu packages.
as and my documents buttons.
however, all software specifically written for linux will recompile without any modifications on another linux platform in addition to compiling withfew modifications on other unix systems.
linux programs  will work regardless of the kernel version.
what's nice about rpm based distributions (redhat, mandrake, and others)
yes, linux will occupy two or more partitions, while windows will sit in  one of the primary partitions.
most distributions have very comprehensive installation guides, which is  the reason i do not cover installation in this book.
cost of installation.
some distributions  are, however, created for specific hardware, and thus their packages will only  run on that hardware.
can i recompile windows programs under linux?
most cities have mailing lists where responses to email questions are answered within hours.
this section covers various specific and technical questions.
linux is said to be posix compliant, meaning that it confirms to a certain definite computing standard laid down by academia and industry.
the installation procedure will be completely different for each  distribution.
such people are rare and expensive to hire.
some distributions are, however, created for specific hardware, and thus their packages will only run on that hardware.
each of these efforts combines hundreds of packages (e.g., the apache web server is one package, the netscape web browser is another) into a l inux distribution.
for many people, the concept of a computer is synonymous with thesave
there are many kernel developers who have sufficient knowledge to do the  job of linus.
the upshot of this is that although your proprietary unix system will  perform as reliably as linux, it will be more time consuming to maintain.
an international mirror for linux distributions is metalab distributions mirror .
using a newsgroup has the  benefit of the widest possible audience.
how much space do i need to install linux?
neither of these extreme views is true.
this makes linux more secure because security holes are discovered and reported  by a wide network of programers.
a virus is a program that replicates itself by modifying the system on  which it runs.
free software advocates vie for the ethical responsibility of making  source code available and encouraging others to do the same.
another important consideration is that the freebsd maintainers go to far  more effort securing freebsd than does any linux vendor.
how is the user protected from bogus software?
kernel versions speak of features,  not compatibility.
the wine project now allows pure c windows applications  to be recompiled under unix, and borland has developed kylix (a linux version  of delphi).
implicit costs of server downtime because of security breaches.
the rule is basically this: if you have three packages that you would need  to get working on a different distribution, then it is trivial to make the  adjustments to do this.
for example, you may get linux up and running on many other hardware platforms, but it would take some time and expertise to install, and you might not have graphics capabilities.
make the necessary books available to them.
i have heard that linux does not suffer from virus attacks.
it is important to gauge whether your staff have a real understanding of  the tcp/ip networks and unix systems that you are depending on, rather then  merely using a trial-and-error approach to configuring your machines.
because a unix system does not allow this kind of flexibility in the first  place, there is categorically no such thing as a virus for it.
hence, if your hardware is  not performing the absolute best it can, it's by a very small margin.
note that word and excel documents can be read by various linux office applicationsbut complex formatting will not convert cleanly.
network servers can run on a 386 with 4 megabytes of ram and  a 200-megabyte hard drive.
and you  must show them these terms so they know their rights.
if you are developing  using a compiler language, your developers should ensure that code compiles  cleanly with independent brands of compiler.
gnu represents this software licensed under the gnu general public license--it is calledfree software.
about 90% of all hardware available for the pc is supported under linux.
what if linus torvalds decided to change the copyright on the kernel?
each new incarnation of a distribution will have newer versions of packages contained therein and better installation software.
where do i get linux?
note that scrap hardware can bevery time  consuming to configure.
unix systems that run on specialized hardware are almost never worth what  you paid for them in terms of a cost/performance ratio.
linux contains a highly advanced dos emulator.
however, although linux cannot itself execute a virus, it may be able to  pass on a virus meant for a windows machine should a linux machine act as a  mail or file server.
because it is easy to survey online machines, it is well-established that  over 25% of all web servers run linux.
this undertaking is difficult  but very instructive.
will a program from one linux distribution run on another?
if you have any custom applications, you need to identify  what they do and create a detailed specification of their capabilities.
this is an answer nobody really knows.
there are many kernel developers who have sufficient knowledge to do the job of linus.
this section discusses the relative merits of different unix systems and nt.
package files are usually provided, but not as often as .rpm.
each linux distribution has its own versioning system.
because a unix system does not allow this kind of flexibility in the first place, there is categorically no such thing as a virus for it.
this free kernel would amass more followers and would quickly become the standard, with or without linus.
this is a process that many gnu software packages are continually going through, to no ill effect.
collaborated effort between different developers means that code is shared and effort is not replicated.
none of these arguments offset the fact that either of these systems is preferable to a proprietary one.
open source is a new catch phrase that is ambiguous in meaning but is often used synonymously with free.
learn about the capabilities of linux by watching internet publications: a manager who is not prepared to do this much should not expect their staff to do better.
the distribution has legendary technical excellence and stability.
if you really need this much memory, you should be using a 64-bit system, like a dec alpha, or sun ultrasparc machine.
these restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it.
a network server that does not have to run x can get away with about 100-300 megabytes.
apparently this  works extremely well, with virtually no changes to the source code being  necessary.
applicationsbut complex formatting will not convert cleanly.
gnu software is software designed to meet a  higher set of standards than its proprietary counterparts.
in 1984 the free software foundation (fsf) set out to create a free unix -like system.
the linux core (or kernel), named after its author, linus torvalds, began development in 1991--the first usable releases where made in 1993.
you will be able to cut and paste between windows and linux  application.
these two issues are discussed in the next question.
the following is quoted from the gpl itself.
force your developers to test their web pages on netscape/mozilla as well as internet explorer.
under no circumstance install from a distribution that has been  superseded by a newer version.
such systems are  sitting ducks and are often attacked.
to protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights.
possibly the most important reason for the superiority of free software is peer review.
what is often missed, is that their staff have little basic unix experience to begin with.
this section covers questions that about how linux software is packaged and distributed and how to obtain linux.
new graphics/network cards are always being released onto the market.
there are a great many theoretical paradigms of operating system that vary  in complexity and practicality.
users have close and direct contact with developers, ensuring that bugs are fixed quickly and that user needs are met.
cases where vandals have managed to substitute a bogus package for a real one are extremely rare and entirely preventable.
if you are developing using a compiler language, your developers should ensure that code compiles cleanly with independent brands of compiler.
it is not found, for instance, that  security holes are covered up by maintainers for commercial reasons.
linux is often called gnu/l inux because much of the os (operating system) results from the efforts of the gnu project.
on the whole, freebsd is thought to have a better architecture,  although linux has had the benefit of having been ported to many platforms, has  a great many more features, and supports far more hardware.
l inux has now moved into the world of the desktop.
when you get linux, it will be inside a standard distribution, probably on  a cd.
the principles underlying os development have not changed since the  concept of an os was invented some 40+ years ago.
what if kernel  development split?
linux supports a full 64 gigabytes of memory, with 1 gigabyte of unshared  memory per process.
linux might even split into different  development teams if a disagreement did break out about some programming issue,  and it might rejoin later on.
the developer  who does the porting will need to be an expert in unix development and an expert in windows development.
for example, unix  inherently restricts access to files outside the user's privilege space, so a  virus would have nothing to infect.
it has been in development for many years now, and has reached the point where many simple programs work quite flawlessly under linux.
there are many other types of free software licenses.
if you have a hundred packages that you need to get  working, then you have a problem.
all applications, network server programs, and utilities that go into a full linux machine are free software programs recompiled to run under the linux kernel.
richard stallman is the founder of the fsf and the creator of the gnu  general public license.
it typically runs  applications much faster than does normal dos because of linux's faster file  system access and system calls.
there are some word processors that have both unix and windows versions whose operation is identical on both oss.
i have never read a completely  conclusive study.
some of the popular linux distributions are: there are now about 200 distributions of linux.
one of the purposes of the fsf is to promote and  develop free alternatives to proprietary software.
on the other hand, conditions sometimes allow an intelligent hacker to target a machine and eventually gain access.
can i run linux and windows on the same machine?
most packages have email lists where  the very developers are available for questions.
remember also that with linux, a sufficient understanding of the system makes it possible to easily detect and repair the corruption, without have to do anything drastic, like reinstalling or buying expensive virus detection software.
because it is easy to survey online machines, it is well-established that over 25% of all web servers run linux.
downloading from an ftp site is going to take a long time unless you have a really fast link.
you may not be able to migrate to linux immediately, but you can save yourself  enormous effort by taking steps in anticipation of that possibility.
implicit costs of server downtime because of software bugs.
it runs a great number of 32-bit dos games as  well.
it can run in an x window just like a dos window under windows.
these  people come from such a variety of places, that such a task is logistically  infeasible.
isn't unix antiquated?
gui applications written specifically for windows are difficult to port to a unix system.
this is in contrast to the differences between, say, two unix operating systems (compare sun vs. irix).
in our experience (from both discussions and development), linux's critical operations are always pedantically optimized--far more than would normally be encouraged in a commercial organization.
l inux can run on as little as a single stiffy disk--that's 1.4 megabytes--and still perform various network services.
you will then  have to compile your own kernel for the processor you are using and possibly  recompile packages.
various estimates have been put forward based on statistical considerations.
what is clear is that the number of linux users is doubling consistently every year.
linux runs on many different hardware platforms, as explained above.
restricted: less free than any of the above.
what are the principal issues when migrating to linux from another unix  system?
turbolinux, suse, and some others are also very popular.
freebsd is not merely a kernel but also a distribution, a development model, an operating system standard, and a community infrastructure.
cost of maintenance.
there is also criticism of linux's smp (multiprocessor) support, and lack  of a journalling file system.
gnu supporters don't like to use the term open source.
every month or so support is announced for some new esoteric hardware platform.
linux is supposed to lack proper smp support and therefore not be as  scalable as other oss.
well written unix applications (even gui applications) will, however, port  very easily to linux and of course to other unix systems.
see the wine headquarters  for more information.
browse around your cd to  find it or consult your vendor's web site.
and ``what is linux?''.)
for people to feel it is useful means that they have to have used it over a period of time; in this way only good, thoroughly reviewed software gets included.
what is the best distribution to use?
high-end servers and multiuser mainframes are traditionally unix based.
most packages have email lists where the very developers are available for questions.
this is somewhat true and has been the case until kernel  2.4 was released in january 2001.
unix systems have been around since the 1960s and are a proven standard in industry.
gnu means doing things once in the best way possible, providing solutions instead of quick fixes and looking exhaustively at possibilities instead of going for the most brightly colored or expedient approach.
there are also some free versions of these.
how does linux compare to other operating systems in performance?
newsgroups provide assistance where linux issues are discussed and help is given to new users; there are many such newsgroups.
you can generally rely on performance improvements and reduced costs.
free software, in the sense offreedom to modify and redistribute is the preferred term and necessitates a copyright license along the same vein as the gpl.
however, mandrake, redhat, debian, and slackware are  all committed to freedom and hence will not have any software that is not  redistributable.
this will not only improve code  quality but will make the code more portable.
when the word gnu  is mentioned, it usually evokes feelings of extreme left-wing geniuses who in  their spare time produce free software that is far superior to anything even  large corporations can come up with through years of dedicated development.
is linux as secure as other servers?
the following lists the top 20 contributors by amount of code written: serial author bytes percentage projectsserial author bytes percentage projects this listing contains the top 20 contributors by number of projects contributed to: serial author bytes percentage projectsserial author bytes percentage projects the preceding tables are rough approximations.
suddenly running the code on a different platform  will unleash havoc, especially if it was badly written.
the principles underlying os development have not changed since the concept of an os was invented some 40+ years ago.
an office tends to operate organically with individuals learning tricks  from each other over long periods of time.
users  can (and do) freely fix and enhance software for their own needs, and then  allow others the benefit of their extensions.
you are  allowed to charge for the service of distributing, installing, and maintaining  software.
for technical reasons,  however, the swap space formerly required division into separate partitions of  128 megabytes each.
network servers can run on a 386 with 4 megabytes of ram and a 200-megabyte hard drive.
although linux is free, a good knowledge of unix is required to install and configure a reliable server.
the wine project now allows pure c windows applications to be recompiled under unix, and borland has developed kylix (a linux version of delphi).
see the question on security below.
fails to build on existing software because of licensing issues.
in general, the performance improvement of a linux machine is quite  visible to users and administrators.
fundamentally, linux is just a unix system, and a very user-friendly one at that, so any difficulties with linux ought not to be greater than those with your proprietary unix system.
be aware that people will make any excuse to avoid having to learn  something new.
the attributes of some distributions are:
what hardware is supported?
in this way, linux  isless secure because security holes can be discovered by arbitrary  individuals.
even if it did happen, new developers would probably rally in defiance and continue to work on the kernel as it is.
by  not upgrading that service, they leave open a window to opportunistic hackers.
can i run dos programs under linux?
it is especially noticeable how fast the file system access is and how it scales smoothly when multiple services are being used simultaneously.
because gnu software is open source, any hacker can easily research the internal workings of critical system services.
smtp and pop/imap servers are an internet standard and can be  replaced with linux servers.
there is also a project called wine (windows emulator) which aims to provide a free alternative to windows by allowing linux to run windows 16 or 32 bit binaries with little to no performance penalty.
our general public licenses are designed to make sure that you have the  freedom to distribute copies of free software (and charge for this service if  you wish), that you receive source code or can get it if you want it, that you  can change the software or use pieces of it in new free programs; and that you  know you can do these things.
the total cost of a server includes the following: cost of the os license.
wean people off tools and network services that do not have unix equivalents.
but a package will not find its way into a distribution unless someone  feels that it is a useful one.
will my sound/graphics/network card work?
hence, many efforts have been made to package all of the utilities needed for a unix system into a single collection, usually on a single easily installable cd.
linux has a proper journalling file system called reiserfs.
with 64 megabytes of ram and a 2-megabyte graphics card (i.e., capable of run 1024x768 screen resolution in 15/16 bit color).
there is also a project called wine (windows emulator) which aims to  provide a free alternative to windows by allowing linux to run windows 16 or 32
many windows games do, however, work quite well under linux, including  those with accelerated 3d graphics.
this means that linux is largely compatible with other unix systems (the same program can be easily ported to run on another unix system with few (sometimes no) modifications) and will network seamlessly with other unix systems.
utilities also exist to convert packages meant for one  distribution to be installed on a different distribution.
you are allowed to charge for the service of distributing, installing, and maintaining software.
it  will explain everything you need to know about setting up partitions, dual  boots, and other installation goodies.
you still have to buy windows though.
linux has a far  more dedicated and ``beginner friendly'' documentation project than any  commercial unix, and many more user-friendly interfaces and commands.
it is the nonprohibition to redistribute and modify gnu software that  is meant by the word free.
if you have any custom applications, you need to identify what they do and create a detailed specification of their capabilities.
however, all software specifically written for linux will  recompile without any modifications on another linux platform in addition to  compiling withfew modifications on other unix systems.
well written unix applications (even gui applications) will, however, port very easily to linux and of course to other unix systems.
note that the gpl does not say that gnu software is without cost.
newsgroups provide assistance where linux issues are discussed and help is  given to new users; there are many such newsgroups.
under no circumstance install from a distribution that has been superseded by a newer version.
on the whole, freebsd is thought to have a better architecture, although linux has had the benefit of having been ported to many platforms, has a great many more features, and supports far more hardware.
possibly the most important reason for the superiority of free software is  peer review.
this has been steadily  improving to the point where microsoft office 2000 is said to be actually  usable.
how do i install linux?
because of the community nature of linux users, there is openness and honesty with regard to security issues.
but don't stop there--there are hundreds more.
most probably, a team of core developers would take over the task  if linus no longer worked on the kernel.
in some supposedly independent tests, linux tended to outperform nt as a web server, file server, and database server by an appreciable margin.
this is the responsibility taken on by those who create linux distributions.
the result of these limitations is that proprietary software does not conform to good standards for information technology.
being an in-house application, the primary concern of the developers was to ``get it working'', and that might have been accomplished only by a very small margin.
redhat has just  released version 7.0 of its distribution, caldera, 2.2, debian, 2.1, and so  forth.
users can (and do) freely fix and enhance software for their own needs, and then allow others the benefit of their extensions.
l inux departs completely from every habit they might have learned about their  computer.
many companies also develop in-house applications specific to their corporation's services.
also consult the resources in chapter 13, ``what web pages should i  look at?''
my purchased software is  supported; how does linux compete?
various issues make it more and less secure.
hence, if you get one of these on cd, feel free to install it  as many times as you like.
commercial unix third party software that has been ported to linux will pose very little problem at all.
users are not allowed to share the software.
for instance, it is entirely  feasible to run apache (a web server package) on a sco, irix, or sun systems,  yet managers will request, for example, that their staff be taught how to  configure a linux ``web server'' in order to avoid web server licensing fees.
on the other hand, individuals may find a flaw in these internals that  they can report to the authors of that package, who will quickly (sometimes  within hours) correct the insecurity and release a new version on the internet.
when redhat brought out version 5.0 of its distribution, it changed to glibc from the older libc5 library.
this undertaking is difficult but very instructive.
but a package will not find its way into a distribution unless someone feels that it is a useful one.
there are no commercial exceptions to this rule for a  basic pc.
if everyone is constantly modifying the source, isn't this bad for the  consumer?
heavy industry, mission-critical applications, and universities have always used unix systems.
in this way, you can trust linux far more than commercial institutions that think they have a lot to lose by disclosing flaws in their software.
l inux can run on as little as a single stiffy disk--that's 1.4 megabytes--and  still perform various network services.
it doesn't really matter much from the end user's perspective, since gnu software by its nature always tends to gravitate towards consistency and improvement, one way or another.
their acronyms are as follows (as defined by the linux software map database) in no particular order: gnu (pronounced with a hard g) is an acronym for gnus not unix.
a network  server that does not have to run x can get away with about 100-300 megabytes.
how many linux systems are there out there?
in this case, it will be essential to hire an experienced developer who is familiar with the gnu compiler tools.
why is gnu software better than proprietary software?
on 64-bit systems, linux supports more memory than most first-world  governments can afford to buy.
this makes freebsd a more trustworthy alternative.
users are unable to add features to the software.
free software advocates vie for the ethical responsibility of making source code available and encouraging others to do the same.
the upshot of this is that although your proprietary unix system will perform as reliably as linux, it will be more time consuming to maintain.
if linux is free, where do companies have the right to make money from  selling cds?
for  instance, document font sizes, page breaking, and spacing will not be preserved  exactly.
smb file servers can be replaced by linux samba servers.
however, many applications (especially large and complex ones) do not display correctly under linux or crash during operation.
maintainers of packages ensure that official releases are downloadable  from their home pages and will upload original versions onto well-established  ftp servers.
maintainers of packages ensure that official releases are downloadable from their home pages and will upload original versions onto well-established ftp servers.
when we speak of free software, we are referring to freedom, not  price.
however, mandrake, redhat, debian, and slackware are all committed to freedom and hence will not have any software that is not redistributable.
it is true, however, that multiple versions  of libraries can coexist on the same system, and hence no serious compatibility  problem was ever introduced in this transition.
in other cases, authors write software for their own use out of their own dissatisfaction for existing proprietary software--a powerful motivation.
to protect your rights, we need to make restrictions that forbid  anyone to deny you these rights or to ask you to surrender the rights.
our general public licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things.
if you buy one of these, you might have to wait many months before support becomes available (if ever).
wastes a lot of time duplicating the effort of other proprietary software.
it is completely free and  very well structured as well as standards conformant.
the linux kernel version does not affect the linux user.
before installing any linux machines, you should identify what each person  in your organization does with their computer.
you can generally rely on performance  improvements and reduced costs.
users are unable to correct errors (bugs) in the software.
on the other hand, conditions sometimes allow an intelligent hacker to  target a machine and eventually gain access.
surely the free software community has long since generated documentation  to help them?
some of these are single floppy routers or rescue disks, and others are modifications of popular existing distributions.
open source is a new catch phrase that is ambiguous in meaning but is  often used synonymously with free.
would-be l inux users everywhere need to know how to install l  inux.
they do, however, give an idea of the spread of contributions.
many arguments put forward regarding server costs fail to take into account the complete lifetime of the server.
a virus is a program that replicates itself by modifying the system on which it runs.
this means that in the event of a power failure, there is very little chance that the file system would ever be corrupted, or that manual intervention would be required to fix the file system.
this is evident from user interest and industry involvement in linux ; journal subscriptions, web hits, media attention, support requirements, software ports, and other criteria.
when all these factors are considered, any company should probably make a truly enormous saving by choosing a linux server over a commercial operating system.
you must make sure that they, too, receive or can get the source code.
each new incarnation of a distribution will have newer versions of  packages contained therein and better installation software.
especially  worthwhile are distributions developed in your own country that specialize in  the support of your local language.
these  restrictions translate to certain responsibilities for you if you distribute  copies of the software, or if you modify it.
you should have no hesitation to install these on linux.
in some supposedly independent tests, linux tended to outperform nt as a web  server, file server, and database server by an appreciable margin.
linux supports a full 64 gigabytes of memory, with 1 gigabyte of unshared memory per process.
for example, if you distribute copies of such a program, whether  gratis or for a fee, you must give the recipients all the rights that you have.
smb file servers can be replaced by linux samba  servers.
whereas windows does not offer a wide range of options with regards to desktops and office suites, the look-and-feel of a linux machine can be as different between the desktops of two users as is windows 98 different from an apple macintosh.
the next step is to encourage practices that lean toward interoperability.
on 64-bit systems, linux supports more memory than most first-world governments can afford to buy.
this enables mostly flawless running of windows under linux if you really  have to and at a large performance penalty.
you can browse the installation documentation on the cd (if it has any) using internet explorer.
on page, and the web sites entry in the index.
users have close and direct contact with  developers, ensuring that bugs are fixed quickly and that user needs are met.
tries to be better than other proprietary software without meeting real  technical and practical needs.
there have been a great many misguided attempts to show that linux performs better or worse than other platforms.
it typically runs applications much faster than does normal dos because of linux's faster file system access and system calls.
open industry and academic standards are adhered to, to make software consistent and compatible.
people can get far better support from the internet community than they would  from their commercial software vendors.
in general, well-established brand names will always work, but will tend to  cost more.
linux also performs well when loaded by many services simultaneously.
commercial distributions may contain proprietary software that you may not be allowed to install multiple times.
linux also performs well when loaded by many  services simultaneously.
for many people, the concept of a  computer is synonymous with thesave
also try see what happens when you do a net search with ``linux  installation guide.''
this free kernel would  amass more followers and would quickly become the standard, with or without  linus.
it is really academia that  develops the theoretical models for computer science--industry only implements  these.
gnu also means a healthy disrespect for the concept of a deadline and a  release schedule.
everyone is on their own mission.
usually these studies are done with one or other competing  system having better expertise at its disposal and are, hence, grossly biased.
a unix system is the standard choice when a hardware vendor comes out with a new computer platform because unix is most amenable to being ported.
to avoid this problem, numerous virus detection programs  for linux are now becoming available.
however, most of the time peer  review results in a more reliable product.
with commercial  systems, users are too stingy to share their knowledge because they feel that  they owe nothing for having spent money on software.
everyone is on their own  mission.
there are hence no prohibitive compatibility problems between linux  distributions.
the arguments comparing the freebsd kernel to the linux kernel center  around the differences between how various kernel functions are implemented.
by not upgrading that service, they leave open a window to opportunistic hackers.
a worm is a thwarting of security that  exploits the same security hole recursively through a network.
slackware: this was the first l inux distribution and is supposed to be the most  current (software is always the latest).
a gnu is a large beast and is the motif of the free software foundation (fsf).
you can find reviews on the internet.
it may do other damage.
companies will have to make careful decisions about  standardizing what people use, and creating customizations peculiar to their  needs.
as linux begins to dominate the embedded market, that number will soon surpass the number of all other operating systems combined.
in this way, linux isless secure because security holes can be discovered by arbitrary individuals.
this situation is not possible.
redhat is also supported quite well in industry.
and you must show them these terms so they know their rights.
it is also doesn't matter to the end user because the end user has selected a popular linux distribution packaged by someone who has already dealt with these issues.
(see previous question.)
yes, linux will occupy two or more partitions, while windows will sit in one of the primary partitions.
it is the nonprohibition to redistribute and modify gnu software that is meant by the word free.
most vendors try to comply with this standard, and hence l inux systems will look very similar from one distribution to another.
linux supports as much swap space as you like.
it sometimes refers to any proprietary  vendor releasing source code to their package, even though that source code is  not free in the sense of users being able to modify it and redistribute it.
the following is based on my personal experience during the migration of  three large companies to linux.
if you are using scrap hardware, an adequate machine for the x window system should not have less than an intel 486 100 mhz processor and 8  megabytes of ram.
if you buy one of these, you might have to wait many months before  support becomes available (if ever).
linux was largely developed by the free software foundation .
people can get far better support from the internet community than they would from their commercial software vendors.
where does a person get linux support?
because users constantly  interact and discuss linux issues, 99% of the problems a user is likely to have  would have already been documented or covered in mailing list archives, often  obviating the need to ask anyone at all.
that is doubly if you are also paying for an operating system.
linux is also  considered far easier to maintain than any commercial unix system because of  its widespread use and hence easy access to linux expertise.
note that word and excel documents can be read by various linux office
because of the legal terms of the gpl, for linux to be distributed under a different copyright would require the consent of all 200+ persons that have ever contributed to the linux source code.
package files are usually provided, but not as  often as .rpm.
these two issues are discussed in the next  question.
on the other hand, your windows or os/2 server, for example, has to be licensed.