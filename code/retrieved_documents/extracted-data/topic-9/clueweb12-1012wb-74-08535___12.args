frankly, the ubuntu text based installer is visually better too, in that it gives me an idea of what's going on.
several years ago, i acquired several clients that absolutely needed work done on the windows platform, so i had to bite the bullet and dive in.
another alternative is to install just vim for windows, which is just your regular vim (with no windows flavor) at it's latest version (windows cream usually lags a bit behind the latest vim version).
adding the following magic to grub: title windows xp map (hd0) (hd1) map (hd1) (hd0) root (hd1,0) makeactive chainloader +1 which makes things work ok.
to find out which classid goes to what add-on in ie, you have to look in:hkcr/clsid other other helpful programs that don't really fit in any category: explore2fs explore2fs is a file-manager that lets you browse ext2 and ext3 filesystems from within windows.
if you find explorer.exe to be a ui disaster, or just plain inconvenient, you may want to try a replacement shell such as litestep,darkstep, or some other.
since i didn't opt for this route, i don't have any instructions, but i'm sure that plenty of people have accomplished this without problems.
in addition windowblindshttp://www.windowblinds.net/ (although not linux like at all) can do similar things with the windows shell to make it much more useful.
the downside is that latency can be a bit higher, meaning it's not a good way to watch movies, for instance.
i found a little utilityautoruns (freeware but not free software) very useful to discover register keys added by malware, making it easier to manually remove them.
if you're a programmer like i am, you spend all your time working through your tools - editors, compilers, scripts, and things of that ilk.
first off, we start with a guide dedicated to windows security: secure your windows xp/2000 system.
if you don't have a spare computer, you could even use a service likeflexiscale on a pay-as-you-go basis, if you don't need windows that often.
this will give you vim plus a bunch of plugins.
the collection also includes some additional utilities for clipboard access.
i don't have much information beyond the idea of using vmware on windows to host linux.
this is a production quality shell, and there is a native windows port.
it can read capture files from many other analysis tools, making it a one-stop-tool for commercial network helpdesks.
i don't have much information beyond the idea of using vmware on windows to host linux.
focus follows mouse and x11 cut'n'paste i am used to having the focus follow the mouse, instead of clicking hither and yon to activate different windows.
this is a production quality shell, and there is a native windows port.
it is configurable on a per-application per-key basis so if one key makes problems in that application you can disable it and if the whole program doesn't work right with a specific app you can still use it for all the others you are running.
qemu this is an alternative to vmware and is getting to be quite advanced if you add the 'accelerator' download to it it's very fast.
most of the major scripting languages (ruby, tcl, python, perl, and so on) work pretty well on windows, so using one of those is often a good idea.
tab completion is enabled by default in windows xp but if you are running an older release you can enable it as explained in thisarticle.
x in cygwin, if you've installed the x portion of the system, you can simply runstartx and get x programs like xterm (which is much nicer than the clunky windows terminal screens).
by default, it will do this for tcp packets based on state.
another alternative is to install just vim for windows, which is just your regular vim (with no windows flavor) at it's latest version (windows cream usually lags a bit behind the latest vim version).
the downside is that latency can be a bit higher, meaning it's not a good way to watch movies, for instance.
this includes tons of useful ports of unix software to windows including bash (no cmd.exe for me, thanks!), ssh, grep, ps, and all your favorites.
this page discusses tools and tips to make life a little bit easier and more productive.
given that i already had linux installed, and wanted to put windows on the slave hd, i managed to get things working by unplugging the linux hd.
the following locations are favorites of malware and viruses - after adding themselves here, they are automatically run.
since it also runs on linux you may have heard of it.
hklm/software/microsoft/windows/currentversion/run hklm/software/microsoft/windows/currentversion/runservices hklm/software/microsoft/windows/currentversion/explorer/browser helper objects the browser helper objects are add-ons to internet explorer.
in cygwin, if you've installed the x portion of the system, you can simply run startx and get x programs like xterm (which is much nicer than the clunky windows terminal screens).
it is meant as a guide to windows for linux users who are struggling like i was to be productive with an unfamiliar system.
i found a little utilityautoruns (freeware but not free software) very useful to discover register keys added by malware, making it easier to manually remove them.
if you don't have a spare computer, you could even use a service likeflexiscale on a pay-as-you-go basis, if you don't need windows that often.
to find out which classid goes to what add-on in ie, you have to look in: hkcr/clsid other helpful programs that don't really fit in any category: explore2fs is a file-manager that lets you browse ext2 and ext3 filesystems from within windows.
by default, it will do this for tcp packets based on state.
the following locations are favorites of malware and viruses - after adding themselves here, they are automatically run.
be forewarned that some shell replacements (just like some x11 wms) are not very mature.
of course, it also takes something like a gig of memory to get started, so be forewarned... the perl shell (psh) combines aspects of bash and other shells with the power of perl scripting.
under linux, i can see the windows partion as /dev/hdb1/ vmware this is probably the best approach, because you can very quickly swap in and out of windows.
it provides also command line file transfer clients and ssh-agent.
perl shell the perl shell (psh) combines aspects of bash and other shells with the power of perl scripting.
those of you who prefer hitting the esc key all the time instead of ctrl-alt-meta-shit can downloadcream and install.
in which we discuss some of the first things a linux programmer might run into when attempting to code on windows, as well as cross-platform tools and techniques that will let you write code that basically works on more than one system, modulo the bit of tweaking that's always necessary.
i found this program to be quite helpful: "true x-mouse gizmo": http://fy.chalmers.se/~appro/nt/txmouse/ virtual desktop manager i like having multiple desktops.
this page discusses tools and tips to make life a little bit easier and more productive.
if you're writing network applications, or need to support them, a network analysis tool can be very helpful in quickly getting to the root of problems.
most advice on the web seems to indicate that you are better off installing windows first, on the primary/master hard drive, and then installing linux elsewhere, because the windows install is not terribly intelligent and doesn't give you the flexibility to move things around as you see fit.
since cream uses windows-esque keybindings by default, you can share it with cow-orkers who can't use a real editor, while you can either change the default keybindings (it's even a menu option) back to vi, or simply run the included vim without the cream plugins.
those of you who prefer hitting the esc key all the time instead of ctrl-alt-meta-shit can downloadcream and install.
as someone who has very specific ideas about what my window manager and environment should be like under linux, windows is a painful experience.
subversion runs natively and you can get plugins forwindows explorer, eclipse, and visual studio.
it can read capture files from many other analysis tools, making it a one-stop-tool for commercial network helpdesks.
introduction i have been fortunate to have used linux exclusively for the past 10 years or so, very rarely utilizing microsoft windows.
if you find explorer.exe to be a ui disaster, or just plain inconvenient, you may want to try a replacement shell such as litestep,darkstep, or some other.
programming in which we discuss some of the first things a linux programmer might run into when attempting to code on windows, as well as cross-platform tools and techniques that will let you write code that basically works on more than one system, modulo the bit of tweaking that's always necessary.
that way you don't have to worry about the memory and cpu requirements for having two os's running at the same time, but can still use both at once.
drawbacks: you need a lot of memory to make it work, and vmware isn't cheap.
gnuwin32 gnuwin32 provides win32 (ms windows 95 / 98 / me / nt / 2000 / xp) ports of tools with a gnu or similar open source license.
in that case, one finds funny hexademical folders in the registry 'directory'.
i normally use gnu emacs, but xemacs seems much faster to get working on windows in that it has a windows installer.
installing windows on the secondary hd.
if you're a programmer like i am, you spend all your time working through your tools - editors, compilers, scripts, and things of that ilk.
xkeymacs allows you to enable emacs keys in all windows applications.
several years ago, i acquired several clients that absolutely needed work done on the windows platform, so i had to bite the bullet and dive in.
under linux, i can see the windows partion as /dev/hdb1/ this is probably the best approach, because you can very quickly swap in and out of windows.
this might be a suitable alternative in some cases - if you're stuck with windows and want to use linux from time to time, for instance.
and continue with some other suggestions, contributed by the wiki's users: one annoying problem is the huge number of malware (dialers, trojan horses, bots ...) easily installed in virtue of os bugs.
make something very cross-platform, and users are still likely to make applications that don't look quite right anywhere.
this can be a good way to obviate the brain-dead window manager/desktop environment that is provided with windows.
i also vastly prefer the x11 style mouse left button/ middle button combination for copy and paste operations.
in that case, one finds funny hexademical folders in the registry 'directory'.
also of note is the 'follow tcp stream' option to reconstruct a session starting with only a single packet from the stream.
frankly, the ubuntu text based installer is visually better too, in that it gives me an idea of what's going on.
i created the original wiki in order to share some of the things i learned.
we've all heard the horror stories about windows security.
and continue with some other suggestions, contributed by the wiki's users: one annoying problem is the huge number of malware (dialers, trojan horses, bots ...) easily installed in virtue of os bugs.
network analyzer if you're writing network applications, or need to support them, a network analysis tool can be very helpful in quickly getting to the root of problems.
be forewarned that some shell replacements (just like some x11 wms) are not very mature.
as someone who has very specific ideas about what my window manager and environment should be like under linux, windows is a painful experience.
it provides also command line file transfer clients and ssh-agent.
since it also runs on linux you may have heard of it.
since i didn't opt for this route, i don't have any instructions, but i'm sure that plenty of people have accomplished this without problems.
drawbacks: you need a lot of memory to make it work, and vmware isn't cheap.
ethereal does seem to have more than its fair share of security vulnerabilities, so take care to keep it up-to-date.
i also vastly prefer the x11 style mouse left button/ middle button combination for copy and paste operations.
of course, it also takes something like a gig of memory to get started, so be forewarned...
it is configurable on a per-application per-key basis so if one key makes problems in that application you can disable it and if the whole program doesn't work right with a specific app you can still use it for all the others you are running.
i found this program to be quite helpful: "true x-mouse gizmo": http://fy.chalmers.se/~appro/nt/txmouse/ i like having multiple desktops.
on the other hand, that's probably better than being tied to one platform with no possibility of porting.
most of the major scripting languages (ruby, tcl, python, perl, and so on) work pretty well on windows, so using one of those is often a good idea.
it is meant as a guide to windows for linux users who are struggling like i was to be productive with an unfamiliar system.
also of note is the 'follow tcp stream' option to reconstruct a session starting with only a single packet from the stream.
i created the original wiki in order to share some of the things i learned.
since cream uses windows-esque keybindings by default, you can share it with cow-orkers who can't use a real editor, while you can either change the default keybindings (it's even a menu option) back to vi, or simply run the included vim without the cream plugins.
security we've all heard the horror stories about windows security.
a good place to start isshellfront, ordmoz.
litestep is mature, and has an installer.
it has good native support for java, c and c++ development and cvs, and with free plugins you also get python, php, and subversion, so in reality it does a lot more than java these days.
a good place to start isshellfront, ordmoz.
i found the windows xp installation process to be slower and far less flexible than a recent ubuntu install.
useful if you use windows command prompt and want a minimal and non-invasive way to have find, grep, sed, tail available or just to stop typing "ls" and get "command not found" error messages.
subversion runs natively and you can get plugins forwindows explorer, eclipse, and visual studio.
i normally use gnu emacs, but xemacs seems much faster to get working on windows in that it has a windows installer.
most advice on the web seems to indicate that you are better off installing windows first, on the primary/master hard drive, and then installing linux elsewhere, because the windows install is not terribly intelligent and doesn't give you the flexibility to move things around as you see fit.
on the other hand, that's probably better than being tied to one platform with no possibility of porting.
microsoft themselves provide a virtual desktop manager here: http://www.microsoft.com/windowsxp/downloads/powertoys/xppowertoys.mspx although i would like it even more if i could use alt + arrow keys to navigate between the different desktops, like i do in linux.
the collection also includes some additional utilities for clipboard access.
installation i found the windows xp installation process to be slower and far less flexible than a recent ubuntu install.
ethereal also (optionally) performs colour highlighting of packets.
emacs keys for input fields,... in all windows programs xkeymacs allows you to enable emacs keys in all windows applications.
the browser helper objects are add-ons to internet explorer.
these are all native binaries, with no dependence upon any of the cygwin dll's, so they are a nice alternative.
this will give you vim plus a bunch of plugins.
ethereal does seem to have more than its fair share of security vulnerabilities, so take care to keep it up-to-date.
microsoft themselves provide a virtual desktop manager here: http://www.microsoft.com/windowsxp/downloads/powertoys/xppowertoys.mspx although i would like it even more if i could use alt + arrow keys to navigate between the different desktops, like i do in linux.
this can be a good way to obviate the brain-dead window manager/desktop environment that is provided with windows.
this includes tons of useful ports of unix software to windows including bash (no cmd.exe for me, thanks!), ssh, grep, ps, and all your favorites.
i am used to having the focus follow the mouse, instead of clicking hither and yon to activate different windows.
that way you don't have to worry about the memory and cpu requirements for having two os's running at the same time, but can still use both at once.
given that i already had linux installed, and wanted to put windows on the slave hd, i managed to get things working by title windows xp map (hd0) (hd1) map (hd1) (hd0) root (hd1,0) makeactive chainloader +1 which makes things work ok.
these are all native binaries, with no dependence upon any of the cygwin dll's, so they are a nice alternative.
linux on windows this might be a suitable alternative in some cases - if you're stuck with windows and want to use linux from time to time, for instance.
it has good native support for java, c and c++ development and cvs, and with free plugins you also get python, php, and subversion, so in reality it does a lot more than java these days.
make something very cross-platform, and users are still likely to make applications that don't look quite right anywhere.
this is an alternative to vmware and is getting to be quite advanced if you add the 'accelerator' download to it it's very fast.
first off, we start with a guide dedicated to windows security: secure your windows xp/2000 system.
in addition windowblindshttp://www.windowblinds.net/ (although not linux like at all) can do similar things with the windows shell to make it much more useful.