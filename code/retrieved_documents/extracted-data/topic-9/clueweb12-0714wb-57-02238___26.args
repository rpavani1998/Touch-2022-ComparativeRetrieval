cold fusion supports providing us with unlimited power from a glass of water, it prints money, it gives the user eternal life, it allows the user to travel faster than the speed of life and -- when activated -- attractive women jump out of the core reactor demanding money shot after money shot.
codenamed 'protogon,' refs will first appear as the storage system for windows server and later be offered to windows clients.
now, if you'd said that it finally supported winfs-style file tagging and searching, then you'd have ticked lots of boxes for all manner of users.
macosforge had a working driver and filesystem version for zfs on snow leopard.
no, creator and type metadata take precedent over file extension.
share twitter facebook i've heard anecdotal evidence (so take with a grain of salt) that doing stuff on refs is much faster.
i didn't realize it was the greatest goddamn filesystem i could imagine, why didn't you just say "imagine what your dream filesystem will be able to do, this is it."
share twitter facebook i can't say that i've ever used any of the ntfs features they're planning to drop.
one even said "use silverlight instead of dreamweaver for making a website".
unfortunately, the server would still not boot into the os.
refs supports named streams, object ids, short names, compression, file level encryption (efs), user data transactions, sparse, hard-links, extended attributes and quotas
also looking at the dropped support for short names, i think quite a few server batch files will be broken.
they had zfs completely implemented on mac os x 10.6, and had to abort due to licensing.
they used to use creator codes, but those have been removed and now it relies entirely on file extension.
compare what happens if a big file operation (say, copying a large direct after my initial tests, i must say that refs is incredible advangement.
how many are still serving up .htm files instead of .html files vs year.
any server 2003 disk would throw a bsod the moment it attempted to mount the boot "c" volume.
nickname: password:public terminal 100 of 459 comments loaded twitter facebooksoftware technology windows nickname: password:public terminal the fine print: the following comments are owned by whoever posted them.
i'm fairly certain ntfs still doesn't support user metadata, either, and i believe zfs does (most modern fs's do), so i doubt refs will (what i mean by this is i can tag a piece of data as, say "photos" and then when i search for photos, those are found first - this is a feature like what was planned for winfs's and what apple's spotlight does).parent share twitter
i achieve a rebuild speed of 80+mb per second, a scrub speed of 250+mb/sec.
if i were paid by ms, i probably wouldn't have moved a bunch of windows servers over to linux (network filesystems + windows =
parent share twitter facebook great.
the third machine (second laptop) has "c:\h" (which also contains "c:\h\g\e").
multiple 8 disk raidz2 devices connected via lsi 9200 card.
behind the scenes the drive letters don't exist.
symbolic links to directories are fine though, and can be created by ordinary users (with the right tool; windows doesn't come with anything like 'ln' by default).
if you're married to "hans resilient", you'll want to start running now.
not only that, but no filesystem, journalling or not, should cause a kernel crash if it is corrupted.
the first upgrade, i copied all the files to "c:\e" (old machine was an emachine).
i have a friend (way more intelligent than i am) that told me something like "python is the best language ever", but i couldn't understand how he liked it.
he was in too much hurry to get that first post and hadn't much chance to get pro-ms today.
explorer for instance can't create them, and indicate that something is a link, and can't correctly total up disk usage for a tree if you have used them in that tree.
for whatever reason, the server would not boot after a power failure.
with linux, on the other hand, i've had to deal with ext2, resierfs, ext3, ext4, and those are only the popular ones!
the "resilience" is from copy on write (cow), which is used in volume shadow copy and microsoft sql server.
file level encryption is useful for volumes where bitlocker can't be used.
to make them work, you have to set some other policy that looks like it's imposing a restriction upon local admins, but actually has the opp there's a blog post [msdn.com] linked from the article.
that'll be to create hard links to directories, which is a bad idea everywhere.
yeah, well, when i go to work on trashy windows 8 computers and i can't read the filesystem with my tools, people are simply going to lose their data.
also, at this point, ntfs support on other oses is pretty good.
an old ups battery will do that.
share twitter facebook compressed folders + truecrypt + robocopy also makes a wonderful hassle-free backup system.
the only time i've bothered pointing out that the bonch [slashdot.org] account andoverly critical guy [slashdot.org] accounts are sockpuppet accounts wasin this comment [slashdot.org], after i read this comment [slashdot.org] blowing your cover.
see this post [slashdot.org] and a previous post i've made here [slashdot.org] for evidence that these user accounts are used to push the same script, sometimes even copy/paste versions of it.
a modern journalling filesystem should not experience any corruption after a crash, because journal recovery is supposed to keep data structures consistent.
and of course will be an open standard(sarcasm alert)parent share twitter facebook that thought crossed my mind, there are legitimate reasons for ditching ntfs, but i can't help but wonder if this has anything to do with win 8 being the first release in a long time where they weren't under doj supervision.
this is the same reason the ipod worked - the device itself was nothing special, not even the interface - but itunes meant you had an easy way of getting stuff on it ...
as it is, it's a "slightly better filesystem than before" and hardly newsworthy (out of all your "features", i only spot one that you can't already do with windows alone and that would ever be exposed to someone not using bit-level access to the drive - file level encryption).parent
it's also useful for "rolling backups"; i administer family machines, and one has been upgraded from a desktop, to a laptop, to another laptop.
that way a third paty fs can get used for portable media
this is probably to make it harder for non-windows folks again since they can finally read/write to ntfs (stable since late 2.6.2x series for linux; don't know about the others).
you can thank your personal attacks for this one.
when it comes down to it, ntfs is a pretty good file system.
i was able to mount the volume through a command recovery console.
supposedly they also support pools across multiple devices of different sizes that can be reallocated dynamically.
also, i think that under the default setup you have to be admin to create links.
but no, conspiracy theories are much more fun.
keep in mind this initial release is for servers only, and not for boot volumes, so it'll be a while (half a decade or more) before it trickles down into most desktops/laptops.
[slashdot.org] and sharklazer [slashdot.org] accounts are also controlled by the same people.
now we can count on some guy named 'hans resilient" to be tried and found guilty of murder.
under heavy i/o, journalling can guarantee filesystem data integrity (modulo coding bugs).
the big change in osx is that the api and developer tools promote file extensions over metadata.
the raid cache was not dirty on the card, and the raid volume passed a manual parity consistency check.
since both cow and zfs's copy work a lot like raid0 (as far as i can tell), i'd expect them to be similar in this respect, however zfs also does checksum tests and ntfs doesn't
a "chkdsk /r" command was able to find and repair all errors.
his three other first-post-same-timestamp-as-article-but-no-subscription-account today succeed in looking down on google, but don't have much to say about ms, except for "ie9 is now fully standards compliant and google breaks the web [slashdot.org]".
i buy an 128gb ssd to speed things up, i have 200gb worth of steam games.
a volume isn't boot because it's c:\, it's assigned c:\ because it's boot.
parent share twitter facebook some of those features are actually useful: compression comes into handy for dealing with directories full of log files.
ntfs is overly complex and unpredictable as a disk format 3) ntfs is outdated and doesn't support modern features point 1 is evidenced by how basic tools (explorer, file dialogs, etc.) don't support many of the features.
apple are good at complete systems, they are not as good at components that work nicely with others .
journalling most certainly does not rely on luck and timing!
i stick to programming in the application space mostly.
i'm hoping refs is up to zfs with needed features, such as deduplication, encryption, an analog of raid-z, the filesystem working with the lvm layer some of those features are actually useful
the bug only surfaces when you're part of an enterprise active directory network that has group policies & domain admins, and it only crops up with specific combinations of group policy settings that look innocent in and of themselves, but have disabling the creation of symlinks by local admin members (but nobody else) as an unintended side effect.
it wouldn't be too bad except that ftp is incredibly difficult to reliably tunnel due to it opening connections in both directions on random ports.
ext4 being multiple times faster then doing the same compile on an ntfs.
at work, i use it to store spatial data / 3d video using zfs on linux.
back when ibm and microsoft were still bffs and *years* before they would have any thoughts about "compatibility".
i have some time to spare about now which i will waste replying to bonch/overly critical guy posts with messages pointing out that they are sockpuppet accounts.
so even if the drive doesn't lie and your journal works, the actual file data -- you know, the stuff you actually care about -- may well be trashed.
but this goes to show how remarkably resilient the ntfs system is.
parent share twitter facebook i built 3 windows 7 computers over the winter break.
if you look in to things you find that the feature list for btrfs reads an awful like a feature set of current ntfs.
maybe he means something like with secureboot, he will never be able to run linux again, so not having a filesystem driver won't matter, or something like that, so he's not switching?
microsoft has done one thing well, and that is to lower the expectations of their users so far, that what should have been a few second journal recovery turned into a big outage and manual recovery of a massively corrupted filesystem, and that gains them "absolute respect".
there's "fsutil hardlink" command on earlier systems, but to create directory junctions you had to install resource kit's linkd or russinovich's junction.
let's see: 32k file name and path limits (instad of 255), on-line recovery from corruption (no more "check disk" or offline recovery-rebuild), faster performance, built in recovery of data on failed disks (via storage spaces), hot-adding-more-storage to volumes, better control of allocation and localization on the drive, attribute checksums (and auto detection and recovery from "bitrot")....
=) but more to the point, i didn't see much about what might be new with this file system, only what's old and being discarded.
parent share twitter facebook then again, no one does that, bonch.
parent share twitter facebook ntfs supports softlinks, (junction points) its just none of the user land stuff that ships on the windows platform knows how to deal with it.
a chkdsk revealed massive amounts of corruption.
microsoft announces refs, a new filesystem for windows 8 459 posted bytimothy on tuesday january 17, @10:23am from the comes-with-striped-shirt dept.
parent share twitter facebook it needs some way to securely mount a remote filesystem.
bonch writes "microsoft has shared details about itsnew filesystem called refs, which stands for resilient file system.
microsoft announces new filesystem for windows 8 itunes match expands to latin america, netherlands, baltics this discussion has been archived.
i work for a wniversity, and they pay my salary.
you have to use command line tools for things like links.
basically, the server must have been busy with installing updates or something when the power died.
the reason for that should be pretty obvious - ntfs was supposed to replace hpfs in what was then still called os/2 nt.
parent share twitter facebook windows also allows you to change the open with association (and has for many years) but it's stored in the registry as a global configuration for the file type.
no new comments can be posted.
none of that is to say that ntfs couldn't stand improvement, and indeed it is being improved, but i've yet to see the amazing widely used file system that is so much better than it.
(time for a change of life) i have specialized boot disks that don't exactly use a windows 8 kernel.
seems like a really convenient way of making it inconvenient to interoperate or multiboot.
but more to the point, i didn't see much about what might be new with this file system, only what's old and being discarded.
it gets better: tfa: some ntfs features for which microsoft plans to drop support with refs, specificallynamed streams, object ids, short names, compression, file level encryption (efs), user data transactions, sparse, hard-links, extended attributes, and quotas, verma blogged.
after my initial tests, i must say that refs is incredible advangement.
since they don't know how to bake a tasty cake, they decide to put every tasty ingredient they know into the mix.
even naming it e.g. "c:\x" (or "d:\", putting it on a separate drive), the paths and filesstill exceed max_path (which is260, [microsoft.com] not 255).
that laptop died, we used a restoration company that started with a "g" to get the data back (now we backup via whs), and i saved that in "c:\g" (so there's a "c:\g\e" with the desktop's files).
without javascript enabled, you might want toturn on classic discussion system in your preferences instead.
we are not responsible for them in any way.
iphone - all the parts were available, they had all been integrated into devices before, apple gets the credit because it was the first one that a) worked b) was easy to use c) had an app store with useful apps in it on the day of launch ...
it is also able to cloud data across multiple volumes on different machines from what i read.
i don't remember if i can do sparse with afs because i don't care about sparse.
refs supports named streams, object ids, short names, compression, file level encryption (efs), user data transactions, sparse, hard-links, extended attributes and quotas.
when i have to rebuild, it does so at the write speed of the new disk (100+mb/sec).
there's all kinds of promising stuff, like data corruption resilience and dropped/extended limits.
as for "being paid", i don't know that many people are paying to have humorous articles posted to slashdot.
as ugly as ntfs is, the one thing i've liked about it is that it's the only fs used by windows and windows servers for a dozen years.
it wasn't the raid drivers, but actual ntfs corruption causing the kernel panic.
parent share twitter facebook note the collaboration between this, and numerous other "contributors" between extremely verbose first posts submitted within the same minute it's called "being a subscriber".
parent share twitter facebook i think you got it right.
the posts are too incompetent.
share twitter facebook end users: we still live in a world of 8.3 filenames.
he's either overpaid as ms shill, or underpaid as dark pr style "obviously dumb ms shill" troll.
so then naturally include flour, milk, butter, eggs, whipped cream, bones, mice, sausages, candies, chocolate, pork cracklings, sauce...and so on, except for bread, which neither cats nor dogs seem to like.
why: no max path length restriction (tfa says there still be one for refs) variable block sizes and sparse files allocate on flush [wikipedia.org] block journaling (aka journaling file system) as opposed to metadata only journaling (ntfs and probably refs) which is less reliable logical volume management [wikipedia.org] and that is just naming a few off the top of my head with some links to what they mean if it seemed like it may not be obvious (the others are fairly commonly talked about imo - if you don't know them, they should be easy to search for)
not only is this good for windows system, but overall network architecture.
mind you, some basic feature cleanup never hurt anyone.
a few weeks ago, i pulled "hail mary" with regards to saving an sbs 2003 server.
so, this feature will be useful to our shop.
he's really agile with the keyboard, this guy, he does it fourth time already today.
try this, go to the finder and select "get info" on a data file.
that's a fat32 patent though, and i'm wondering (somewhat seriously) if they don't have anything worthwhile for enforcing on ntfs so that's part of why they're looking for something new.
share twitter facebook sounds like they're due for a refresh so they can get some new patents on their filesystem to make sure all the device makers need to continue to pay them money.
he listed all of the features that they actually removed from ntfs and said that they still support them, either he screwed up or he's not a microsoft shill.
state-of-the-art, top-dog, storage-gods: nothing very special or new at all.
apart from maybe malware writers who'll be able to put an entire virus in the filename.
nope - that was a ground-up write, but for a new project that didn't really align with existing software.
for a headsup, the bonch [slashdot.org] account and overly critical guy [slashdot.org] accounts are sockpuppets operated by the same organization.
the real world disagrees with your statement: we have tfs projects with long directory and file names, such that we cannot map the entire tfs source in a single folder.
i must say that cold fusion is incredible dvangement.
the package is still kicking around out there if you go looking, but i doubt anyone is maintaining it anymore.
in fact, as much as windows drives me up a wall, i am a really big fan of microsoft security essentials.
from the article: officially named refs — for resilient file system — the new file system will be made available via a staged “evolution,” according to a january 16 post on the “building windows 8 blog.
on a core 2 duo / 2.5ghz using an lsi 1068 based card, i achieve a rebuild speed of 80+mb per second, a scrub speed of 150+mb/sec.
20 years from now my grandkids are going to have to answer on jeopardy why computer filenames are still in a 8.3 filename format.
attempting to access the recovery console or other f8 invoked options failed.
sparse files are extremely useful.
the problem is i never use any of that extra stuff because i have no use for it.
mklink can create symlinks (which were introduced with nt6.0's update to ntfs)/hardlink/dir junctions and is available out of the box since vista/server 2008.
much more interesting read than the linked zdnet article.
apple brought steve back for the win.
assuming that everything microsoft is terrible conversely is trolling.
if you use junk cards, you get junk performance.
in that regard, it is more like zfs and btrfs, and on par with the best filesystems out there.
no we will live in 8.3 file names as long as fat is the defacto standard for all portable drives.
yeah, he's also very, very fast to be able a) read the article, b) concoct a funny answer, c) post it the same minute the article was published.
however, on the day before snow leopard shipped, it was yanked off the download repository, because apple couldn't come to licensing terms with (then) sun.
every goddamned version of windows is getting worse for recovery and repair options.
no, but if you want to use long filenames on say, your android phone, and being able to connect that to a windows machine ms gets a licence fee.
we have a cautionary fairy tale here about the cat and the dog baking a cake.
especially when you troubleshoot a server with a subfolder containing 12gb of log files, and have no direction or policy about what to do with those old log files, you could safely enable compression on the folder and they magically take up less space.
all the file utilities for both mac and pc and how you handle these different systems including forward/backward compatibility, parallels, vmware, backup software, hard drives and tape devices will all go through teeth nashing debugs as we try to get everything to work with a new file system.
i am almost embarrassed to say how many times i have had to "clean install" vista and windows 7 because i couldn't f techguy's a troll who's gotten the most first-posts in the last week and every one has either promoted an ms product or bashed a google one.
i use zfs on linux at home with an 8 disk raidz2 array for network storage.
just because someone says a particular product or technology is good doesn't make them a troll.
it did end up replacing dos for the basis of windows, but that was just shoehorning one underlayer in place of another that itself was shoehorned into running things.
steve died, apple will soon.
it seems more like a "i'll make ms look bad by posting this crap" type thing.
the finder sets the creator metadata of the data file to ensure that it is always opened with the selected application.
i doubt ms even knows slashdot exists.
what started as a frustrating (because of my prejudice) experience quickly (+- one week) turned to amazement about how easy it was to code the things i wanted to do.
no data loss what-so-ever.
so, i have examples from both home and work where having longer-than-max_path file/path names would be useful.
that's very interesting given the article says there are some ntfs features for which microsoft plans to drop support with refs, specifically named streams, object ids, short names, compression, file level encryption (efs), user data transactions, sparse, hard-links, extended attributes, and quotas, verma blogged.
i do wish windows had a sane soft-link system like *nix does; i've yet to run into an application that automatically dereferences a .lnk when opening it.
since you don't even know that we can all just assume you've not ever been one and are just a leech.
other times i've saved backups with more descriptive names, like "backup of the dell inspiron 5150, 2011-11-11", and sometimes those backups fit inside each other like expressed above.
if you have a relatively small array and it still takes 45 days to rebuild then you have a hardware issue, or you are using an siig card, which has horrible performance under all the unix/linux variants i have used.
i would be a happy person if windows added native support for sftp.
at home i do the openafs thing for linux, mac, and windoze and everything is in afs, so i don't really care what windows uses natively, its just kind of a bootloader to get to my real files over afs.
it kept throwing a bsod or hung at finding the hal.dll file.
with symlinks: i copy rarely played games to my regular hard drive, symlink to them from the steam directory (on the ssd).
refs doesn't support compression.
mind you, if you want me to use a filesystem that doesn't support transactions, it better have some other damn good perk.
