of course, if you've got expertise with windows and don't know (or want to know) how to do things the unix way, then you might be better off sticking with windows.
that being said, linux is more capable of being secured - it's configuration is less opaque and kernel and user space are better segmented from each other.
of all these, the fundamental problem of windows security is that all users run as admin all of the time.
perl on unix, in the hands of a guru, is a very powerful tool indeed.
applications can be installed anywhere.
even my favorite server os, openbsd, can get hacked from time to time.
and although it's nice to be able to use perl on windows to drive com objects, i confess that i usually prototype my automation scripts in vbscript, and then port them to perl once they're working.
friday, november 07, 2003 actual counts of security issues and the severity of each issue is my empricial basis for stating that one system is more secure than another.
you can probably delete any file without touching the kernel, since admin normally owns the whole machine.
on the other hand in windows i would merely have had to click share connection and enable firewall
laszlo marai friday, november 07, 2003 oh, and one more thing - i don't want to convince you about using debian, or linux, where i was trying to get at is that you might have had a hard time with linux, because you didn't use the right tool/distribution and yopu shouldn't judge based on those experiences.
i abort the other installation and click on the other link which then starts the 11mb download, which it appears doesn't actually check if you have anything that needs patching until you have downloaded the same patch.
the bottom line is that a user with admin privs can access kernel memory.
perl is much more intelligent and moving from bash to perl has a learning curve of less than an hour.
my experience is that linux is more securable than windows.
that being said, linux is more capable of being secured - it's configuration is less opaque and kernel and user space are better segmented from each other.
now some drivers, video drivers, for example, have to access the kernel, so i suppose it would be theoretically possible for a virus to install a device driver which then accesses the kernel.
any system is only as secure as the admin.
>mandrake now (since 9.1 at least) has security options for installation.
"correct me if i'm wrong (for i'm no win32 expert), but would not a user mode application install have full access to the registry" the registry has security controls on it, just like the filesystem.
no system can be provabily secure.
first and foremost - kernels are hacked, not higher layers of software.
i'm not a linux guru, but using the documentation available, and the wonderful gentoo http://www.gentoo.org distribution, i can keep my system (on 24/7, on adsl) up and running and at least fairly secure.
you can, however, use linux user mode from within such a machine: http://www.gentoo.org/doc/en/uml.xml ) 2.
no system is secure when first installed.
at the same time, you have to acquire the needed applcations separately for windows, which means that probably you also have to look for the patches at different websites.
as a unix programmer who avoids python at all costs myself, i can sympathize.
the installation is also quite easy with debian - two commands issued on the command line.
laszlo marai friday, november 07, 2003 oh, and one more thing - i don't want to convince you about using debian, or linux, where i was trying to get at is that you might have had a hard time with linux, because you didn't use the right tool/distribution and yopu shouldn't judge based on those experiences.
if the software is backed by simple 90s stack (webservermajor languagedatabaseos) then i suppose going with you are competent with.
bill gates latest "we don't supply firewalls, for that you will need to buy a firewall software" remark is bad, it is bad because it shows the utter lack of understanding of the nature of a hack.
beyond that, security on either system is obviously only as good as your patching habits.
on the other hand in windows i would merely have had to click share connection and enable firewall and i'd have a moderately secure set up.
(*): let's don't forget, that when we refer to linux, we usually mean a distribution, which contains all the software you need to run a server (if you are luck enough - debian has more that 9000 software packages).
as far as i can tell using linux should be the best option for an internet server.
i *feel* that my linux setup is more secure than a standard windows setup, but the reverse would probably be true of an experienced windows user...
it's just very convenient to keep them all in one place.
philo philo friday, november 07, 2003 i've just been updating the laptop, as holiday time is coming up again.
security hotfixes are generally available within a week of the announcement of the vulnerability, and *obtaining* and installing a hotfix for windows is five mouse clicks (i just counted - did an update while typing).
i think the only os that can be called "inherently more secure" is openbsd, and it accomplishes that by sacrificing a lot of functionality, which diminishes the surface of attack.
if the shell isn't sufficient you can always use perl or python (or other languages) and generally the api integration is very good.
if i am a virus writer, and you are a user without admin privs, the worst i should be able to do is infect/delete the files which you have access to.
and the development of the linux kernel is not done for profit, nor driven by stockholder expectations.
alyosha` friday, november 07, 2003 topical (cnet): an unknown intruder attempted to insert a trojan horse program into the code of the next version of the linux kernel, stored at a publicly accessible database ... only developers who used that database were affected--and only during a 24-hour period, he added.
our findings based on my fundamental premise: mysql on mac os x server is more secure than sqlserver on windows 2000 server.
even if windows is slightly more secure or securable (on a technical level) than linux, the number of hackers writing exploits of windows security weaknesses makes me think i'd be more secure on linux.
i think shell is used with a kind of "less is more" attitude.
so, my claim here is more in the nature of an anti-claim: we cannot establish who's the "most secure" by using a has-no-security bugs criteria.
a random debian developer, esteban manchado velázquez friday, november 07, 2003 i would also suggest debian (or any other linux distribution with frequent security updates) if you wanted a (linux) system that is easy to keep update.
my post was to state that in my opinion, linux is more "securable" (that is: better able to be secured) then windows, not that it is more "secure" i base my opinion on my own professional experience of administering significant numbers of systems of both oses.
myron a. semack saturday, november 08, 2003 as someone who's used unix shells extensively, my perspective is that the most important thing about the shell is that it's 1.
however, beyond the initial installation, *no* upgrade (barring the use of new kernel features) should require re-installation or downtime.
also, windows is fully scriptable, just like unix.
bear in mind that we are talking about home and soho machines here; anything in a company will be on a domain and running in user mode.
in fact, you can totally automate the installation of security patches.
but there is insight into the process, there is peer-review, and you can study the code (as if i would) if you want to.
this was based on the security issues and problems we had with another application that was (and sadly is) completely tied to windows server/iis and sqlserver.)
in fact, they are probably more tied to ms than any other oem.
debian comes by default configured to install security updates, so if you tell a "stable" machine to "apt-get update && apt-get upgrade" on a nightly basis, it will get any new security updates and install them while you sleep.
stephen jones sunday, november 09, 2003 stephen, even though a device driver may not access the kernel, there is nothing to prevent a driver from accessing the kernel.
both are great and i've seen whole applications written in jscript, but i think you have little idea about how powerful unix shell commands are.
unfortunately most distros (i'm certain of rh 7 thru 8) deliver x with tcp port 6000 open.
admin experience is a significant factor in determining the appropriate platform to run the task at hand.
if you run as a user all your important files are going to be owned by that user, so a program could overwrite them anyway
we also see people talking about how much the ms patches have to fix, but this is merely because a) it can find everything that needs to be fixed, all at once, and b) many require reboots, and most people would probably not enjoy multiple reboots.
i'm not a linux guru, but using the documentation available, and the wonderful gentoo  http://www.gentoo.org  distribution, i can keep my system (on 24/7, on adsl) up and running and at least fairly secure.
the windows scripting host is a very powerful tool.
additionally, installing any software, not just user mode software becomes a priv'd task in windows.
anyone using debian security updates should read the dsas (debian security advisories) before upgrading, for at least two reasons: 1) you could find valuable information about the upgrade, as things to do before/after it.
i'd rather be on a different system (even if slightly less secure) where there isn't as much efforts being devoted to hacking my system.
makes one wonder a - if it has ever been done before (if so it hasn't been detected) b - if something similar has ever been done to windows (you'll never find out) friday, november 07, 2003 personally, i prefer linux, but i think that any admin worth their salt will tell you the same thing about security: you have to keep up with patches or your system will be compromised.
i mean a server which supports a decent web server (apache), a nice db (oracle, mysql etc.) , perl etc.
nat ersoz >> linux default installation is not* secure.
i have to wholeheartedly agree with those posting about security being in the hands of the admin.
coupled with the task scheduler (equivalent of cron), you have all the same automation tools available to a unix admin.
our findings based on my fundamental premise: mysql on mac os x server is more secure than sqlserver on windows 2000 server.
active directly has a very powerful approach to security, which is considerably more granular than the simple ugo setup that *nixes offer.
you can simply use runas, which works like sudo does under linux.
both are great and i've seen whole applications written in jscript, but i think you have little idea about how powerful unix shell commands are.
myron a. semack friday, november 07, 2003 nat, "the heart of unix security and win32 security exists in the fact that kernel space can only be accessed by root or administrator authorization.
you can use gpo's to manage the registry of client machines (inlcuding grabbing updates from a network).
--oliver oliver hunt wednesday, november 12, 2003 come on people, haven't we learned by now that the least "secure" os is the one with the latest hack or virus headline.
(up until last time i checked; don't know if they're doing or will do any opteron stuff.)
if the admin is comfortable with the steps to patch the os then it's easy to maintain.
yep, just like you philo, i install ms security patches while typing.
stephen jones saturday, november 08, 2003 portabella, unix programmers refuse to move to higher level languages because of stubbornness.
nobody will actually tell you why, but you will still get a million answers, and the most usable answer will probably be: don't ask!
reading security advisories makes you learn about your system.
willie abrams friday, november 07, 2003 port state service 22/tcp open ssh 139/tcp open netbios-ssn 6000/tcp open x11 fyi: a typical redhat 8.0 distro after a default install, with no hardening.
however, in unix, /etc/ is fully protected from access by non-root access (which is all users 99% of the time - it takes a deliberate move to make yourself root).
regular users can not arbitrarily write to random parts of the registry.
but every time i release perl code to production, it scares the hell out of me (because perl syntax is so abstruse that it's hard to know what remaining bugs may lurk).
once enabled, just being administrator is not sufficient to execute any program.
windows is a very, very complex platform to administer - the simple interface masks a great deal of complexity, and creates the illusion of ease of use.
additionally, installing any software, not just user mode software becomes a priv'd task in windows.
not so when you are admin, you can easily and unknowingly destory the entire system.
if it takes you n hours to figure out how to get perl to filter out malicious sql text out of dynamically created insert strings.
bill gates thinks security is not an os's responsibility; instead, users (who don't know the difference between a real error message and a web page designed to look like one) should set up and properly configure firewalls, as well as regularly install multi-mb patches over a dialup line.
and i'm not paying any windows taxes while doing so.
we also cannot establish it by using the severity of bugs.
realistically, once a week is about as much as anyone can keep up with.
if however, you're running as admin, i can install a simple device driver which allows me to map any physical page, read/write any device, and delete any file.
in fact, you can totally automate the installation of security patches.
while you still have to wait for the update to become available, it is usually shorter than the windows update becomes available.
i then get click a couple of times, and click on a button called install.
by default neither system is anymore or less secure, they each different approaches to security, which leads them open to different problems.
the caveat is that the system can be quite difficult to install initially, especially if you have esoteric hardware.
a few minutes later i check progress to see that the link has sent me to an error message.
the openhack iii was successfully protected by argus pitbull, even after hackers gaining root access.
debian's update system is automatic, free, reliable, fast, and (if you use the "stable" distribution) designed *specifically* for administrators who don't want to spend a lot of time messing around with running systems.
we delayed our fogbugz purchase for at least 6 months, because of the reliance of windows/iis as the host for fogbugz.
there is much more harm it can do in rewriting the registry or the file system or whatever.
if the shell isn't sufficient you can always use perl or python (or other languages) and generally the api integration is very good.
the problem with this approach is that it gets users comfortable with the idea of entering their administrator password whenever something asks for it.
the code needs to provide evidence of its source, either particular path, registry key, signature, etc. kunal tuesday, november 25, 2003 i don't know about the real security of windows vs linux.
there are tools like sms and sus for remote administration.
if the difference is only "that someone hasn't done that yet", then the claim of better security is on pretty shaky ground.
there is much more harm it can do in rewriting the registry or the file system or whatever.
bullet-proof it's *not* very high-level, but "glorified batch file" is manifestly wrong.
to the best of my knowledge you are dealing with a ring system.
yep, just like you philo, i install ms security patches while typing.
essentially, if you need a server and aren't going to limit yourself to ms-only products - do yourself a favour and have a look at the bsds and not only linux.
debian's update system is automatic, free, reliable, fast, and (if you use the "stable" distribution) designed *specifically* for administrators who don't want to spend a lot of time messing around with running systems.
i have to confess that i keep making a heavier investment because i haven't found anything that offers me as much capability or flexibility.
linux default installation is not* secure.
in fact, they are probably more tied to ms than any other oem.
many solutions to system problems don't lend themselves to logical deduction - they are single solution problems that are solved by following microsoft kb articles.
running in user mode, or using the compatibility template if absolutely necessary, would stop some viruses from installing, but as has been said, in a corporate network everybody is normally running as a user with limited rights.
even if windows is slightly more secure or securable (on a technical level) than linux, the number of hackers writing exploits of windows security weaknesses makes me think i'd be more secure on linux.
personally,  i think linux is an excellent server platform that will continue to eat unix's lunch and continue to threaten windows' dominance.
as an added bonus, i won't show up in the process list when a user hits ctrl-altdel for the taskman.
now some drivers, video drivers, for example, have to access the kernel, so i suppose it would be theoretically possible for a virus to install a device driver which then accesses the kernel.
i went to office updates.
and yes, i do realize that there are plenty of hackers trying to exploit linux, too.
i mean a server which supports a decent web server (apache), a nice db (oracle, mysql etc.) , perl etc.
not so when you are admin, you can easily and unknowingly destory the entire system.
http://www.eweek.com/article2/0,4149,741388,00.asp surprisingly microsoft was not compromised once, oracle and sun were hit.
if the administrator is on-the-ball, you're os is as secure as it can be... ...until the next hack or virus comes out, that is.
portabella friday, november 07, 2003 dell has no interest in taking sides in the os wars.
>mandrake now (since 9.1 at least) has security options for installation.
many solutions to system problems don't lend themselves to logical deduction - they are single solution problems that are solved by following microsoft kb articles.
you can simply use runas, which works like sudo does under linux.
myron a. semack saturday, november 08, 2003 as someone who's used unix shells extensively, my perspective is that the most important thing about the shell is that it's 1.
there are tools like sms and sus for remote administration.
we also use mysql replication and it works very well.
i'd like to address you to excellent book "building secure servers with linux" by michael d. bauer.
note: not all ports are open, only the ones which were opted for (mostly).
depends on which os the admin is familiar with, doesn't it?  if the admin is comfortable with the steps to patch the os then it's easy to maintain.
they're very faithful--they have rarely dealt with a non-ms os (partially because, unlike hp, compaq, and ibm, they don't have their own in-house os) and they have not jumped onto the linux bandwagon nearly as loudly as others.
can't be feaures--the linux site comes with mysql and the ms one doesn't have any database at all, not even access.
however, windows administrator is not the same as linux root.
web forums aren't really going to answer the question, there's the odd whackjob who equates linux and mozilla with the apocalypse (see most linux posts here, there's always someone).
we delayed our fogbugz purchase for at least 6 months, because of the reliance of windows/iis as the host for fogbugz.
(*): let's don't forget, that when we refer to linux, we usually mean a distribution, which contains all the software you need to run a server (if you are luck enough - debian has more that 9000 software packages).
unfortunately most distros (i'm certain of rh 7 thru 8) deliver x with tcp port 6000 open.
ms would never make the same mistake twice.
our experience is this: we have two server plaforms in our company that are similar to your situation; sqlserver on windows 2000 server and mysql on mac os x server.
a random debian developer, esteban manchado velázquez friday, november 07, 2003 i would also suggest debian (or any other linux distribution with frequent security updates) if you wanted a (linux) system that is easy to keep update.
" secue as in 100% secure is an unobtainable dream, but some default installs are more secure than others.
oh, and windows or more popular, and thus a more "profitable" target for any hackers/script kiddies out there.
brian friday, november 07, 2003 >we cannot establish who's the "most secure" by using a has-no-security bugs criteria.
nat ersoz sunday, november 09, 2003 joel, in regard to your comment about two clicks to securing the windows system: in many linux distributions (such as debian or mandrake), you can automatically install updates from the command line, (or even from a graphical utility).
i have been using the same installed image continuously for almost 5 years now, and i've twice duplicated the system by copying the drive onto another machine and tweaking a few system settings, then upgrading or installing new packages.
yes, windows can be maintained by remote gui desktops - but again, it goes one at a time.
the unix admin maintains cron jobs on his users' computers which poll for updates and install when necessary.
the os is secure as well.
vb sript and jscript were not written with sysadmins in mind.
using the system accounts, it's possible.
not in any kind of corporate environment, anyway.
certainly, bash is a stripped down language for automating common tasks, but that is what it was designed for.
this was based on the security issues and problems we had with another application that was (and sadly is) completely tied to windows server/iis and sqlserver.)
admin privs are compromised  when users run as admin as a matter of fact.
bourne shell lacks both structures and arrays.
and i'm not paying any windows taxes while doing so.
windows is a very, very complex platform to administer - the simple interface masks a great deal of complexity, and creates the illusion of ease of use.
and yes, i do realize that there are plenty of hackers trying to exploit linux, too.
coupled with the task scheduler (equivalent of cron), you have all the same automation tools available to a unix admin.
although there may be no known holes in xfree at the moment, x is too huge (and i consider myself rather knowledgeable about x's low level and internals) to be certain that leaving the tcp port open is a good idea.
the fact that it comes from a unix design heritage (as opposed to the desktop single-user model that windows has evolved from) leads to much better system administration tools and practices.
on a linux system, you shouldn't be logged in as root 24/7 because one typo can bring a system crashing to a halt.
a user-mode process under windows can't touch kernel memory, even if it is running as administrator.
" secue as in 100% secure is an unobtainable dream, but some default installs are more secure than others.
i think some of us here are too quick to make fun of wayne.
as for automatic update services, i'd have to seriously question a sysadmin who allowed automatic updates on their server.
that is the worst and most exploited of all windows security sins.
it's their computer, and they can do whatever they want.
note: not all ports are open, only the ones which were opted for (mostly).
the fundamental problem with windows security is that users are accustomed to running administrator privs 100% of the time.
if you want something more sophisticated, there are tools like altiris.
after half an hour i check to find that the button called install has taken me to a page which tells me i'm on the wrong ms site and has a link to another sql page.
on a corporate network, windows is hardly remotely adminstratable.
stephen jones sunday, november 09, 2003 stephen, even though a device driver may not access the kernel, there is nothing to prevent a driver from accessing the kernel.
i have been on (and led) project teams that built enterprise server applications in perl.
and although it's nice to be able to use perl on windows to drive com objects, i confess that i usually prototype my automation scripts in vbscript, and then port them to perl once they're working.
running in user mode, or using the compatibility template if absolutely necessary, would stop some viruses from installing, but as has been said, in a corporate network everybody is normally running as a user with limited rights.
system setting remain consistent, and can only be changed by root.
this is a tough call, using windows server in an intranet is pretty nice and fluent as long as you don't try the wacky stuff (workgroup + domains + iis + apache + ms directory + other file sharing techniques), installing linux requires knowledge but read point 3 and you'll see linux is your only option anyway... 3.
interestingly, the linux developers resist, tooth-and-nail, attempts to move to a higher-level language like python.
our experience is this: we have two server plaforms in our company that are similar to your situation; sqlserver on windows 2000 server and mysql on mac os x server.
i believe this is the only rationale that will convince you that system ____ is more secure than windows.
ssh is the only exposed port which should be allowed open when running outside a firewall.
using the system accounts, it's possible.
the netbios port was intentionally turned on (samba to allow for smb sharing),but should also be turned off when running in the open.
so no matter how malicous or poorly designed the program, if the os integrity is intact, then no user mode application can corrupt /etc/.
if you run as a user all your important files are going to be owned by that user, so a program could overwrite them anyway
a base installation of debian, for example, simple won't contain x or the numerous security-hole-prone services that are installed by default in windows and the "recommended" installations of some of the desktop distributions of linux.
the more secure of linux and windows would have to be linux, hands down - if you've chosen an appropriate distribution of linux, and haven't decided to install every single available software package.
before i discovered wsh, i though there was no real scripting solution for windows (without a third party).
but every time i release perl code to production, it scares the hell out of me (because perl syntax is so abstruse that it's hard to know what remaining bugs may lurk).
for that very reason i've chosen openbsd to power my server.
i use linux,  i use it on my two desktops and my router / webserver etc.  for me,  there's no question that it's the most secure option available.
if you buy windows, whatever version, you put your trust in a huge corporation, with internal conflicts and decisions taken for political reasons, or to please stockholders, instead of for technical reasons.
i suppose you might have used a source distribution of openssh, but one would have to wonder why if you don't apparently have the confidence (or possibly skills) to administer such things.
if you buy windows, whatever version, you put your trust in a huge corporation, with internal conflicts and decisions taken for political reasons, or to please stockholders, instead of for technical reasons.
and this because the usability of windows has not followed the same clean design as the kernel was given.
i abort the other installation and click on the other link which then starts the 11mb download, which it appears doesn't actually check if you have anything that needs patching until you have downloaded the same patch.
web forums aren't really going to answer the question, there's the odd whackjob who equates linux and mozilla with the apocalypse (see most linux posts here, there's always someone).
ms would never make the same mistake twice.
oh, and windows or more popular, and thus a more "profitable" target for any hackers/script kiddies out there.
security hotfixes are generally available within a week of the announcement of the vulnerability, and *obtaining* and installing a hotfix for windows is five mouse clicks (i just counted - did an update while typing).
those immediately after blaster, et al) with hoards of linux evangelists using it as an example of poor windows security, even though ms had a patch out before the incident...
essentially, if you need a server and aren't going to limit yourself to ms-only products - do yourself a favour and have a look at the bsds and not only linux.
if i am a virus writer, and you are a user without admin privs, the worst i should be able to do is infect/delete the files which you have access to.
ssh is the only exposed port which should be allowed open when running outside a firewall.
it's only a matter of time beofre someone makes an application that looks just like the "enter admin password" dialog, and then you'd have a whole new class of security breaches.
any system is only as secure as the admin.
a user-mode process under windows can't touch kernel memory, even if it is running as administrator.
security is an ever moving target, and no operating system is secure if the os hasn't been patched properly, or if passwords aren't protected properly.
the netbios port was intentionally turned on (samba to allow for smb sharing),but
they aren't interested in making a point about os superiority, they just want to make as much as they can from whatever product they sell.
i'd rather be on a different system (even if slightly less secure) where there isn't as much efforts being devoted to hacking my system.
the badger wednesday, december 10, 2003 it does not take four hours of messing around with source to patch an ssh vulnerability.
the more secure of linux and windows would have to be linux, hands down - if you've chosen an appropriate distribution of linux, and haven't decided to install every single available software package.
hackers devote more resources to hacing windows.
ok, default installation of redhat gives some basic firewall rules: close* all ports, open some* ports, open all* ports.
as for what users can access in their os, it again falls in the hands of the admin.
other services can be enabled, ftp server, http server, etc.
if you are maintaining more than one or two computers, this gets old very fast, especially since every patch needs to be researched and tested to make sure it doesn't break mission-critical software x.
that the install isa breeze and comes with almost everything i need and nothing more than that (no, not 1005 pointless image viewers, not 567 text editors, not 382 window managers, and not 47 implementations of ping) is a huge plus as far as i'm concerned.
so, linux (or other open source maintained distributions like openbsd) is the way to go, it has plenty of virtues (open source, good community, fast response, good track record, don't undermine the user).
security is an ever moving target, and no operating system is secure if the os hasn't been patched properly, or if passwords aren't protected properly.
so in my opinion, it really depends on where your competence rest.
while you still have to wait for the update to become available, it is usually shorter than the windows update becomes available.
admins can control this to very specific rights in just about any os i'm aware of.
personally, i think linux is an excellent server platform that will continue to eat unix's lunch and continue to threaten windows' dominance.
but most of the time the high level hacks, the ones which do actual damage are kernel level hacks (offcourse you can always argue that by not securing the kernel this becomes a user land problem but that would require all different apps to try and stop the same malicious source, which is stupid).
before i discovered wsh, i though there was no real scripting solution for windows (without a third party).
ok, default installation of redhat gives some basic firewall rules: close* all ports, open some* ports, open all* ports.
nat ersoz friday, november 07, 2003 to preface my comment, i should say that i don't really have much technical knowledge of security issues in linux and windows.
we could argue the neither setup is very secure (i'm not a network guru)...
wsh gives you an amazing amount of flexibility.
you can hardly fault sed for not allowing access to the networking stack.
as for automatic update services, i'd have to seriously question a sysadmin who allowed automatic updates on their server.
trevor b saturday, november 15, 2003 when comparing linux with windows as a secure server, you shouldn't use a desktop distribution of linux such as mandrake or redhat as the point of comparison on the linux side.
we also cannot establish it by using the severity of bugs.
once enabled, just being administrator is not sufficient to execute any program.
as an added bonus, i won't show up in the process list when a user hits ctrl-altdel for the taskman.
stephen jones sunday, november 09, 2003 > unix programmers refuse to move to higher level languages because of stubbornness.
"on a corporate network, windows is hardly remotely adminstratable.
the religious flame war about system security is kind of funny to watch though.
a user running as admin can install a device driver, and then access whatever they like through a user mode app which accesses the newly installed driver.
i've gotta side with the folks that say security depends on the quality of the admin.
it seems to be the case that more hackers write viruses/worms/etc. to attack windows systems than to attack linux systems.
in a home environment, most user's run as administrator, and rightly so.
this is a "usability enhancement" which allows users to install any/all programs without performnig the pesky task of swithing from "my account" to admin, over and over, when you want to install software.
use whatever you are happy with.m fw friday, november 07, 2003 "no system is secure when first installed.
bear in mind that we are talking about home and soho machines here; anything in a company will be on a domain and running in user mode.
wayne earl friday, november 07, 2003 that was an insightful, reasoned, and fair treatment of the two operating systems.
look at the openssh exploits for example: this is open source, and a lot of the developers and architects are crypto-weenies, and *still* we have new exploits, and "do not use *any* version older than...." warnings.
correct me if i'm wrong (for i'm no win32 expert), but would not a user mode application install have full access to the registry, able to wipe it clean if the app were malicious or poorly designed?
a user running as admin can install a device driver, and then access whatever they like through a user mode app which accesses the newly installed driver.
linux default installation is not* secure.
yes, windows can be maintained by remote gui desktops - but again, it goes one at a time.
friday, november 07, 2003 just a note about debian security updates: glyph, you say you can totally automate security updates.
anyway, anybody can quote numbers until the cows come home.
we also cannot establish it by using the severity of bugs.
so no matter how malicous or poorly designed the program, if the os integrity is intact, then no user mode application can corrupt /etc/.  system setting remain consistent, and can only be changed by root.
the patches for the programs are also published very quickly (say usually in 24 hours after the discovery of teh bug)
bill gates latest "we don't supply firewalls, for that you will need to buy a firewall software" remark is bad, it is bad because it shows the utter lack of understanding of the nature of a hack.
stuff i can do in 2 seconds in any high-level development language is tedious and difficult in shell.
in joel's case, if he has to personally admin the system, then windows is almost always the correct choice, simply because of his level of expertise with the platform.
i think the only os that can be called "inherently more secure" is openbsd, and it accomplishes that by sacrificing a lot of functionality, which diminishes the surface of attack.
and perl makes any scripting language commonly available on windows appear laughable.
perl is much more intelligent and moving from bash to perl has a learning curve of less than an hour.
in a home environment, most user's run as administrator, and rightly so.
active directly has a very powerful approach to security, which is considerably more granular than the simple ugo setup that *nixes offer.
if it takes you n hours to figure out how to get perl to filter out malicious sql text out of dynamically created insert strings.
you can hardly fault sed for not allowing access to the networking stack.
the fundamental problem with windows security is that users are accustomed to running administrator privs 100% of the time.
it's just very convenient to keep them all in one place.
so, my claim here is more in the nature of an anti-claim: we cannot establish who's the "most secure" by using a has-no-security bugs criteria.
"on a corporate network, windows is hardly remotely adminstratable.
on a corporate network, windows is hardly remotely adminstratable.
i suppose you might have used a source distribution of openssh, but one would have to wonder why if you don't apparently have the confidence (or possibly skills) to administer such things.
look at the openssh exploits for example: this is open source, and a lot of the developers and architects are crypto-weenies, and *still* we have new exploits, and "do not use *any* version older than...." warnings.
this is a "usability enhancement" which allows users to install any/all programs without performnig the pesky task of swithing from "my account" to admin, over and over, when you want to install software.
i think some of us here are too quick to make fun of wayne.
that is why i'm not running anything under windows at home.
you know the windows admin, because he carries cd's and floppies around from desk to desk, installing or upgrading software.
you can have ports off, and kernels patched and users rights allowing them to do nothing but run text editors, and still someone will find a way to do something they shouldn't be doing.
of course, if you've got expertise with windows and don't know (or want to know) how to do things the unix way, then you might be better off sticking with windows.
the badger wednesday, december 10, 2003 it does not take four hours of messing around with source to patch an ssh vulnerability.
some of this is because you have a lot of very experienced programmers with a massive investment in c. i don't have this same massive investment of ten to twenty years, but i have to confess that i keep making a heavier investment because i haven't found anything that offers me as much capability or flexibility.
the bottom line is that a user with admin privs can access kernel memory.
i/o driver - a bit of a sledgehammer to crack a nut.
reading security advisories makes you learn about your system.
if the difference is only "that someone hasn't done that yet", then the claim of better security is on pretty shaky ground.
i can say that linux is demonstratibly more stable a platform than windows, and i say this with far, far more windows admin experience than linux experience.
we also see people talking about how much the ms patches have to fix, but this is merely because a) it can find everything that needs to be fixed, all at once, and b) many require reboots, and most people would probably not enjoy multiple reboots.
but most of the time the high level hacks, the ones which do actual damage are kernel level hacks (offcourse you can always argue that by not securing the kernel this becomes a user land problem but that would require all different apps to try and stop the same malicious source, which is stupid).
my post was to state that in my opinion, linux is more "securable" (that is: better able to be secured) then windows, not that it is more "secure" i base my opinion on my own professional experience of administering significant numbers of systems of both oses.
correct me if i'm wrong (for i'm no win32 expert), but would not a user mode application install have full access to the registry, able to wipe it clean if the app were malicious or poorly designed?
the heart of unix security and win32 security exists in the fact that kernel space can only be accessed by root or administrator authorization.
portabella saturday, november 08, 2003 wsh lets you use vb script or jscript.
now, to install an application that has sytem-wide effects, you do have to run it as administrator (no different than linux).
this box should be hardened, if running in "the wild", by turning off x11's tcp connection (flag -nolisten tcp).
the installation is also quite easy with debian - two commands issued on the command line.
if the administrator is on-the-ball, you're os is as secure as it can be... ...until the next hack or virus comes out, that is.
as for what users can access in their os, it again falls in the hands of the admin.
while theoretically possible, it is practically not feasible, to remotely admin windows boxes.
the problem with this approach is that it gets users comfortable with the idea of entering their administrator password whenever something asks for it.
i have to wholeheartedly agree with those posting about security being in the hands of the admin.
some of this is because you have a lot of very experienced programmers with a massive investment in c.  i don't have this same massive investment of ten to twenty years, but i have to confess that i keep making a heavier investment because i haven't found anything that offers me as much capability or flexibility.
to do this in kernel mode you would presumably have to write an alternative i/o driver - a bit of a sledgehammer to crack a nut.
joel spolsky friday, november 07, 2003 os-religion issues aside, as someone who worked as a sysadmin for close to 10 years, and works with both linux and windows servers on a daily basis, i would say that neither is more secure than the other, "out of the box".
", you will get answers that will include new vulnerabilities and new patches that emerged after your definition was completed.
even my favorite server os, openbsd, can get hacked from time to time.
this box should be hardened, if running in "the wild", by turning off x11's tcp connection (flag -nolisten tcp).
*but*  this is *only* because: 1) i've used linux for a long time and am familiar with updating and hardening it.
the fact that it comes from a unix design heritage (as opposed to the desktop single-user model that windows has evolved from) leads to much better system administration tools and practices.
they're also very monogomous; note that they're the only major oem that has *never* shipped an amd system.
a few minutes later i check progress to see that the link has sent me to an error message.
i believe this is the only rationale that will convince you that system ____ is more secure than windows.
trevor b saturday, november 15, 2003 when comparing linux with windows as a secure server, you shouldn't use a desktop distribution of linux such as mandrake or redhat as the point of comparison on the linux side.
it's their computer, and they can do whatever they want.
wsh gives you an amazing amount of flexibility.
the patches for the programs are also published very quickly (say usually in 24 hours after the discovery of teh bug) by the developers.
they're very faithful--they have rarely dealt with a non-ms os (partially because, unlike hp, compaq, and ibm, they don't have their own in-house os) and they have not jumped onto the linux bandwagon nearly as loudly as others.
a user-mode process under windows can't touch kernel memory, even if it is running as administrator.
what i do know is that i do not like to put trust in a single vendor.
i don't know whether this is because there are many more windows systems (and so more havoc for the hacker to wreak) or because the windows systems are made by microsoft (and more hackers are ms haters).
with linux, you can strip the system down, so that it does one thing and one thing only.
admin experience is a significant factor in determining the appropriate platform to run the task at hand.
nat ersoz friday, november 07, 2003 >> linux default installation is not* secure.
hackers devote more resources to hacing windows.
christopher baus (www.baus.net) friday, november 07, 2003 just a note about debian security updates: glyph, you say you can totally automate security updates.
bill gates thinks security is not an os's responsibility; instead, users (who don't know the difference between a real error message and a web page designed to look like one) should set up and properly configure firewalls, as well as regularly install multi-mb patches over a dialup line.
having said all that,  microsoft's shoddy client software has ruined email, i'm sick to death of those damned 400k virus attachments filling up my mailbox.
philo friday, november 07, 2003 i've just been updating the laptop, as holiday time is coming up again.
for this reason alone, linux is much more securable than windows.
this means that on the avarage you'll have a patch in 2-4 days after a bug has been announced.
myron a. semack friday, november 07, 2003 nat, "the heart of unix security and win32 security exists in the fact that kernel space can only be accessed by root or administrator authorization.
out of the box, windows xp gives you only 2 options: the user is admin (can do everything, all the time), or the user is a moron (cannont install anything at any time).
jeff carroll tuesday, november 11, 2003 i agree with jeff, admittedly most of my experience is in configuring linux(this carefully drings me round to my point): i had very little difficulty configuring the gateway in my flat to be fairly secure.
i then get click a couple of times, and click on a button called install.
it's not just that there are hundreds of pages of them; it's the fact that you can combine them to pretty well do anything you want.
they aren't interested in making a point about os superiority, they just want to make as much as they can from whatever product they sell.
after half an hour i check to find that the button called install has taken me to a page which tells me i'm on the wrong ms site and has a link to another sql page.
** hmm... *scratches head* ** and don't go on about ms-sql vs. mysql; i think we can all agree that any database (even the lowly mysql, which powers slashdot's ~2 million hits/day) is better than no database at all.
friday, november 07, 2003 > linux default installation is not* secure.
that is, for an admin to maintain blocks of machines, all amdin tasks must be made through gui manipulation.
the code needs to provide evidence of its source, either particular path, registry key, signature, etc. kunal tuesday, november 25, 2003 i don't know about the real security of windows vs linux.
regular users can not arbitrarily write to random parts of the registry.
http://www.theregister.co.uk/content/6/33814.html friday, november 07, 2003 my experience is that linux is more securable than windows.
no matter how malicious the intent of a user mode app, if the os is secure and intact, the user mode app can only affect the user that installed the program and the file which he has access to.
magnus wednesday, december 03, 2003 "last time a flaw was discovered in windows, it took me two clicks to patch it."
not all zealots read slashdot or use linux.
check out: http://cwashington.netreach.net/ and look at the automated stuff that's possible.
nat ersoz sunday, november 09, 2003 joel, in regard to your comment about two clicks to securing the windows system: in many linux distributions (such as debian or mandrake), you can automatically install updates from the command line, (or even from a graphical utility).
under linux, i can raise the bar higher, making compromise much more difficult, in less time, with less effort, and less cost than under windows.
i don't know whether this is because there are many more windows systems (and so more havoc for the hacker to wreak) or because the windows systems are made by microsoft (and more hackers are ms haters).
perl on unix, in the hands of a guru, is a very powerful tool indeed.
under debian, a simple apt-get update; apt-get upgrade ssh will suffice.
nobody will actually tell you why, but you will still get a million answers, and the most usable answer will probably be: don't ask!
as a unix programmer who avoids python at all costs myself, i can sympathize.
there is no differentiation between a user installing a pure user mode application and a device driver  no matter how malicious the intent of a user mode app, if the os is secure and intact, the user mode app can only affect the user that installed the program and the file which he has access to.
those immediately after blaster, et al) with hoards of linux evangelists using it as an example of poor windows security, even though ms had a patch out before the incident...
out of the box, windows xp gives you only 2 options:  the user is admin (can do everything, all the time), or the user is a moron (cannont install anything at any time).
but then again, remmember that using linux requires lots of hours learning, tweaking and understanding what you are doing while with windows its all point and click (you can never know what this point and clicks end you up with, but thats good old ms)
windows hotfixes come out every few weeks.
although there may be no known holes in xfree at the moment, x is too huge (and i consider myself rather knowledgeable about x's low level and internals) to be certain that leaving the tcp port open is a good idea.
of all these, the fundamental problem of windows security is that all users run as admin all of the time.
mandrake now (since 9.1 at least) has security options for installation.
if you are maintaining more than one or two computers, this gets old very fast, especially since every patch needs to be researched and tested to make sure it doesn't break mission-critical software x.  realistically, once a week is about as much as anyone can keep up with.
not in any kind of corporate environment, anyway.
magnus wednesday, december 03, 2003 "last time a flaw was discovered in windows, it took me two clicks to patch it."
but then again, remmember that using linux requires lots of hours learning, tweaking and understanding what you are doing while with windows its all point and click (you can never know what this point and clicks end you up with, but thats good old ms) s.kedem friday, november 07, 2003 openbsd, baby.
i think shell is used with a kind of "less is more" attitude.
brian friday, november 07, 2003 >we cannot establish who's the "most secure" by using a has-no-security bugs criteria.
so in my opinion, it really depends on where your competence rest.
** hmm... *scratches head* ** and don't go on about ms-sql vs. mysql; i think we can all agree that any database (even the lowly mysql, which powers slashdot's ~2 million hits/day) is better than no database at all.
that doesn't fill me with confidence in iis, sql server 2k and co. michael koziarski saturday, november 08, 2003 you're right on most tnings in your last post myron, but i would take issue with you over the virtues of windows scripting language.
under linux, i can raise the bar higher, making compromise much more difficult, in less time, with less effort, and less cost than under windows.
at least until they start renting software out instead of selling it... keith security issues affect all, at one point more for one than other .. careful configuration and regular update and monitoring helps as seen in openhack challenge.
this is *only* because: 1) i've used linux for a long time and am familiar with updating and hardening it.
beyond that, security on either system is obviously only as good as your patching habits.
friday, november 07, 2003 actual counts of security issues and the severity of each issue is my empricial basis for stating that one system is more secure than another.
the religious flame war about system security is kind of funny to watch though.
last time a flaw was discovered in openssh, red hat network carried a fix and up2date had it patched within minutes of me ticking the box.
jeff carroll tuesday, november 11, 2003 i agree with jeff, admittedly most of my experience is in configuring linux(this carefully drings me round to my point): i had very little difficulty configuring the gateway in my flat to be fairly secure.
at the same time, you have to acquire the needed applcations separately for windows, which means that probably you also have to look for the patches at different websites.
it seems to be the case that more hackers write viruses/worms/etc. to attack windows systems than to attack linux systems.
to download the msde security patch i first of all have to go from windows update to office update, then install everything else, reboot, and then go to windows update and office update as well.
this means that on the avarage you'll have a patch in 2-4 days after a bug has been announced.
as all it could probably do would to to blue screen the machine i don't see the point.
if however, you're running as admin, i can install a simple device driver which allows me to map any physical page, read/write any device, and delete any file.
keeping it secure requires keeping the system up to date and watching what's going on, just like any other system.
and perl makes any scripting language commonly available on windows appear laughable.
being vulnerable for a week is not the end of the world - and applying a patch that's going to break things is much worse.
2) i've not really used windows in a 'hostile' environment.
and this because the usability of windows has not followed the same clean design as the kernel was given.
", you will get answers that will include new vulnerabilities and new patches that emerged after your definition was completed.
stephen jones saturday, november 08, 2003 portabella, unix programmers refuse to move to higher level languages because of stubbornness.
while win32 maintains a very robust kernel and chacl capability, the security is almost universally overridden by the default installation of assining all users as admin.
each type of system has it's place - use the one most appropriate for the particular problem you are facing.
li-fan chen friday, november 07, 2003 look, userland and kernel are different.
while win32 maintains a very robust kernel and chacl capability, the security is almost universally overridden by the default installation of assining all users as admin.
stuff i can do in 2 seconds in any high-level development language is tedious and difficult in shell.
keeping it secure requires keeping the system up to date and watching what's going on, just like any other system.
we could argue the neither setup is very secure (i'm not a network guru)...
can't be feaures--the linux site comes with mysql and the ms one doesn't have any database at all, not even access.
makes one wonder a - if it has ever been done before (if so it hasn't been detected) b - if something similar has ever been done to windows (you'll never find out) friday, november 07, 2003 personally, i prefer linux, but i think that any admin worth their salt will tell you the same thing about security: you have to keep up with patches or your system will be compromised.
clutch cargo friday, november 07, 2003 security is a process, not a product.
what i do know is that i do not like to put trust in a single vendor.
this is a tough call, using windows server in an intranet is pretty nice and fluent as long as you don't try the wacky stuff (workgroup + domains + iis + apache + ms directory + other file sharing techniques), installing linux requires knowledge but read point 3 and you'll see linux is your only option anyway... 3.
your system administrator can create very secure linux.
"correct me if i'm wrong (for i'm no win32 expert), but would not a user mode application install have full access to the registry" the registry has security controls on it, just like the filesystem.
in joel's case, if he has to personally admin the system, then windows is almost always the correct choice, simply because of his level of expertise with the platform.
that the install isa breeze and comes with almost everything i need and nothing more than that (no, not 1005 pointless image viewers, not 567 text editors, not 382 window managers, and not 47 implementations of ping) is a huge plus as far as i'm concerned.
to the best of my knowledge you are dealing with a ring system.
certainly, bash is a stripped down language for automating common tasks, but that is what it was designed for.
now, to install an application that has sytem-wide effects, you do have to run it as administrator (no different than linux).
admins can control this to very specific rights in just about any os i'm aware of.
mandrake now (since 9.1 at least) has security options for installation.
they're also very monogomous; note that they're the only major oem that has *never* shipped an amd system.
with linux, you can strip the system down, so that it does one thing and one thing only.
we also use mysql replication and it works very well.
vb sript and jscript were not written with sysadmins in mind.
you can probably delete any file without touching the kernel, since admin normally owns the whole machine.
if you want something more sophisticated, there are tools like altiris.
by default neither system is anymore or less secure, they each different approaches to security, which leads them open to different problems.
if the software is backed by simple 90s stack (webservermajor languagedatabaseos) then i suppose going with you are competent with.
to download the msde security patch i first of all have to go from windows update to office update, then install everything else, reboot, and then go to windows update and office update as well.
as all it could probably do would to to blue screen the machine i don't see the point.
stephen jones > unix programmers refuse to move to higher level languages because of stubbornness.
you can use gpo's to manage the registry of client machines (inlcuding grabbing updates from a network).
the unix admin maintains cron jobs on his users' computers which poll for updates and install when necessary.
unix, out of the box, provides a well defined multiuser environment which provides a well defined context with respect to who can install device drivers, who can change permissions, and who has access to what.
a base installation of debian, for example, simple won't contain x or the numerous security-hole-prone services that are installed by default in windows and the "recommended" installations of some of the desktop distributions of linux.
the caveat is that the system can be quite difficult to install initially, especially if you have esoteric hardware.
--oliver oliver hunt wednesday, november 12, 2003 come on people, haven't we learned by now that the least "secure" os is the one with the latest hack or virus headline.
being vulnerable for a week is not the end of the world - and applying a patch that's going to break things is much worse.
2) i've not really used windows in a 'hostile' environment.
this no doubt explains why both of us have hundreds more posts than most other frequent posters :) stephen jones friday, november 07, 2003 >security hotfixes are generally available within a week of the announcement of the vulnerability, and *obtaining* and installing a hotfix for windows is five mouse clicks (i just counted - did an update while typing).
the heart of unix security and win32 security exists in the fact that kernel space can only be accessed by root or administrator authorization.
i can say that linux is demonstratibly more stable a platform than windows, and i say this with far, far more windows admin experience than linux experience.
i have been using the same installed image continuously for almost 5 years now, and i've twice duplicated the system by copying the drive onto another machine and tweaking a few system settings, then upgrading or installing new packages.
other services can be enabled, ftp server, http server, etc.  but the install and config should be specific to a server dedicated to that purpose.
this no doubt explains why both of us have hundreds more posts than most other frequent posters :) stephen jones friday, november 07, 2003 >security hotfixes are generally available within a week of the announcement of the vulnerability, and *obtaining* and installing a hotfix for windows is five mouse clicks (i just counted - did an update while typing).
(up until last time i checked; don't know if they're doing or will do any opteron stuff.)
as far as i can tell using linux should be the best option for an internet server.
you can, however, use linux user mode from within such a machine: http://www.gentoo.org/doc/en/uml.xml )
so, linux (or other open source maintained distributions like openbsd) is the way to go, it has plenty of virtues (open source, good community, fast response, good track
you know the windows admin, because he carries cd's and floppies around from desk to desk, installing or upgrading software.
unix, out of the box, provides a well defined multiuser environment which provides a well defined context with respect to who can install device drivers, who can change permissions, and who has access to what.
that i  can believe..... > i have to confess that i keep making a heavier investment because i haven't found anything that offers me as much capability or flexibility.
no system can be provabily secure.
admin privs are compromised when users run as admin as a matter of fact.
interestingly, the linux developers resist, tooth-and-nail, attempts to move to a higher-level language like python.
that is, for an admin to maintain blocks of machines, all amdin tasks must be made through gui manipulation.
it's only a matter of time beofre someone makes an application that looks just like the "enter admin password" dialog, and then you'd have a whole new class of security breaches.
i *feel* that my linux setup is more secure than a standard windows setup, but the reverse would probably be true of an experienced windows user...
anyway, anybody can quote numbers until the cows come home.
each type of system has it's place - use the one most appropriate for the particular problem you are facing.
check out: http://cwashington.netreach.net/ and look at the automated stuff that's possible.
while theoretically possible, it is practically not feasible, to remotely admin windows boxes.
alyosha` friday, november 07, 2003 topical (cnet): an unknown intruder attempted to insert a trojan horse program into the code of the next version of the linux kernel, stored at a publicly accessible database ... only developers who used that database were affected--and only during a 24-hour period, he added.
having said all that, microsoft's shoddy client software has ruined email, i'm sick to death of those damned 400k virus attachments filling up my mailbox.
but there is insight into the process, there is peer-review, and you can study the code (as if i would) if you want to.
on a linux system, you shouldn't be logged in as root 24/7 because one typo can bring a system crashing to a halt.
first and foremost - kernels are hacked, not higher layers of software.
that is the worst and most exploited of all windows security sins.
joel spolsky friday, november 07, 2003 os-religion issues aside, as someone who worked as a sysadmin for close to 10 years, and works with both linux and windows servers on a daily basis, i would say that neither is more secure than the other, "out of the box".
wayne earl that was an insightful, reasoned, and fair treatment of the two operating systems.
bullet-proof it's *not* very high-level, but "glorified batch file" is manifestly wrong.
however, in unix, /etc/ is fully protected from access by non-root access (which is all users 99% of the time - it takes a deliberate move to make yourself root).
if everybody was to count the number of problems on anything that ran windows, that would be different.
anyone using debian security updates should read the dsas (debian security advisories) before upgrading, for at least two reasons: 1) you could find valuable information about the upgrade, as things to do before/after it.
debian comes by default configured to install security updates, so if you tell a "stable" machine to "apt-get update && apt-get upgrade" on a nightly basis, it will get any new security updates and install them while you sleep.
if everybody was to count the number of problems on anything that ran windows, that would be different.
the windows scripting host is a very powerful tool.
i've gotta side with the folks that say security depends on the quality of the admin.
the openhack iii was successfully protected by argus pitbull, even after hackers gaining root access.
it's not just that there are hundreds of pages of them; it's the fact that you can combine them to pretty well do anything you want.
at least until they start renting software out instead of selling it... keith sunday, november 16, 2003 security issues affect all, at one point more for one than other .. careful configuration and regular update and monitoring helps as seen in openhack challenge.
whichever os you like, but update it centrally from time to time and *don't* let anyone from within your intranet computers use internet access (this is not a joke, look at what happened to valve.
on the other hand, perhaps i was trolled by a disciple of bill.
buy "real world linux security".
and the development of the linux kernel is not done for profit, nor driven by stockholder expectations.
i have been on (and led) project teams that built enterprise server applications in perl.
even perl on windows is pretty much stable these days.
whichever os you like, but update it centrally from time to time and *don't* let anyone from within your intranet computers use internet access (this is not a joke, look at what happened to valve.
last time a flaw was discovered in openssh, red hat network carried a fix and up2date had it patched within minutes of me ticking the box.
nat ersoz friday, november 07, 2003 to preface my comment, i should say that i don't really have much technical knowledge of security issues in linux and windows.
that doesn't fill me with confidence in iis, sql server 2k and co. michael koziarski saturday, november 08, 2003 you're right on most tnings in your last post myron, but i would take issue with you over the virtues of windows scripting language.
you can have ports off, and kernels patched and users rights allowing them to do nothing but run text editors, and still someone will find a way to do something they shouldn't be doing.
