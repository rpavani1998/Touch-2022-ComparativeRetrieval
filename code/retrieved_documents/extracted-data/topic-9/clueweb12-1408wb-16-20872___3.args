the geek.com reports: the free software foundation may ban novell from selling new invalidating the linux buffer cache when you write data, it doesn't necessarily get written to disk right then.
the kernel maintains caches of many things, and disk data is something where a lot of... 03.14.07 enderle on linux by dan morrill linux does not exist except as a concept, we can all move on now.
the easy path here would be to present the different security models for the different distributions but, for this purpose, i'm going to leave linux in abstract and talk about the unique security problem it represents.
unless you have a state mandate, view people are going to do a background check on a volunteer.
invalidating the linux buffer cache when you write data, it doesn't necessarily get written to disk right then.
we know that pretexting is wide-spread, how much easier (and harder to catch and convict) if the person doing the pretexting doesn't even have to come up with a real fake identity?
by dan morrill linux does not exist except as a concept, we can all move on now.
at least that is what novell is facing this week.
since i use both windows and linux boxes on a regular basis, i am fairly familiar with the physical existence of both, and that each operating system has its own fundamental peculiarities in how they are setup and how they are secured.
about linuxdevelopernews get the lastest information on current changes in the linux development world.
some companies even run a federal level back ground check.
sourcerob enderle he is right, nothing is safe as long as a person is involved, and since people are involved in just about everything, then just about nothing is secure.
what i think is most interesting about his view point into the security of linux is: linux exists in an environment where there is broad collaboration, but no effort to validate the collaborators so the opportunity for traditional, old style, data breach is immeasurable.
we know that pretexting is wide-spread, how much easier (and harder to catch and convict) if the person doing the pretexting doesn't even have to come up with a real fake identity?
some companies even run a federal level back ground check.
invalidating the linux buffer cache when you write data, it doesn't necessarily get written to disk right then.
if you are using linux and haven't done a physical security audit in a while and specifically looked at who is collaborating with whom, i would say it is likely well past time.
since i use both windows and linux boxes on a regular basis, i am fairly familiar with the physical existence of both, and that each operating system has its own fundamental peculiarities in how they are setup and how they are secured.
if you are using linux and haven't done a physical security audit in a while and specifically looked at who is collaborating with whom, i would say it is likely well past time.
in the analysis, the author, kripken, estimates that "at most, 60% of the linux kernel... novell could loose access to new linux versions make a deal with a big closed source company and the fsf (free software foundation) may pull your access rights to linux distro's.
so, let's start by saying nothing is secure enough if people are involved.
so, let's start by saying nothing is secure enough if people are involved.
about linuxdevelopernews get the lastest information on current changes in the linux development world.
when we hire someone for a company, it is pretty standard to run a state level criminal background check (there are a couple of companies i know that don't do this, but most do).
what i think is most interesting about his view point into the security of linux is: linux exists in an environment where there is broad collaboration, but no effort to validate the collaborators so the opportunity for traditional, old style, data breach is immeasurable.
when we hire someone for a company, it is pretty standard to run a state level criminal background check (there are a couple of companies i know that don't do this, but most do).
in the analysis, the author, kripken, estimates that "at most, 60% of the linux kernel... novell could loose access to new linux versions make a deal with a big closed source company and the fsf (free software foundation) may pull your access rights to linux distro's.
the easy path here would be to present the different security models for the different distributions but, for this purpose, i'm going to leave linux in abstract and talk about the unique security problem it represents.
want to write code for the nsa, you are going to get a polygraph and a background check.
want to write code for government, expect to get a clearance.
the kernel maintains caches of many things, and disk data is something where a lot of...
the kernel maintains caches of many things, and disk data is something where a lot of work is done to keep everything fast and efficient.
the kernel maintains caches of many things, and disk data is something where a lot of work is done to keep everything fast and efficient.
want to write code for the nsa, you are going to get a polygraph and a background check.
i stumbled across this analysis of the linux kernel which brought back "fond" memories of my market opportunity forecasting days.
sourcerob enderle he is right, nothing is safe as long as a person is involved, and since people are involved in just about everything, then just about nothing is secure.
unless you have a state mandate, view people are going to do a background check on a volunteer.
at least that is what novell is facing this week.
i stumbled across this analysis of the linux kernel which brought back "fond" memories of my market opportunity forecasting days.
no i am not bashing rob, but i did find his paper "the five things you aren't allowed to discuss about linux" to be interesting from the technological view point.
no i am not bashing rob, but i did find his paper "the five things you aren't allowed to discuss about linux" to be interesting from the technological view point.
the geek.com reports: the free software foundation may ban novell from selling new invalidating the linux buffer cache when you write data, it doesn't necessarily get written to disk right then.