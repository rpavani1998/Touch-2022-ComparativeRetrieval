as linux has so many more bugs, new security exploits that take advantage of those bugs will continue to be found at significantly higher rates than for openbsd.one additional step, turning off all unused or unneeded services will significantly increase linux security.having these world readable gives an intruder little advantage in either gaining access to the system or elevating access once they have limited (non root user) access.having these files world readable gives a non privileged user the opportunity to look for potential weakness and to learn information useful in covering their tracks in the event they do elevate access.with the addition of a firewall included as part of the install, if the users change the default options and select the maximum firewall security choices on the red hat 7.1, a new linux system can at the conclusion of the install, be in some ways more secure than a newly installed openbsd.though theoretically, windows servers have significantly longer security related feature lists than any standard unix system, implementation issues prevent the effective use of these features.fortunately, they allow enough, that by manually examining the changes made, a knowledgeable user can do something useful by ignoring the warning not to manually edit the configuration file.an excellent file and directory security system is defeated by the option to use an alternate non secure fat file system, default settings that effectively turn off security when the secure ntfs system is selected and a lack of tools to efficiently control file and directory permissions.after any firewall setting issues are addressed, openbsd is a more secure system than standard distributions of linux.further, if standard unix practices are followed and users normally login as non privileged users and not as root, hostile code will be severely hampered in it's ability to do damage.except for the latest version of red hat linux wrapping a security shell around the product, linux is by default less secure than openbsd for a number of reasons.it's this kind of confused design, akin to the registry and directory design, that makes it very difficult to make a windows server system highly secure to perform a limited set of functions, without risking turning off services required by necessary functions.other implementation issues make it effectively impossible to disable unneeded functions without also disabling necessary ones.a firewall appliance may be easier to set up and a very high end commercial firewall may have a larger integrated feature set but you'll have to accept that the firewall does what you think it does largely on faith, because much like windows, these products are designed to hide the messy, i.e., technical, details of what they do an how they work from their users.if you bring in a virus or trojan horse via e-mail or a download, there is nothing to stop outbound communications initiated by such programs.