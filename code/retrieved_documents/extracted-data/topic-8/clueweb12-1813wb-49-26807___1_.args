it really eases common authentication pains and acts as a service bus between users, identity providers and our applications.it’s the building blocks available such as traffic manager, cdn and access control service that make our lives easier.the windows azure content delivery network allows us to serve users fast.to streamline, manage and maintain a clear overview of which user can authenticate to which application via which identity provider, we use acs to facilitate myget authentication.this only affects storing package metadata and packages.the pricing structure is not always that transparent but if you dig a little into it you’ll find affordable solutions that are really easy to use because you don’t have to roll your own.microsoft has a host of tools to let you deploynode.js, php, and java apps on their windows azure platform.ok, the updating has some latency due to the restrictions mentioned above, but if you download a package from myget it will always come from a cdn node near the end user to ensure low latency and fast access.we currently use the asp.net in-memory cache on all machines but do feel the need for having a distributed caching solution.for example, if someone asks me if they should move to windows azure and they now have one server running 300 small sites, i’d probably tell them not to move as it will be a tough price comparison.but if you dig a little into it you’ll find affordable solutions that are really easy to use because you don’t have to roll your own.distributing the application does mean that our us datacenter server has to access storage in the eu datacenter which of course adds some latency.but we might as well end up with wndows azure appfabric caching anyway as it integrates nicely with our current codebase.caching anyway as it integrates nicely with our current codebase.he's a microsoft most valuable professional (mvp) asp.net and has published many articles in both php and .net literature such as msdn magazine belgium and php architect.