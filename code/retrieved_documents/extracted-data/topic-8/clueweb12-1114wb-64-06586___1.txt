written by ryan mark january 12, 2012 at 10:12 am posted in jobs, php, python leave a comment »
englewood next we needed to distribute dots across geographies.
running on my macbook, this took about four days and produced about one gigabyte’s worth of json data files (not to mention over 3.7 gb of cached files from the ilga website.)
otherwise, use jquery.
self.edit_post(blog, post_id) response = requests.get(url)  self.assertmiss(response) this test creates a new post on a particular blog, then hits the blog  homepage twice to ensure it is cached.
the journalist v1.9 by lucian e. marin.
that being said, it also provides a pretty interesting example of using  ec2 to solve problems that can really only be properly addressed with  distributed computing.
apply if you can rock them.
written by christopher groskopf january 10, 2011 at 9:58 am posted in events, python, talks from spreadsheet to html in 15 minutes with python-tablefu, jinja  and flask with one comment the best christmas carol
csvkit csvkit is a library of utilities for working with csv, the king of tabular  file formats.
commit messages should accurately summarize each task included in the  commit, otherwisegit log is useless.
well this script is kinda boring without the template:  {% for row in table.rows %}   {% if row['year featured']|trim %} {{ row['year featured'] }} {% endif  %} {{ row['name'] }} {% if  row['youtube'] %} {{ row['youtube']|safe  }} {% endif %} written:  {{ row['year written'] }} country of origin:  {{ row['country of origin'] }} originally by:  {{ row['original composer/lyricist'] }} {{  row['other composers/lyricists'] }} {% if row['keywords']|trim %}  memorable  lyrics {{ row['keywords'] }} {% endif %} {% if  row['famous versions']|trim %} famous renditions {{  row['famous versions'] }} {% endif %} {% if row['noteable']|trim %}  did you know?
this allowed me to  produce an index to changes to the pension laws since the 93rd session of the  illinois general assembly,in spreadsheet form.
and to prepare for this recent release, we even spent a week hacking near-complete prototype maps using data that the census had already released, kings county, new york.
in june we launched chicago breaking business, which is, at least in terms of traffic, our largest site so far.
getfieldindex('hispanic_under5')), 'black': feature.
excluding bug-fixes, active development should not be performed on the  stable branch.
use hyphens for ids and classes, no camelcase or underscores.
build normalized models and denormalize only when necessary for  performance.
made in conjunction with news hackers from cnn, nyt, spokesman-review, university of nebraska and usa today.
open states has some provisions for “custom” data properties, so perhaps in the future i’ll find time to determine a good way to include that as well.
it even has an interesting tool called scrapeshell which is appealing to me as someone who likes interactive code development.
bee 0 is joining the swarm.
if you look carefully, you can see me in the back corner of this room,  hunched over my laptop.
make dots scale on zoom.
whenever possible, put javascript at the bottom of the page.
o = open(output_file, 'w')
we were inspired in this effort by bill  rankin’sradical cartography project and dennis mcclendon’s race map  for the encyclopedia of chicago.
many of the tools needed to create the maps we wanted didn’t exist.
getfieldindex('black_under5')), 'asian': feature.
always install dependencies in a mkvirtualenv --no-site-packages  $name environment.
moments when reading one another’s code.
invar automates the generation of map tiles, and the deployment of tiles to s3.
it scatters points within each feature and then writes the points out to a table or new shapefile.
you will be working on these sites, and new ones like them.
it does stuff that i always thought django templates should be able to do.
for those who want to cut to the chase, here is the pythonunittest script for testing our varnish cache layer.
bee 0 is out of ammo.
it  makes big css scannable: a:link {color:#336699;} a:hover, a:active {color:#6d9fd2;} a:visited  {color:#336699;} a:visited:hover {color:#6d9fd2;} don’t rely on (because of ie6): min-width, max-width, min-height, max-height
make your dots to stand out brightly.
it’ll make for a more  interesting map.
attempting to call up 2 bees.
as a foundation for open states, they’ve made a very robust library calledscrapelib, which can be used to manage caching and robots.txt compliance for any web scraper.
written by brian boyer june 24, 2011 at 8:39 am posted in apps, mapping, open source, python with one comment
via crayonsman (cc by-sa 3.0) styling dots creating dot density maps created new challenges with regards to styling.
the spreadsheet was only 25 rows, but i was not about  build all the html by hand.
low-cost, distributed load-testing using ec2.
perhaps the most important lesson i learned from triblocal’s development was that our cache layer was extremely fragile–it was prone to break when a new version of a site was deployed.
# get the template and render it to a string.
since 2003, the general assembly has filed nearly 60,000 pieces of legislation, but only a few of those became laws, and of course, most of those laws don’t impact the pension codes.
large, discrete units of work should be developed on their own feature  branches, so that another developer can pick it up if you get hit by a truck.
to my left is ian bicking, and to his left, brian  boyer.
some of the code i wrote, like that which extracts the list of statutes  impacted by a bill, is probably of general use.
this was before the tribapps team was officially formed, but thanks to sunlight, i was in a good position to apply for a spot on the team when it was created.
it’s unfortunate that we lack a good “code coverage” metric for this sort of testing and of course these aren’t true “unit tests,” but using unit testing tools in this way goes a long way toward organizing the logic.
in case you missed ‘em, here’s some fun stuff we’ve been up to lately.
let’s take a look at a couple tests to see how  these three components work together.
it scatters points within each feature and then  writes the points out to a table or new shapefile.
if you define a generic magic constant in a module (path, api key, url,  etc) that is likely to be reused in another module define it insettings.py instead.
the template will still get created, you’ll just have to edit  the fabfile later if you plan on deploying the project to a staging or  production server.
invar invar automates the generation of map tiles, and the deployment of tiles to  s3.
i wrote python code to analyze the data produced by the scrape to identify only those bills which were actually passed and signed by the governor.
pass table in as a var called  table.
much of the rebuild has revolved around migrating to  a new architecture–apache, wordpress, and varnish.
git push --tags git logis useless.
(a demo using shapefiles can be found inthe repository): #!/usr/bin/env python from englewood import dotdensityplotter def  get_data(feature): """ this function is called for each feature  englewood processes and needs to return a dictionary of classes, with a number  assigned to each.
this is crucial to testing if the cache is being  correctly invalidated.
the template contains a lot of personal preference but it’s been very  useful for us and  handful of projects.
#1234syntax so that they are automatically associated in issue tracker.
if you look carefully, you can see me in the back corner of this room, hunched over my laptop.
we often need to take a spreadsheet of info and lay it out in html on deadline.
there are a lot of cool things you can do with tablefu that aren’t illustrated here, andjinja does a ton of stuff, their documentation is pretty extensive.
(photo by joshua ruihley) to do the analysis, we built upon the open states project framework  developed by our friends atsunlight labs.
here is an example of what a bees session might look like: $ fab -f
tribune reporter jason grotto has been leading a team of tribune and wgn-tv reporters ona series of investigations into the morass which is the illinois pension system.
it is the first and least glamorous of the tools we created, but crucially, it’s very, very fast.
for example: git tag -a v3.0 -m "deploying iteration 3."
in april, may, and june we contributed to a joint effort with  an esteemed cadre of news nerds to developcensus.ire.org, a site intended to  make it easier for journalists to report from census data.
hope to meet many of you there!
the script knits together three unrelated technologies in  order to allow us to test how changes to the site affect the cache: python’s standard library unittest module kenneth reitz’s python requests library max cutler’s python-wordpress-xmlrpc library
tablesetter can be tweaked in a bunch  of different ways to customize the generated table, but as with all specialized  tools it has it’s limits.
getfieldasinteger(feature.
you will work with a group of talented, passionate folks who enjoy making websites and software.
bees.py up:2 connecting to the hive.
the script knits together three unrelated technologies in order to allow us to test how changes to the site affect the cache: the unittest module provides a convenient framework for isolating tests from one another and python-requests dramatically simplifies the process of making various types of requests and testing the response headers.
this eliminates the possibility of version conflicts  and makes setup as easy aspip install -r requirements.txt. 2.
and you’ll be contributing to our blog and our github.
both before and during that project i had  been iterating toward a load-testing solution that would meet the challenge of  the above quote and provide us with a reasonable certainty that sites of this  size (and larger) would not collapse under sudden waves of traffic.
complete requests: 500 requests per second: 81.670000
it’s okay to press enter and accept the  defaults.
it provides methods to spin up an army of ec2 instances (the bees), assault a target server with a configurable amount of traffic, and then spin those instances back down.
the best thing about this cache testing rig is knowing that if we change something we can easily check if we have broken anything else (i.e. regression testing).
send a cover letter and resume to newsapps at tribune.com written by ryan mark january 12, 2012 at 10:12 am posted in jobs, php, python analyzing illinois pension codes using the open states project leave a comment »
but illinois’ pension code is a tangled,  convoluted mess of provisions riddled with giveaways, funding flaws, excessive  borrowing and pension holidays.
a few projects, most notablypinax, have their own ways to organize  large projects.
target successfully fended off the swarm.
connecting  to the hive.
the first time we ever tried to create our own tileset, it took hours to  render and twice as long to deploy.
django follow the django
written by christopher groskopf june 28, 2011 at 4:01 pm posted in infrastructure, open source, python recent open source work and other projects we’re excited about with 3 comments
using the bees i was able to verify that our new load-balanced and varnished servers could handle a sustained load significantly beyond our requirements.
reload the page when you make changes.
most of the actual functionality has been abstracted into the testcachingbase base class so the individual tests are brief and readable.
we learned hard lessons about the scale and nuance of the census in the last few months, and along the way, further built out our toolkit for making maps.
csvkit csvkit is a library of utilities for working with csv, the king of tabular file formats.
if you’re working with csv files or other spreadsheets of data, try it out.
check outthe source code and the other great census resources provided by ire.
two years later, sunlight has continued to invest in open states, which means that the code i contributed then has gotten better without a bit of work from me—you can probably see why we get enthusiastic about open source development.
always request a logger with log =  logging.getlogger("project.app.module").
the first step in establishing figures like this for the story was to run a  complete scrape of the general assembly’s legislative activity back to  2003.
part of hack tyler’s modus operandi is developing in a completely transparent manner.
paster create --template=newsapps_project example_project you’ll be asked for staging and production domains, a git repository  location and a database password.
on a technical note, one of the nice features of the scrapelib library mentioned above, and the 3.7+ gb of cached web pages, was that as i refined my code to build the index, i was able to run it against the cached documents, which made things much faster.
self.new_post(blog) response = self.get_twice(url) self.asserthit(response)
the unittest module provides a convenient framework for isolating tests  from one another and python-requests dramatically simplifies the process of  making various types of requests and testing the response headers.
always define classes with nested rules: #candidate-page .box-column  .box .bar-chart.
the shape of the data in the spreadsheet lent itself more to a top-ten-style list than a table, so tablesetter was not the best tool for the job.
some of them are tried-and-true policies (pep 8), others  are process-driven (the use of python’s logging module), and a few are  entirely idiosyncratic (formatting of css files).
o = open(output_file, 'w') o.write(html) o.close() return html if __name__
html/css add a top level id to every kind of page (#race-page, #candidate-page)
it provides methods to spin up an army of ec2  instances (the bees), assault a target server with a configurable amount of  traffic, and then spin those instances back down.
if you’re going to be there, please let me know so we can plan to connect early in the conference.
thanks to invar’s parallelizing these tasks, we can now produce a map in minutes and deploy it just as fast.
flask(__name__) @app.route("/") def main(): env = jinja2.environment(loader=jinja2.filesystemloader(template_dir)) table =
the first step in establishing figures like this for the story was to run a complete scrape of the general assembly’s legislative activity back to 2003.
the newsapps boundary service, now with 100% more django the boundary service is a ready-to-deploy system for aggregating regional boundary data.
here are the things that we need that the default layout doesn’t  provide a solution for: separate settings, apache configuration files and wsgi handlers for local  development, a staging server and a production server.
build_url('/%s/' % blog) post_id = self.new_post(blog) response = self.get_twice(url) self.asserthit(response) self.edit_post(blog, post_id) response = requests.get(url) self.assertmiss(response)
if i find myself scraping any other web sites, i’ll definitely use sunlight’s library rather than build my own.
use it to render the custom map tile sets you’re working on in tilemill.
written by ryan mark december 7, 2010 at 5:07 pm posted in python, recipes with 20 comments the challenge you don’t get to start optimizing until you’ve made the servers fucking cry.
(and of coursei offered my fixes back to the core project.)
gareth’s project is really well organized and addresses all of these  issues.
self.login() cookies =
by that point, it appeared that the open states illinois work was not going anywhere, so i worked out the basics of scraping the site and contributed my work to the project.
newsapps_project example_project the template contains a lot of personal preference
for updates on our work in-between blog posts, follow us at @tribapps and github.com/newsapps.
flask(__name__) @app.route("/")
in the event a release needs to be redeployed with fixes, increment the  sub-version index, e.g. “v3.1” follow the principle of “merge early, merge often” to prevent  conflicts.
census.ire.org a simple browser for census data, built with journalists in mind.
from package import *.
the shape of the data in the spreadsheet lent  itself more to a top-ten-style list than a table, so tablesetter was not the  best tool for the job.
self.logout(cookies) response =  self.get_twice(url, cookies=cookies) self.asserthit(response)
using the fantastictilemill as our starting point, we began to build a toolkit.
creating dot density maps created new challenges with regards to styling.
complete requests: 500 requests per  second: 81.670000
powers@chicagobreaking.
check out hack tyler‘s instance for the hot demo boundaryservice.hacktyler.com/. panda panda is your new data research toolkit (to help you search and compare data) & newsroom data management system (‘cuz data stuck on your hard drive is sad data).special thanks for the knight foundation for funding the development!
use python’s built-in logging so that output  can be structured for different use-cases.
(note: bees assumes you have aws_access_key_id and aws_secret_access_key set as environment variables–just as you would if you were using the amazon command line tools.)
if you decide to use the bees, please keep in mind the following important caveat: they are, more-or-less a distributed denial-of-service attack in a fancy package and, therefore, if you point them at any server you don’t own you will behavingunethically , have your amazon web services accountlocked-out, and be liable in a court of law for any downtime you cause.
it can be stressful at times, but it’s worth it.
in fact, we now deploy our maps to four separate s3 buckets so that we can take advantage ofleaflet‘s support for round-robining tile requests to multiple subdomains.
cloud commander scripts you can use to quickly build and launch servers in amazon’s  cloud — you won’t forget how you built the server if you wrote a  script to do it.
we were inspired in this effort by bill rankin’sradical cartography project and dennis mcclendon’s race map for the encyclopedia of chicago.
among other things, it allows us to keep some configuration (such as a bounding box) in a per-map yaml file.
we hope that we’ve pressed the envelope a bit with these new maps.
somebody who has a passion for code and getting things done.
you will make things you will be proud to show mom.
brian tried numerous approaches to color and size the dots, but ultimately we  settled on a few principles that worked pretty well: use a dark, sparse base-layer (we used a custom-styled google maps layer,  but would like to move to an open street map base-layer in the future).
i’ll write some more about the  technical details below, but first, there’s a good story.
if you’re working with csv files or other spreadsheets of  data, try it out.
/usr/bin/env python from englewood import dotdensityplotter def get_data(feature): """ this function is called for each feature englewood processes and needs to return a dictionary of classes, with a number assigned to each.
[localhost] run: curl  http://your-domain.com/ >> /dev/null organizing the swarm.
i starteda conversation about that on the open states developer list, but we haven’t settled the question yet.
bee 0 is firing his machine gun.
when in doubt, remember import this.
for  example: render_to_response(‘template’, template_dict,  context_instance=requestcontext(request)) put logic in view functions, not in templates.
now then–how does your server handle thousands of simultaneous  connections?
one comfy aeron chair …all at a desk somewhere in the tribune newsroom, where  you’ll be surrounded by reporters arguing with the cops, yelling about  the ball game, telling crazy stories, and otherwise practicing their trade.
and when you’re all done, just grab the output file and drop it where it needs to go.
waiting for bees to load their machine guns... . . . .
let’s look at one more test fromtestloggedout to see how python-wordpress-xmlrpc comes into play: def test_edit_post(self): url =
pass table in as a var called table.
if you don’t feel like dropping back to the shell to run the script to update your html with your new css or html changes, you may want to … #!
(also it makes transition to py3k  much easier.)
newshackers assemble!
/usr/bin/env python # -*- coding: utf-8 -*- import jinja2 import  table_fu template_dir = 'templates' data_file = 'data/xmas-carols.csv'  template_file = 'xmas-carols.html' output_file =
i usedchris amico’s python clone of propublica’s tablefu and the great templating library jinja.
the swarm has  assembled 2 bees.
this test creates a new post on a particular blog, then hits the blog homepage twice to ensure it is cached.
all of them combine to  provide us with explicit expectations for reading one another’s code and  therefore a much easier time when are obligated to fix it at 10:30, on a  sunday, for a monday morning paper.
being something of a documentation and organization junky i took it upon  myself to begin to collate a best practices guide.
this was a frequent problem with triblocal and i think this implementation is going to go a long way toward preventing that from happening again.
we are all quite satisfied with it.
completed feature branches should be merged into master and deleted from  the remote repository so that they are not mistaken for work-in-progress.
$ fab -f bees.py  attack:http://your-domain.com/,1000,100 read 2 bees from the roster.
someone said that this was the year cartographers retake the internet.
using unit tests to validate your  wordpress + varnish caching strategy with 3 comments
this was a frequent problem with  triblocal and i think this implementation is going to go a long way toward  preventing that from happening again.
we learned hard lessons about the scale and nuance of the census in the  last few months, and along the way, further built out our toolkit for making  maps.
get_data dots_per = 1 dots = dotdensityplotter(source, source_layer, dest_driver, dest, dest_layer, get_data_callback, dots_per) dots.plot() a fast and stable process is useless if you can’t repeat it.
you will always be refining your tools and trying out bleeding edge web technologies.
i metbrian boyer , my editor, at asunlight labs hackathon during the pycon 2009 code sprints.
perhaps most exciting, if you’re using the new tilemill 0.4 (available for osx or ubuntu) it can completely automate the production ofwax interactivity grids, such as we used to do the highlighting in our recent maps.
the vcl for the site attaches “x-cache” and “x-cache-hit” debug headers indicating whether the response was a cache hit or miss and if it was a hit how many hits there have been.
i’m also planning to organize an openspace for news developers and perhaps another for those working with government data, if someone doesn’t beat me to them.
just run your script, visit http://localhost:5000/ and see your handiwork.
do put explanatory docstrings on all non-trivial classes and methods.
englewood will divide this number by a "dots_per"  value set below and create that many dots for that class within the geography.
$ fab -f bees.py down read 2 bees from the  roster.
the  second test logs the user in and then out and then, while maintaining the same  cookie jar, hits the homepage twice to ensure that the user gets cached results  after logging out.
get the code for our simple newsapps varnish plugin for wordpress.
{{ row['noteable'] }} {% endif %} {% endfor %}
git clone git://github.com/ryanmark/django-project-templates.git install the templates.
#candidate-page .box-column .box .bar-chart.
env.get_template(template_file).render(table=table) # write the  html string to our output_file o = open(output_file, 'w') o.write(html)  o.close() jinja templates are very similar to django templates.
back in february we attacked the less-detailed (redistricting) data for  print andthe web.
perhaps  the most important lesson i learned from triblocal’s development was that  our cache layer was extremely fragile–it was prone to break when a new  version of a site was deployed.
bee i-dd450ab6 is ready for the attack.
some of them are tried-and-true policies (pep 8), others are process-driven (the use of python’s logging module), and a few are entirely idiosyncratic (formatting of css files).
in our  fast-paced environment there is little justification for being confused when it  could have been avoided by simply writing it down.
getfieldindex('asian_under5')), 'nhwhite': feature.
i starteda conversation about that  on the open states developer list, but we haven’t settled the question  yet.
look for templates in the template_dir env =  jinja2.environment(loader=jinja2.filesystemloader(template_dir))
you don’t have to know them all to apply.
use descriptive and unique names for ids.
(pep 20) settings.pyinstead.
git tag -a v3.0 -m "deploying iteration 3."
tribune reporter jason grotto has been leading a team of tribune and wgn-tv  reporters ona series of investigations into the morass which is the illinois  pension system.
i know that many of you reading this will be blowing your conference  budgets to attend the2011 car conference in february, but if you’re not,  or if you can make it to both i strongly encourage you to come to pycon this  year.
and to prepare for  this recent release, we even spent a week hacking near-complete prototype maps  using data that the census had already released, kings county, new york.
running on my macbook, this took about four days and produced about  one gigabyte’s worth of json data files (not to mention over 3.7 gb of  cached files from the ilga website.)
class testloggedout(testcachingbase): """ tests for logged-out users.
table_fu.tablefu(open(data_file, 'u')) html =
* * * * source /home/newsapps/sites/$project/env/bin/activate && /home/newsapps/sites/$project/repository/manage $command >> /dev/null 2>&1 render_to_response(‘template’, template_dict, context_instance=requestcontext(request))
use your best judgment, don’t go overboard with  the nested rules, just enough to make sure your not going to style the wrong  things.
since 2003 alone, the pension laws have been revised nearly 700 times, according to a tribune/wgn-tv analysis.
commit messages that close tickets should use the closes #1234 syntax to automatically tie the commit to the appropriate ticket.
we build good stuff fast and you will become a better programmer.
for more details and updates on our progress, follow @pandaproject.
mkvirtualenv --no-site-packages $nameenvironment.
python follow pep 8 best practices, this means (among other things): four-space tabs are required.
the default django project layout makes it dead simple to learn the  framework and get an application up and running.
the solution bees with machines guns is a fabric script that i put together to  aggressively load-test our sites.
dest = 'pg:dbname=chicagocensus host=localhost' dest_layer = 'under_five_dots' get_data_callback =
here are the things that we need that the default layout doesn’t provide a solution for: gareth’s project is really well organized and addresses all of these issues.
'pg:dbname=chicagocensus host=localhost' source_layer =  'under_5_by_race_blocks_shapes' # ...and written into another postgis table  (under_five_dots) dest_driver = 'postgresql' dest = 'pg:dbname=chicagocensus  host=localhost' dest_layer = 'under_five_dots' get_data_callback =
what follows are the best practices we have established (by commission and  arbitration) thus far.
perhaps most exciting, if you’re using the new tilemill 0.4 (available for osx or ubuntu) it can completely automate the  production ofwax interactivity grids, such as we used to do the highlighting in  our recent maps.
i haven’t shared that  back with the open states project yet because i want to do it in a way which  they believe is extensible to other states.
written by ryan mark march 8, 2010 at 2:30 pm posted in infrastructure, python best practices in web development with python and django with 27 comments
don’t use from package import *.
i then wrote some custom code to analyze the  full text of the public act (that is, the version of the bill which was signed  into law) to find those which made changes to theillinois pension code.
you have been warned.
def  main(): env = jinja2.environment(loader=jinja2.filesystemloader(template_dir))
/dev/null 2>&1 always include the requestcontext when rendering view templates.
i’ll write some more about the technical details below, but first, there’s a good story.
in april, may, and june we contributed to a joint effort with an esteemed cadre of news nerds to developcensus.ire.org, a site intended to make it easier for journalists to report from census data.
a few projects, most notablypinax, have their own ways to organize large projects.
for those  who want to cut to the chase, here is the pythonunittest script for testing our  varnish cache layer.
we’ve built out afabric configuration which allows us to make these maps in the quickest and most efficient way possible.
here is the style we settled on: #under-five { marker-fill:#f00; marker-line-width:0;  marker-allow-overlap: true; marker-opacity:1; [group="asian"]  {marker-fill:#ff496c;} [group="black"] {marker-fill:#76ff7a;}  [group="hispanic"] {marker-fill:#ffcf48;} [group="nhwhite"]  {marker-fill:#7366bd;} [zoom=9] {marker-height:.2;} [zoom=10]  {marker-height:.3;} [zoom=11] {marker-height:.5; marker-opacity:.7;} [zoom=12]  {marker-height:.8; marker-opacity:.7;} [zoom=13] {marker-height:1;  marker-opacity:.8;} [zoom=14] {marker-height:1.5; marker-opacity:.8;} } wrapping up although i’ve linked to a number of projects and code snippets in  this post, you may find it useful to see a complete project.
the biggest  difference that i can discern is the much more powerful template syntax.
this week, with  illinois under our belt, i decided to apply the same methodology to my  side-project,hack tyler.
thanks to invar’s parallelizing these  tasks, we can now produce a map in minutes and deploy it just as fast.
at  the event, we were working on code for the precursor project to open states,  although neither of us worked on code for illinois—someone else had  claimed that work.
worse yet, minor changes to the vcl configuration frequently had unforeseen consequences that cascaded across the site.
in case you missed ‘em, here’s some fun stuff we’ve been  up to lately.
take it, use it, tell us what you think!
what we needed was a solution that allowed us to use multiple,  topographically-close clients to all simultaneously assault our servers with  traffic.
written by ryan mark december 7, 2010 at 5:07 pm posted in python, recipes bees with machine guns!
[#/sec] (mean) time per request: 612.188000 [ms] (mean) 50% response time: 358.000000 [ms] (mean) 90% response time:
back in february we attacked the less-detailed (redistricting) data for print andthe web.
""" return { 'hispanic':  feature.
(photo by joshua ruihley) to do the analysis, we built upon the open states project framework developed by our friends atsunlight labs.
moments when  reading one another’s code.
= build_url('/') cookies = self.login() cookies =
use  classes for everything else.
fora recent report, i helped them analyze the laws passed by  the illinois general assembly to tell the broad story of how we got into this  situation.
dot maps let us represent multi-variate data more richly than  choropleth maps–for example, illustrating variation in race and  population density simultaneously.
we’re releasing our project layout for django, based on gareth rushgrove’s lovely django-project-templates.
now then–how does your server handle thousands of simultaneous connections?
in june we launched chicago breaking business, which is, at least in terms  of traffic, our largest site so far.
with one comment at pycon 2011 i will be delivering a talk entitled best practices for  impossible deadlines, which will go in depth on the incredible variety of ways  we’ve found to shave precious hours off the software development process.
each of 2 bees will fire 500 rounds, 50 at a  time.
the best thing about this cache testing rig is  knowing that if we change something we can easily check if we have broken  anything else (i.e. regression testing).
part of hack tyler’s modus operandi is  developing in a completely transparent manner.
""" def test_homepage(self): url =  build_url('/') response = self.get_twice(url) self.asserthit(response)  self.assertmaxage(response, 300) def test_homepage_login_logout(self): url =  build_url('/') cookies =
written by christopher groskopf january 10, 2011 at 9:58 am posted in events, python, talks with one comment the best christmas carol
target failed to fully respond to 1 bees.
(more famously,wtfs/minute.)
python setup.py install create a new project from the news apps paste template.
you’ll also be asked for a secret key which  is used internally by django.
how we used open states for this story here’s how jason and tribune reporter ray long described  illinois’ system in the recent story: pension experts say healthy pension plans require stable, well-structured  rules that are rarely altered.
the first time we ever tried to create our own tileset, it took hours to render and twice as long to deploy.
this particular example is very well-suited to validating caching and scaling strategies.
sometimes this was because our intuitions about the right way to do things were different, other times it was a difference of priorities, but most often it was simply due to a lack of any explicit best practice.
don’t forget to activate the virtualenv when invoking a management  command from cron: */5
these are the tools we use.
the default django project layout makes it dead simple to learn the framework and get an application up and running.
do use whitespace liberally.
as a foundation for open states, they’ve made a very robust  library calledscrapelib, which can be used to manage caching and robots.txt  compliance for any web scraper.
luckly it’s easy to create a rudementary tablesetter clone in python quite quickly.
if i find myself scraping any other web sites, i’ll  definitely use sunlight’s library rather than build my own.
the simpler the template  the better.
this allowed me to produce an index to changes to the pension laws since the 93rd session of the illinois general assembly,in spreadsheet form.
i produced a map of race in smith county, texas (relatedblog post).
bee 1 is joining the swarm.
built because twitterfeed and other services weren’t fast enough for breaking news.
i haven’t shared that back with the open states project yet because i want to do it in a way which they believe is extensible to other states.
englewood (named after an ailing chicago neighborhood that the newspaper writes many sad stories about) uses the python bindings forgdal to load data from postgis or shapefile.
#!/usr/bin/env python # -*- coding: utf-8 -*- import jinja2 import table_fu template_dir = 'templates' data_file = 'data/xmas-carols.csv' template_file = 'xmas-carols.html' output_file = 'build/xmas-carols.html' # set up jinja templates.
get the code for our simple newsapps varnish plugin  for wordpress.
the hope was that in doing  this we could both ensure craft knowledge was well-distributed as well as  minimize the amount of “why did he do it that way?”
both before and during that project i had been iterating toward a load-testing solution that would meet the challenge of the above quote and provide us with a reasonable certainty that sites of this size (and larger) would not collapse under sudden waves of traffic.
we found one  implementation of dot distribution in python, which we extended into a module  for reuse.
* * * * source /home/newsapps/sites/$project/env/bin/activate  && /home/newsapps/sites/$project/repository/manage $command >>
my intention with chicagonow was to do a much better job of compartmentalizing the various elements of the configuration to ensure changes were idempotent, however, brian had an even better idea: unit tests.
each of 2 bees will fire 500 rounds, 50 at a time.
get every new post delivered to your inbox.
just run your script, visit http://localhost:5000/ and see  your handiwork.
for the last few months my coworkers ryan mark and ryan nagle have been engaged in rebuilding the tribune’s blog-network,chicagonow.com (new version not yet launched).
englewood (named after an ailing chicago neighborhood that the newspaper  writes many sad stories about) uses the python bindings forgdal to load data  from postgis or shapefile.
then it edits the post that was created and hits the blog homepage once more to ensure that the cache was invalidated.
ids rarely need to be nested a:link {color:#336699;} a:hover, a:active {color:#6d9fd2;} a:visited {color:#336699;} a:visited:hover {color:#6d9fd2;} written by christopher groskopf february 26, 2010 at 1:27 pm posted in craft, python« older entries rss - posts rss - comments blog at wordpress.com.
dot maps let us represent multi-variate data more richly than choropleth maps–for example, illustrating variation in race and population density simultaneously.
on the news apps team, you will help us research, design, and build online news products.
i produced a map of race in smith county, texas  (relatedblog post).
'build/xmas-carols.html' # set  up jinja templates.
if you’ve found  yourself unsatisfied with the default layout, or you’re using ourfabfile  orec2 image, you might be interested in using our project layout.
but it’s been very useful for us and handful of projects.
use pickled model fields with extreme caution.
on a technical note, one of the  nice features of the scrapelib library mentioned above, and the 3.7+ gb of  cached web pages, was that as i refined my code to build the index, i was able  to run it against the cached documents, which made things much faster.
sometimes this was because our  intuitions about the right way to do things were different, other times it was  a difference of priorities, but most often it was simply due to a lack of any  explicit best practice.
if you’re going to be there, please let me know so we can plan to  connect early in the conference.
but illinois’ pension code is a tangled, convoluted mess of provisions riddled with giveaways, funding flaws, excessive borrowing and pension holidays.
its got an impressive line-up oftalks and tutorials.
by that point, it appeared that  the open states illinois work was not going anywhere, so i worked out the  basics of scraping the site and contributed my work to the project.
my intention with chicagonow was to do a much better job of  compartmentalizing the various elements of the configuration to ensure changes  were idempotent, however, brian had an even better idea: unit tests.
calling off the swarm.
it parses this file and handles passing the correct arguments to invar for  rendering and deployment.
tablesetter which takes a google spreadsheet and generates an html table.
you may want to use a new virtualenv.
appengine-autotweeter a simple application for auto-tweeting an rss feed.
typically we usepropublica’s
a small snippet of python is required to configure englewood.
powered by wordpress.com
the  traditional load-testing tools we tried (ab, flood, jmeter, etc.), while often  useful, suffered from a number of problems when trying to simulate this sort of  event: testing clients may have an operating system imposed maximum number of  out-bound connections.
# open the csv file and load it up with tablefu table =
we have short deadlines so we work iteratively and try to work closely with our users and stakeholders.
table_fu.tablefu(open(data_file, 'u')) # get the template and render it to a string.
obviously this testing strategy doesn’t attempt to address all scenarios  and it should be used in conjunction with traditional testing tools such as jmeter.
do use descriptive lower_case_with_underscores variable names  (understanding is much more important than brevity).
the final component in the stack is the  python-wordpress-xmlrpc library, which makes it nearly trivial to create posts  and comments programmatically.
the swarm is awaiting new orders.
special attention will be paid to python and django tools developed in the  newsroom.
get the code for the chicagonow  varnish configuration.
matters of interest, from the news applications team at the chicago tribune with one comment we are looking for an experienced web developer who can help us build sites for the chicago tribune and chicago tribune media group.
if it isn’t covered by pep 8, refer to idiomatic python, which is  far more thorough.
play with transparency–you may want to take advantage of the effect  of overlapping transparent dots.
open states has  some provisions for “custom” data properties, so perhaps in the  future i’ll find time to determine a good way to include that as well.
[ms]  (mean) mission assessment:
flask template_dir = 'templates' data_file =  'data/xmas-carols.csv' template_file = 'xmas-carols.html' output_file =
all of them combine to provide us with explicit expectations for reading one another’s code and therefore a much easier time when are obligated to fix it at 10:30, on a sunday, for a monday morning paper.
bee 0 is  joining the swarm.
(if you’re not making your own tile sets, check out tutorial and get on it!)
setup.py install paster create --template=
i’m also  planning to organize an openspace for news developers and perhaps another for  those working with government data, if someone doesn’t beat me to them.
commit messages that reference tickets should use the #1234 syntax so that they are automatically associated in issue tracker.
written by christopher groskopf august 12, 2011 at 4:02 pm posted in apps, mapping, open source, python, recipes with 3 comments
organize imports in a logical manner: standard libraries first, then  third-party libraries, then our own modules.
furthermore, in my first few weeks on the job, some of our reporters came  to us interested in general assembly research.
closes #1234syntax to automatically tie the commit to the appropriate ticket.
some other parts are more unique to how the illinois legislature works, or  just to how our team wanted to look at this specific issue.
the vcl for  the site attaches “x-cache” and “x-cache-hit” debug  headers indicating whether the response was a cache hit or miss and if it was a  hit how many hits there have been.
we’ve built out afabric configuration which allows us to make these maps  in the quickest and most efficient way possible.
written by joe germuska december 19, 2011 at 3:22 pm posted in craft, open source, python better web cartography with dot density maps and new tools with 16 comments between brian, joe, and myself there hasn’t been a time in the last  six months where at least one of us wasn’t working with census data.
get_data  dots_per = 1 dots = dotdensityplotter(source, source_layer, dest_driver, dest,  dest_layer, get_data_callback, dots_per) dots.plot() deployment a fast and stable process is useless if you can’t repeat it.
check outthe source code and the other great census  resources provided by ire.
it  does stuff that i always thought django templates should be able to do.
getfieldasinteger(feature.getfieldindex('nhwhite_under5')) } # example argument values passed into the dotdensityplotter #
self.logout(cookies) response = self.get_twice(url, cookies=cookies) self.asserthit(response)
as a result, you can see  complete examples of both our backend and client-side mapping rigs in the  following projects: hacktyler-maptiles hacktyler-census
getfieldindex('hispanic_under5')), 'black':
most of the actual functionality has been abstracted into the testcachingbase base class so the individual tests are brief and  readable.
at the end of each iteration (when features are about to be deployed to  production), master should be merged into stable and then stablehead should be  tagged, e.g. “v3.0”.
this particular example is very well-suited to  validating caching and scaling strategies.
the solution bees with machines guns is a fabric script that i put together to aggressively load-test our sites.
i then wrote some custom code to analyze the full text of the public act (that is, the version of the bill which was signed into law) to find those which made changes to theillinois pension code.
$ fab -f bees.py down read 2 bees from the roster.
fora recent report, i helped them analyze the laws passed by the illinois general assembly to tell the broad story of how we got into this situation.
and when you’re  all done, just grab the output file and drop it where it needs to go.
(specifically, i looked for the text40 ilcs 5 which refers to that  section of the illinois compiled statues.)
two years later, sunlight has continued to invest in open states, which  means that the code i contributed then has gotten better without a bit of work  from me—you can probably see why we get enthusiastic about open source  development.
among other things, it allows  us to keep some configuration (such as a bounding box) in a per-map yaml file.
use ids for elements that are unique to every page in the site.
some minor changes that were made to the illinois general assembly website  had broken the scraper for past legislative sessions, but that turned out to be  pretty easy to fix, so i was quickly up and running with the 2011 version of  the code, and i was able to turn to gathering the data jason needed.
there are a lot of cool things you can do with tablefu  that aren’t illustrated here, andjinja does a ton of stuff, their  documentation is pretty extensive.
brian tried numerous approaches to color and size the dots, but ultimately we settled on a few principles that worked pretty well: here is the style we settled on: #under-five { marker-fill:#f00; marker-line-width:0; marker-allow-overlap: true; marker-opacity:1; [group="asian"] {marker-fill:#ff496c;} [group="black"] {marker-fill:#76ff7a;} [group="hispanic"] {marker-fill:#ffcf48;} [group="nhwhite"] {marker-fill:#7366bd;} [zoom=9] {marker-height:.2;} [zoom=10] {marker-height:.3;} [zoom=11] {marker-height:.5; marker-opacity:.7;} [zoom=12] {marker-height:.8; marker-opacity:.7;} [zoom=13] {marker-height:1; marker-opacity:.8;} [zoom=14] {marker-height:1.5; marker-opacity:.8;} } although i’ve linked to a number of projects and code snippets in this post, you may find it useful to see a complete project.
written by christopher groskopf july 8, 2010 at 9:12 am posted in infrastructure, open source, python advanced django project layout with 24 comments default django project layout versus news apps project layout
use your best judgment, don’t go overboard with the nested rules, just enough to make sure your not going to style the wrong things.
i usedchris amico’s  python clone of propublica’s tablefu and the great templating library  jinja.
this eliminates the possibility of version conflicts and makes setup as easy as pip install -r
the biggest difference that i can discern is the much more powerful template syntax.
the traditional load-testing tools we tried (ab, flood, jmeter, etc.), while often useful, suffered from a number of problems when trying to simulate this sort of event: what we needed was a solution that allowed us to use multiple, topographically-close clients to all simultaneously assault our servers with traffic.
remember that management  commands can be invoked programmatically withcall_command().
# open the csv  file and load it up with tablefu table =
worse yet, minor changes to the vcl  configuration frequently had unforeseen consequences that cascaded across the  site.
look for templates in the template_dir env = jinja2.environment(loader=jinja2.filesystemloader(template_dir))
if you’ve found yourself unsatisfied with the default layout, or you’re using ourfabfile orec2 image, you might be interested in using our project layout.
as a result, you can see complete examples of both our backend and client-side mapping rigs in the following projects: we hope that we’ve pressed the envelope a bit with these new maps.
a template directory and media directory for the entire project.
testing a staging environment from a development workstation introduces  network latency, firewalling, and traffic shaping as variables in the tests.
written by christopher groskopf august 12, 2011 at 4:02 pm posted in apps, mapping, open source, python, recipes don’t break the homepage!
when feasible, do so without altering the original table.
a separate place for the various primary source data files (csv, json,  shape files) we typically have in a project.
whenever possible, use one dot per individual.
the first test fetches the homepage of the site twice and assures that the second request was a hit and also that the max-age header is what we declared it to be in the vcl.
use simple generic names for  classes.
cloud commander scripts you can use to quickly build and launch servers in amazon’s cloud — you won’t forget how you built the server if you wrote a script to do it.
"__main__": app.run()
bee 1 lost sight of the target (connection timed out).
this week i got a spreadsheet of christmas carols with youtube embed codes to go along with a story about anorthern illinois university professor and carol expert who recently died.
take note of the  logger naming structure so that output can be filtered.
bee i-df450ab4 is  ready for the attack. .
getfieldindex('asian_under5')), 'nhwhite':  feature.
gear you’ll get: one shiny, new macbook pro (or an imac, if you’d prefer) one cdm (cheap dell monitor)
(and of  coursei offered my fixes back to the core project.)
but it can quickly get  cumbersome as your application grows and you have to figure out how to handle  deployment.
in fact,  we now deploy our maps to four separate s3 buckets so that we can take  advantage ofleaflet‘s support for round-robining tile requests to  multiple subdomains.
next we needed to distribute dots across geographies.
a library directory to keep various reusable helper functions that are not  django applications.
get the code for the unittest script.
tablesetter can be tweaked in a bunch of different ways to customize the generated table, but as with all specialized tools it has it’s limits.
but it can quickly get cumbersome as your application grows and you have to figure out how to handle deployment.
testing from a single client will cause amazon’s elastic load  balancer to route all connections to a single application server, no matter how  many are available.
furthermore, in my first few weeks on the job, some of our reporters came to us interested in general assembly research.
env.get_template(template_file).render(table=table)
in our fast-paced environment there is little justification for being confused when it could have been avoided by simply writing it down.
some minor changes that were made to the illinois general assembly website had broken the scraper for past legislative sessions, but that turned out to be pretty easy to fix, so i was quickly up and running with the 2011 version of the code, and i was able to turn to gathering the data jason needed.
luckly it’s easy to create a rudementary  tablesetter clone in python quite quickly.
to my left is ian bicking, and to his left, brian boyer.
connecting to the hive.
we tweaked his templates to match our use case.
stinging url so it will be cached for the attack.
some other parts are more unique to how the illinois legislature works, or just to how our team wanted to look at this specific issue.
made in  conjunction with news hackers from cnn, nyt, spokesman-review, university of  nebraska and usa today.
bee 1 is firing his machine gun.
if you decide to use the bees, please keep in mind the following  important caveat: they are, more-or-less a distributed  denial-of-service attack in a fancy package and, therefore, if you point them  at any server you don’t own you will behavingunethically , have your amazon web services accountlocked-out, and be liable in a court of law for any downtime you cause.
[ms] (mean) mission assessment:
we hope you will find them inspirational and make many suggestions about how they can be improved.
oh there’s one other thing.
written by brian boyer june 24, 2011 at 8:39 am posted in apps, mapping, open source, python pycon 2011:
} # example  argument values passed into the dotdensityplotter # in this case features are  read from a postgis table (under_5_by_race_blocks_shapes)...
tablesetter which takes a google  spreadsheet and generates an html table.
(note: bees assumes you have aws_access_key_id and  aws_secret_access_key set as environment variables–just as you would if  you were using the amazon command line tools.)
try the fluorescent colors from the  palette ofcrayola crayons.
we found one implementation of dot distribution in python, which we extended into a module for reuse.
/usr/bin/env python # -*- coding: utf-8 -*- import jinja2 import table_fu from flask import flask template_dir = 'templates' data_file = 'data/xmas-carols.csv' template_file = 'xmas-carols.html' output_file =
being the  “varnish guy” on the team, i was asked to implement a similar  caching strategy to what we had developed fortriblocal.com last summer.
i will be delivering a talk entitled best practices for impossible deadlines, which will go in depth on the incredible variety of ways we’ve found to shave precious hours off the software development process.
""" def test_homepage(self): url = build_url('/') response = self.get_twice(url) self.asserthit(response) self.assertmaxage(response, 300) def test_homepage_login_logout(self): url
$ fab -f bees.py attack:http://your-domain.com/,1000,100 read 2 bees from the roster.
'under_5_by_race_blocks_shapes' # ...and written into another postgis table (under_five_dots) dest_driver = 'postgresql'
it parses this file and handles passing the correct arguments to invar for rendering and deployment.
somebody who likes having a problem to solve.
its about time that online maps were more than just shading boxes.
special attention will be paid to python and django tools developed in the newsroom.
the second test logs the user in and then out and then, while maintaining the same cookie jar, hits the homepage twice to ensure that the user gets cached results after logging out.
the newsapps boundary service, now with 100% more django the boundary service is a ready-to-deploy system for aggregating regional  boundary data.
javascript don’t use jquery in widgets that will end up on other sites.
let’s look at one more test from testloggedout to see how python-wordpress-xmlrpc comes into play: def test_edit_post(self): url =
using the bees i was able to verify that our new load-balanced and varnished  servers could handle a sustained load significantly beyond our requirements.
these setting will be put in the fabfile and  will be used for deployment.
(specifically, i looked for the text 40 ilcs 5 which refers to that section of the illinois compiled statues. )
log = logging.getlogger("project.app.module").
put it another way, what we needed were bees with machine guns.
pg:dbname=chicagocensus host=localhost' source_layer =
the full test suite includes several other complex scenarios.
[localhost] run: curl http://your-domain.com/ >> /dev/null organizing the swarm.
take note of the logger naming structure so that output can be filtered.
it is the first and least glamorous of the tools we created, but crucially,  it’s very, very fast.
some of the code i wrote, like that which extracts the list of statutes impacted by a bill, is probably of general use.
this week i got a spreadsheet of christmas carols with youtube embed codes  to go along with a story about anorthern illinois university professor and  carol expert who recently died.
ids rarely need to be nested each css selector gets its own line.
coding style with regard to naming, spacing, etc.
then it edits the post that was created  and hits the blog homepage once more to ensure that the cache was invalidated.
the spreadsheet was only 25 rows, but i was not about build all the html by hand.
we often need to take a spreadsheet of info and lay it out in html on  deadline.
i wrote python code to analyze the  data produced by the scrape to identify only those bills which were actually  passed and signed by the governor.
this was before the tribapps team was officially formed, but  thanks to sunlight, i was in a good position to apply for a spot on the team  when it was created.
/usr/bin/env python # -*- coding: utf-8 -*- import jinja2 import  table_fu from flask import
the swarm has assembled 2 bees.
englewood will divide this number by a "dots_per" value set below and create that many dots for that class within the geography.
here we see two tests for logged-out users.
obviously this testing strategy doesn’t attempt to address all scenarios and it should be used in conjunction with traditional testing tools such as jmeter.
built because  twitterfeed and other services weren’t fast enough for breaking news.
class testloggedout(testcachingbase): """ tests for  logged-out users.
table_fu.tablefu(open(data_file, 'u'))
alphabetization within groups  takes only a few seconds and makes removing cruft easier.
the hope was that in doing this we could both ensure craft knowledge was well-distributed as well as minimize the amount of “why did he do it that way?”
the following  code renders the dots for our map of children less than five from a database.
let’s take a look at a couple tests to see how these three components work together.
its about time that online maps were more than just shading  boxes.
i exported the spreadsheet to a csv file, created a simple html template  and wrote a simple script to mash the two together.
the block of rules has to share.
""" return { 'hispanic': feature.
what follows are the best practices we have established (by commission and arbitration) thus far.
feature branches should merge from master as often as is  feasible, to prevent merge headaches later on.
we are all quite satisfied with  it.
"__main__":  app.run() there you go.
i know that many of you reading this will be blowing your conference budgets to attend the2011 car conference in february, but if you’re not, or if you can make it to both i strongly encourage you to come to pycon this year.
don’t use inline javascript.
last week the census bureau released detailed (summary file) data for  illinois, and we used our new tools to produce a couple of maps we’re  pretty excited about: 2010 census: same-sex partners in chicagoland 2010 census: children less than five years old (shown above)
this is crucial to testing if the cache is being correctly invalidated.
you will be a generalist: sometimes interviewing or helping users, sometimes writing html and css, sometimes coding in python, php or javascript, and sometimes working on servers.
for the last few months my coworkers ryan mark and ryan nagle have been  engaged in rebuilding the tribune’s blog-network,chicagonow.com (new  version not yet launched).
[#/sec] (mean) time per request: 612.188000 [ms] (mean) 50%  response time: 358.000000 [ms] (mean) 90% response time:
with 20 comments you don’t get to start optimizing until you’ve made the  servers fucking cry.
since 2003 alone, the pension laws have been  revised nearly 700 times, according to a tribune/wgn-tv analysis.
written by christopher groskopf june 28, 2011 at 4:01 pm posted in infrastructure, open source, python with 3 comments
getfieldasinteger(feature.getfieldindex('nhwhite_under5'))
how jason and tribune reporter ray long described illinois’ system in the recent story: pension experts say healthy pension plans require stable, well-structured rules that are rarely altered.
get the code for the chicagonow varnish configuration.
i exported the spreadsheet to a csv file, created a simple html template and wrote a simple script to mash the two together.
written by joe germuska december 19, 2011 at 3:22 pm posted in craft, open source, python with 16 comments between brian, joe, and myself there hasn’t been a time in the last six months where at least one of us wasn’t working with census data.
being something of a documentation and organization junky i took it upon myself to begin to collate a best practices guide.
a place to put django apps that does not clutter up the root directory of  the project.
bee i-df450ab4 is ready for the attack. .
build_url('/%s/' % blog) post_id =
well this script is kinda boring without the template:  {% for row in table.rows %}  {% if row['year featured']|trim %} {{ row['year featured'] }} {% endif %} {{ row['name'] }} {% if row['youtube'] %} {{ row['youtube']|safe }} {% endif %} written: {{ row['year written'] }} country of origin: {{ row['country of origin'] }} originally by: {{ row['original composer/lyricist'] }} {{ row['other composers/lyricists'] }} {% if row['keywords']|trim %} memorable lyrics {{ row['keywords'] }} {% endif %} {% if row['famous versions']|trim %} famous renditions {{ row['famous versions'] }} {% endif %} {% if row['noteable']|trim %} did you know?
it even has an interesting tool called scrapeshell which is appealing to me as someone who likes interactive code  development.
if you don’t feel like dropping  back to the shell to run the script to update your html with your new css or  html changes, you may want to … sprinkle a little flask into the mix #!
last week the census bureau released detailed (summary file) data for illinois, and we used our new tools to produce a couple of maps we’re pretty excited about: these maps demonstrate a map style we haven’t attempted before: dot density mapping.
the swarm  is awaiting new orders.
the following code renders the dots for our map of children less than five from a database.
(a demo using shapefiles can be found inthe repository): #!
much of the rebuild has revolved around migrating to a new architecture–apache, wordpress, and varnish.
'build/xmas-carols.html' app =
written by ryan mark march 8, 2010 at 2:30 pm posted in infrastructure, python with 27 comments at some point during the course of developing the elections center it became clear to me that each of us was spending too much development time trying to understand one another’s code.
check out hack tyler‘s instance for the hot demo boundaryservice.hacktyler.com/. panda panda is your new data research toolkit (to help you search and compare  data) & newsroom data management system (‘cuz data stuck on your hard  drive is sad data).special thanks for the knight foundation for funding the  development!
in this case features are read from a postgis table (under_5_by_race_blocks_shapes)... source = '
o.write(html) o.close() return html if __name__
it’s unfortunate that we lack a good “code coverage”  metric for this sort of testing and of course these aren’t true  “unit tests,” but using unit testing tools in this way goes a long  way toward organizing the logic.
since 2003, the general assembly has filed nearly 60,000 pieces of  legislation, but only a few of those became laws, and of course, most of those  laws don’t impact the pension codes.
we’re releasing our project layout for django, based on gareth  rushgrove’s lovely django-project-templates.
it will install the dependencies: pastescript,  cheetah and fabric.
invar command line tools for generating map images from mapnik configuration.
(if you’re not making your own tile sets, check out  tutorial and get on it!)
the final component in the stack is the python-wordpress-xmlrpc library, which makes it nearly trivial to create posts and comments programmatically.
at some point during the course of developing the elections center it  became clear to me that each of us was spending too much development time  trying to understand one another
via crayonsman (cc by-sa 3.0)
we’ve recently made it a pluggable django app.
written by christopher groskopf july 8, 2010 at 9:12 am posted in infrastructure, open source, python with 24 comments default django project layout versus news apps project layout
the first test fetches the  homepage of the site twice and assures that the second request was a hit and  also that the max-age header is what we declared it to be in the vcl.
(so-called “sticky sessions”)
getting off the ground clone my fork of django-project-templates.
feature branches should be prefixed with the owner’s initials to  prevent confusion, e.g. “bb_polls”.
being the “varnish guy” on the team, i was asked to implement a similar caching strategy to what we had developed fortriblocal.com last summer.
env.get_template(template_file).render(table=table) # write the html string to our output_file o = open(output_file, 'w') o.write(html) o.close() jinja templates are very similar to django templates.
at the event, we were working on code for the precursor project to open states, although neither of us worked on code for illinois—someone else had claimed that work.
that being said, it also provides a pretty interesting example of using ec2 to solve problems that can really only be properly addressed with distributed computing.
getfieldindex('black_under5')), 'asian':  feature.
we hope you will find them inspirational and make many suggestions about  how they can be improved.
use  it to render the custom map tile sets you’re working on in tilemill.
these maps demonstrate a map style we haven’t attempted before: dot  density mapping.
this week, with illinois under our belt, i decided to apply the same methodology to my side-project,hack tyler.
use management commands instead of shell scripts.
getting off the ground git clone git://github.com/ryanmark/django-project-templates.git python
attempting to call up 2  bees.