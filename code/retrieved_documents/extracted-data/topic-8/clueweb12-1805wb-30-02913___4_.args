, it exposes students to the idea of open-source development, and also programming language design.there are those that aim to convey a basic understanding of the concepts and those that are advanced and therefore might assist teachers with their professional development activities.by providing a small and easy to learn programming language in a friendly and inviting development environment, small basic makes programming a breeze.it was the creator's original hope that the examples could grow in a way that is both internally consistent and suggest a real, feasible computing language.it is our hope that this resource will evolve based on feedback from teachers, and ultimately end up as teaching plans that are built on the resources.the goal is to help all of us to find inspiration, help each other, find interesting material, and ultimately to improve our teaching.the idea is to present solutions to the same task in as many different languages as possible, to demonstrate how languages are similar and different, and to aid a person with a grounding in one approach to a problem in learning another.students will learn the importance of written communication skills and sequential thinking while trying to write a computer program on how to make a peanut butter and jelly sandwich.it will enable the reader to make comparisons and generalisations.this resource is quite advanced in terms of depth, but some basic concepts are also explained well.students can get a feel of many languages, their syntax and the concept of debugging.ideas for teaching and learning activities compare the speed of the same program being run on compiled and interpreted systems download and install an open source application from a web repository, compare the different versions provided (source vs various precompiled versions), and explore the differences between high level languages, low level languages, and machine language, including issues such as size, portability and ease of installation.here the same program has been written in many languages for easy comparison of aspects like lines of code (loc), syntax, semantics and features.if students are concurrently working on programming, a discussion of the programming environment they are using can lead to a discussion of compiling, interpreting, and the different kinds of languages.this is another great site with code samples of languages such as ruby,c#, java, javascript, perl, powershell, tcl/tk, c++, lisp, php.