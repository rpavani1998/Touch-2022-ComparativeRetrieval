but among these 1000 top packages one  will also find code from familiar software like perl, python, php, gnome and  the linux kernel itself.
note that this translates  directly into the product receiving less investment into its development.
hence the true size of openjdk development remains unknown for now.
from these results it follows as an obvious recommendation that  vendors participating in open source development and business, should look into  participating in collaborative community developed projects - where the  standard and familiar governance form is a non-profit foundation.
the right way to interpret these results is that to grow really big, there are several things that need to happen, but using the collaborative foundation model is one of them.
these facts don't fit nicely into any column in the above table, but underscores the size of the drupal community - in fact, drupal may be the largest open source project out there?
and there are caveats to be aware of, for instance searching for "cpan" on ohloh gives statistics about the perl cpan module, not the entire cpan archive (which may be impossible to get form anywhere).
the document foundation producing the libreoffice fork already got 77 new contributors in a few months.
(of course,  more likely, it might then be totally irrelevant and have a very small market  share, if at all.)
on average they are a  factor of 10 times larger.
the lack of a legally incorporated organization  seems to mainly be a problem in scenarios where php would need to assert  trademark or copyright or otherwise enter into legal proceedings against some  threat - scenarios which have never materialized.
openoffice was forked in 2010.
there is one notable exception: tiki wiki cms groupware, which is the: http://tiki.org/foss+web+application+with+the+most+built-in+features
qt, mysql and ghostscript are the stars of 1990 dual-licensing era.
(gnome is a little smaller than the other projects in this top category, but it too clearly stands out from the projects in the next category with roughly a hundred or less monthly developers.)
intuitively it seems obvious that it can only be positive - also financially - if a project can grow 10 times larger with one model than another.
this is of course recommended for any software project, but in open source it is seen as a pre-requisite to enable the distributed development typical of open source projects.
one could argue that it's just the most common way of building software.
gcc is part of gnu, but listed separately as data was available.
(subversion, gimp) it is a common claim that for an open source project to flourish, a modular architecture is imperative.
previously red hat is already a contributor and apple  joined openjdk in 2011.
while the linux project produces essentially one deliverable, the kernel,  others like kde, apache, gnome are here entire foundations hosting many  sub-projects, but considered here as one community.
the oracle controlled openjdk may prove to become an exception to the rule,  since ibm in 2010 announced that it will contribute to openjdk development and  abandon apache harmony.
all of the xtralarge projects are non-profit foundation governed and none of the single vendor projects have managed to grow even close to this size.
this  in turn means the total market share of linux of the total operating systems  market might be about 1/10 of the current market share, since the product would  be weaker and not serve well as many customers as it does today.
correlating project governance model with size of  development community notes: categories are observed, not pre-determined, ie they follow as observations  from the sample.
these were then correlated  against the known governance model: xtralarge 100+  commits/day linux, kde, apache, eclipse, perl+cpan, mozilla+addons, gnome,  drupal large 50-100 commits gcc,  python, samba mysql, qt, openoffice, mono, jboss php+pear medium gimp
while the linux project produces essentially one deliverable, the kernel, others like kde, apache, gnome are here entire foundations hosting many sub-projects, but considered here as one community.
(of course, more likely, it might then be totally irrelevant and have a very small market share, if at all.)
this seems to be in harmony with the previous observation that the  largest single vendor projects are roughly 10 times smaller than the  "xtralarge" foundation governed projects.
many more medium-to-large alternatives than we had further down the stack.
mysql open source some time ago i was asked to do a study of our most popular open source  projects to assess 1) what governance models are out there and 2) if the  governance model has any effect on the project's success (such as size of  developer community) on the one hand and on the other hand on the business of  the related vendor(s).
hence the true size of openjdk development remains  unknown for now.
since the original vendor is always the strongest candidate to become the leading vendor also in a collaboratively developed project, the vendor could,as a rule of thumb, expect this strategy - if properly executed - to result in a 10x growth in the project and product, but also 10x larger addressable market, of which the vendor can expect to capture 50% or more as its own market share.
debian  ubuntu sourceforge henrik wordpress table 1: sample of popular open source projects used in the study the size of the developer community of the selected projects was then  estimated so that they could be ordered roughly by size.
while building an xtralarge developer community around openjdk, if successful, is an impressive achievement of sun and oracle, the route taken there is perhaps not applicable to the general open source project: java grew to its current level of importance as a proprietary product, and ibm's abandonment of apache harmony seems to have been the result of some kind of non-public but strong coercion from oracle's side.
in fact, many like apache, eclipse and kde are both of these.
the author  estimates that "the gnu project" would also be an xtralarge project  if data had been found, as gcc alone tops the large category already.
best regards, m ;-)» that is a valid question - maybe it's just a fact everyone is modular these days.
there are 9 projects (if including gnu, for which data was not available)
(of course, if linux was a single vendor project, then novell's share as the second largest vendor would tend to be zero or insignificant, so the benefit of participating in a collaborative project is in that light quite dramatic for the second vendor.)
the justification here is that these collections of software projects still fall under some common theme, such as apache mostly producing web software and supporting developer utilities.
subversion was previously led by  collabnet, but is since 2009 an apache (foundation) project and wordpress is  transfering to its own foundation in 2010 from automattic, but both are here  categorized as vendor projects since this is the model that existed for most of  their lifetime.
red hat is the biggest linux developer by providing 12% of the development effort, but having then in proportion a much larger, 62% market share.
to compare,  if mysql had been similarly community driven, phpmyadmin could have been part  of it, not a separate project as it is now.
the vendor being able to capture 50% or more of that larger market.
so even in the thing they are supposed to be good at they lose!
954 people contributed at least 1 patch to the core of drupal 7, over a 3  year development period.
the above means that red hat as the leading linux vendor has an  unproportionally large market share compared to the development investment.2  thus, theleverage that red hat receives from participating in  the collaborative development of linux is: leverage = 62/12 ~= 5x to justify the logic behind the above calculation we should make some  additional remarks: the revenues generated by a product will depend on the total addressable market (which for operating systems is some tens of  billions usd)
no single vendor project has so far been even close  to reaching their magnitude.
this resulted in the following table with various statistics on project  size: project  devs/day  commits/day   loc/day  devs/mo  devs all time  companies all time linux 130 18000 1100 php+pear     34     65  700 openoffice           60  512 wordpress (core)     33     8  30 openssl           5  79 gnu system tools table 2: projects ordered by relative size, with various metrics numbers in bold are based on published studies from the projects  themselves.
it is based on the article with the same title i published last year.
to compare, if mysql had been similarly community driven, phpmyadmin could have been part of it, not a separate project as it is now.
on the other hand  within the more than 1000 all time mysql developers there are many duplicates,  triplicates and quadruplicates due to people using different email addresses.
large vendor governed projects tend to be controversial: large vendor projects are also known to have poor community contributions.
so you might think that once you just point to this statistical evidence, your future manager [...]»
only a few projects judged to be relevant to the general area of "lamp  server or linux desktop" were selected from here.
from the debian and ubuntu "popcon" lists any projects appearing in the top 1000 were collected.
despite this fact, php does have a well  defined process of membership and decision making similar to what more formal  organizations tend to have.
by studying a selection - believed to be more or less complete - of the most popular open source projects and correlating their size with governance model, we have revealed a strong, and to some possibly surprising result: the oracle controlled openjdk may prove to become an exception to the rule, since ibm in 2010 announced that it will contribute to openjdk development and abandon apache harmony.
have an emphasis on modules/plugins/extensions.
results due to the inaccuracy of the data, making a plot or other graph is not  useful.
additionally, i have the theory that the more "low level" infrastructure you talk about, the bigger the addressable market of the technology, and this contributes to having a bigger community.
not everyone needs a database, but those that do need one tend to cluster around a few common ones (mysql for open source, oracle, microsoft on the proprietary side) regardless of the application or programming language.
oracle's openjdk may become the first vendor controlled project to reach the xtralarge category.
observations all large projects have some form of formal governance, either single  vendor or non-profit foundation.
looking at reports on linux  development on the one hand, and market shares of the different linux vendors  on the other hand, we can see that: red hat is the largest contributor to linux development at 12% of commits.
red hat already contributes to it and recently ibm announced it will abandon its competing apache harmony effort and contribute to openjdk instead.
from the above treatment of red hat's role in the collaborative development  of linux on the one hand, and its market share on the other, we can conclude  that if red hat was solely developing linux as a single-vendor effort, then  linux would receive only 1/10 of the current total engineering investment.
there are 9 projects (if including gnu, for which data was not available) in the top "xtralarge" category.
all of the xtralarge projects are non-profit foundation governed and none of the single vendor projects have managed to grow even  close to this size.
despite this fact, php does have a well defined process of membership and decision making similar to what more formal organizations tend to have.
how much of the total market opportunity a product is  able to serve, is somewhat a direct result of the engineering investment  received by the product.
it seems also novell is benefiting from the collaborative development model  of linux, having a market share almost 4 times larger than its engineering  investment.
this indicates that the leverage red hat gets from the collaborative development of linux is roughlyleverage = 5x.
to answer this question, we will look into the linux project and the  financial performance of its dominant vendors.
(gnome is a little smaller than the other  projects in this top category, but it too clearly stands out from the projects  in the next category with roughly a hundred or less monthly developers.)
red hat already contributes to it and  recently ibm announced it will abandon its competing apache harmony effort and  contribute to openjdk instead.
all large projects have some form of formal governance, either single vendor or non-profit foundation.
out of all projects and markets this is the one with most studies available.
on average they are a factor of 10 times larger.
for the largest projects linux, apache, kde, gnome and eclipse separate studies have been made into the volume and structure of the development effort (see sources at the end), or some number of active participants is advertised by the project host.
if a vendor  is currently in control of an open source project, it should explore the option  of transferring the project to an existing foundation, or alternatively  creating its own foundation for it.
in addition to that, as of this moment, drupal has some 8291 addon modules, a similar amount as the perl cpan archive.
for accuracy's sake, i think you will discover that mozilla corp is the actual employer of the developers and holds the revenue stream.
a few lists of open source projects were used as sources to create a (near) complete list of the most popular open source projects in the world.
it is easy to observe that all of the xtralarge projects have either a modular architecture (linux, eclipse, perl+cpan, mozilla+addons, drupal) or are collections of software (kde, apache, perl+cpan, gnome and gnu).
while the unfathomable magnitude and velocity of the linux project is well  studied and commonly known, and the preference of collaborative foundation  governed projects has started to become a generally accepted fact, it was  surprising to find as many as 9 projects that all clearly stand out from the  rest.
for novell, the levarage is almost as significant, with 7.6% of development effort, 29% market share, yielding a roughly 4x leverage factor.
qt: technically superior, but lost total dominance to being 50-50 with gtk  (part of gnome) due to trolltech over-controlling it.
the justification here is  that these collections of software projects still fall under some common theme,  such as apache mostly producing web software and supporting developer  utilities.
similarly separate "contributor modules" archives - found in perl, php, drupal etc... - are considered part of the main project, as a modular architecture is a key enabler of growing a large community.
so while it is a remarkable achievement  to build a large developer community around a previously closed source product,  the path taken to achieve that is perhaps not applicable in a general case.
openoffice: typical sun: stagnated and mismanaged since 2000.
the conclusions that can be drawn from this set of software are not obviously transferrable to niche or domain specific tools that operate with vastly smaller user-bases, much smaller development communities and no clear business model.
the product's market share one factor limiting the products market share is how well its  functionality and features serve the needs of the total addressable market.
instead, projects can be grouped by size into xtralarge, large and  medium categories (small projects were omitted).
the other factor strengthening this result is the clear gap between the  "xtralarge" group and the other projects.
red hat is the biggest linux developer by providing 12% of the  development effort, but having then in proportion a much larger, 62% market  share.
note that php was in 2011 moved to the "just a project" column, after the author became aware that "the php group" has never formally incorporated in any jurisdiction.
note that php was in 2011 moved to the "just a project" column,  after the author became aware that "the php group" has never formally  incorporated in any jurisdiction.
mariadb и предоставлением альтернативной поддержки mysql, опубликовал результаты исследования, оценивающего с [...]» [...]
but even for these projects it is not trivial to compare the size of the communities relative to each other, since each such study still produces different measurements.1 for the other projects ohloh.net was used to get the commits/day, active devs/month and devs all time.
previously red hat is already a contributor and apple joined openjdk in 2011.
note that this translates directly into the product receiving less investment into its development.
it is also very unlikely that thunderbird would have 3 times more developers than firefox (both without plugins, only core).
it is also very unlikely that thunderbird would have 3 times more developers  than firefox (both without plugins, only core).
mozilla foundation has ~100musd revenues and employs many engineers, in the  other foundation projects engineers typically work at participating companies.
since the original vendor is always the  strongest candidate to become the leading vendor also in a collaboratively  developed project, the vendor could, as a rule of thumb, expect this strategy -  if properly executed - to result in: the project growing 10 times larger.
this is nothing new, of course, as the drupal project lead, one of the world’s largest and most active open source developer communities, he’s in the limelight a lot.
a lot of work to  just keep it alive now.
in 2011 an attempt was made to get more accurate numbers about the engineering investment into openjdk - this was motivated by the thinking that it could potentially now be of xtralarge size and must in anyway be very close to a thousand developers collectively.
» [...] durch die beherrschende firma monty program missfiel.
in fact, many like apache, eclipse and kde are both of these."
just tried not to drift too far from the main point.
gimp predates gnome but is now part of it.
finally, we should point out the harmony between these observations of  vendors revenues and investment into linux, with the above treatment of  governance models of open source projects: we observe here that if red hat was  developing linux alone as a single vendor effort, it would be approximately 10x  smaller.
methodology a few lists of open source projects were used as sources to create a (near)  complete list of the most popular open source projects in the world.
red hat has 62% market share of linux operating system sales
wordpress only has data for core, plugins and themes is here added as guesstimate to even reach medium.
the document foundation producing the  libreoffice fork already got 77 new contributors in a few months.
all of these projects, categorized as "xtralarge",  are developed as collaborative community projects governed by non-profit  foundations.
php may very well be the  largest unincorporated project in the world.
a study into the most popular open source projects, comparing governance models vs size of the (developer) community and estimating the business value of having a large community.
for instance "multiple vendor consortium" is not  observed in the sample.
by comparing the relative investment of red hat and novell into the development of linux, it was shown that both the largest and second largest linux vendor clearly benefit from sharing development cost by collaborative development.
in the top "xtralarge" category.
openjdk is likely to break into the xtralarge vendor spot, after oracle  bullied ibm into contributing to it.
finally, a few obviously important but still missing open source projects  were added by the author himself.
this indicates that the leverage red hat gets from the collaborative  development of linux is roughlyleverage = 5x.
so while it is a remarkable achievement to build a large developer community around a previously closed source product, the path taken to achieve that is perhaps not applicable in a general case.
well established, large, and leading (or "tied" like gnome vs  kde) in their category sources used were the lists generated by the popularity-contest package in  debian and ubuntu, sourceforge all time top downloads and this was complemented  with a short list of projects known to be large and important but not found by  the above sampling method.
but even for these projects it is not trivial to compare the size of the  communities relative to each other, since each such study still produces  different measurements.1 for the other projects ohloh.net was used to get the commits/day, active  devs/month and devs all time.
xtralarge table 3: correlating project governance model with size of development community notes: categories are observed, not pre-determined, ie they follow as observations from the sample.
for the largest  projects linux, apache, kde, gnome and eclipse separate studies have been made  into the volume and structure of the development effort (see sources at the  end), or some number of active participants is advertised by the project host.
this study classifies the historical openoffice by sun, as it would be too early to say anything about the apache and libreoffice descendants.
(subversion,  gimp) it is a common claim that for an open source project to flourish, a modular  architecture is imperative.
it is notable - and relevant for the following discussion on financial  motivations - that this makes mozilla corp larger on a revenue basis than any  of the for-profit vendors in the vendor column!
also, the linux vendor market can be seen as somewhat of a pioneer in open source businesses, so it is reasonable to expect - or wish - that dynamics first seen in this market can later be seen also in the other projects.
[...]» [...] of course released snippets of open source code here and there, but having a stake in the core of one of the "big nine" open source projects feels good, this code is about to run on 1-3% of all websites in the world.
954 people contributed at least 1 patch to the core of drupal 7, over a 3 year development period.
the talk is scheduled to end a one day sub-track called it leaders summit.
similarly openjdk may be the first vendor controlled project to break into  the xtralarge category, see discussion in conclusions.
while the unfathomable size and velocity of the linux project is well studied (18 000 lines of code changed per day!), this is not a single case but altogether 9 collaborative and foundation governed projects have reached this size.
the above result is statistically very strong.
xtralarge foundations "acquire" medium projects.
it was further observed that if linux had been developed as a single vendor  effort by red hat alone, we can see that the engineering effort would probably  be about 10 times smaller than the total effort by the whole linux community is  today.
recommendations from these results it follows as an obvious recommendation that vendors  participating in open source development and business, should look into  participating in collaborative community developed projects - where the  standard and familiar governance form is a non-profit foundation.
(for some like qt and openjdk this just follows from being object oriented.)
the problem is that the ohloh.net  numbers for openjdk only report some 50+ monthly developers.
finally, a few obviously important but still missing open source projects were added by the author himself.
same logic is used for mozilla (where both  firefox and thunderbird are combined as they share code and plugins).
from these results it follows as an obvious recommendation that vendors participating in open source development and business, should look into participating in collaborative community developed projects - where the standard and familiar governance form is a non-profit foundation.
[...]» [...] ingo has posted the results of a study on project governance concluding that the key factor distinguishing large and successful projects is the existence of a [...]» [...]
since the original vendor is  always the strongest candidate to become the leading vendor also in a  collaboratively developed project, the vendor could,as a rule of  thumb, expect this strategy - if properly executed - to result in a 10x growth  in the project and product, but also 10x larger addressable market, of which  the vendor can expect to capture 50% or more as its own market share.
due to the inaccuracy of the data, making a plot or other graph is not useful.
(of course, if linux was a single vendor project, then novell's share as the  second largest vendor would tend to be zero or insignificant, so the benefit of  participating in a collaborative project is in that light quite dramatic for  the second vendor.)
if 95% of the projects out there fit a description, and the top-x also fit that description, can we really infer that it's a criteria for success?
same logic is used for mozilla (where both firefox and thunderbird are combined as they share code and plugins).
in fact, many like apache, eclipse and  kde are both of these.
(tags: opensource software businessmodel research statistics gnu linux apache drupal perl mozilla php pear)
the explanation for this is that +98% of the  top 1000 installed packages are common system libraries and utilities that can  be grouped under "gnu system tools" or just discarded as  "other" if not coming from gnu.
your open source project 10x and revenues 5x at oscon (in portland, oregon).
then the same is repeated for applications, so gnome and kde obviously are bigger than any one particular application, etc..» [...]
there appears to be a glass ceiling limiting the growth of the  large single-vendor projects (mysql, qt, openoffice, mono, jboss).
it is also possible to do the same calculation for the second largest linux  vendor novell: 7.6% of all commits 29% market share levarage =
this is of course recommended for any software  project, but in open source it is seen as a pre-requisite to enable the  distributed development typical of open source projects.
this means that both red hat and novell gainsignificantly from collaborative development - this is commonly called a win-win situation.
red hat has the most control of linux development, employing 36% of the  lead developers that review commits.
this larger development community therefore leading also to a 10 times  larger addressable market.
most probably the number of developers all time is smaller than 8500, but it  gives a good order of magnitude.
[...] http://openlife.cc/blogs/2010/november/how-grow-your-open-source-project...
but among these 1000 top packages one will also find code from familiar software like perl, python, php, gnome and the linux kernel itself.
the study was originally done for an infrastructure technology, so it was very relevant.
so everyone from mobile phones to super computers need an operating system, and that's why linux is the biggest of these in all respects.
i'm glad it is [...]» [...] of having a small to nonexistant community.
the problem is that the ohloh.net numbers for openjdk only report some 50+ monthly developers.
for instance ohloh claims that mysql  has only 25 active developers in a given month, yet the author is personally  familiar with more full time mysql developers than that.
mozilla foundation has ~100musd revenues and employs many engineers, in the other foundation projects engineers typically work at participating companies.
i don't know enough about the samba, subversion or ghostscript code bases to have an opinion, but it seems all others are indeed quite modular.
while the ohloh service was a convenient way to  quickly gather statistics for such a large number of projects, the quality of  the data seems to be rather unreliable.
subversion, ghostscript, wordpress phpmyadmin missing data xorg, gnu  system tools openjdk foundation vendor "just a  project" table 3:
for  instance, early on one may have claimed that linux wasn't suitable for all  kinds of server workloads, and still isn't perhaps suitable to many users as a  desktop operating system.
sources linux kernel development - who writes it http://www.linuxfoundation.org/sites/main/files/publications/whowriteslinux.pdf red hat market share http://searchenterpriselinux.techtarget.com/news/1321810/novell-suse-linux-beats-out-red-hat-on-cost-at-life-sciences-firm http://webcache.googleusercontent.com/search?q=cache:u4twxd2g3zaj:searchenterpriselinux.techtarget.com/news/1321810/novell-suse-linux-beats-out-red-hat-on-cost-at-life-sciences-firm+%22red+hat%22+novell+%22market+share%22+idc&hl=en&client=firefox-a&strip=1 popular foss projects: popcon.debian.org (top 1000), popcon.ubuntu.com  (top 1000), sourceforge.net/top (a few picks), project size
similarly openjdk may be the first vendor controlled project to break into the xtralarge category, see discussion in conclusions.
by studying a selection - believed to be more or less complete - of the  most popular open source projects and correlating their size with governance  model, we have revealed a strong, and to some possibly surprising result: there are 9 projects (linux, kde, apache,  eclipse, perl+cpan, mozilla+addons, gnome, drupal and gnu) that stand out as significantly larger - roughly 10 times - than any others.
mono: foss fundamentalists boycott it anyway because of .net origin, the  rest don't care that it is vendor managed.
this "brute  force" strategy is simply not available to most open source projects  aspiring to reach the xtralarge category.
large vendor projects are also known to have poor community  contributions.
php may very well be the largest unincorporated project in the world.
even so, the ohloh numbers were used for most projects to get an ordered list and the eventual grouping into different sizes of communities, but this was balanced with a subjective check by the authors own observations of the projects.
the product thus receiving 10 times more investment into its development.
the lack of a legally incorporated organization seems to mainly be a problem in scenarios where php would need to assert trademark or copyright or otherwise enter into legal proceedings against some threat - scenarios which have never materialized.
http://openlife.cc/blogs/2010/[...]ce-project-10x-and-revenues-5x [...]» with the gimp as a major exception and possibly 2 others as minor ones, all the projects listed here are infrastructure projects - they deal with system services, provision of taken-for-granted functionality (email & web) and/or the running of servers.
another common trait all 9 "xtralarge" projects share is the  software architecture being either modular (linux, eclipse, perl+cpan,  mozilla+addons, drupal) or formed as a collection of software (kde, apache,  perl+cpan, gnome, gnu) - in fact many, like eclipse and apache are both of  these.
"it is a common claim that for an open source project to flourish, a modular architecture is imperative.
and for some reason the programming language space is much more fractured than the previous technologies, so we have perl, php, python, java, .net...
this gives further  confidence in the validity of the result.
this resulted in the following table with various statistics on project size: table 2: projects ordered by relative size, with various metrics numbers in bold are based on published studies from the projects themselves.
on the other hand, this is precisely the difference observed between the 9 foundation governed and collaborative projects in the "xtralarge" category compared to the average size of the largest single-vendor projects.
zu seinen bemerkenswerten befunden gehören empfehlungen für unternehmen, wie [...]» [...] of acquia was interviewed recently.
from the debian and ubuntu "popcon" lists any projects appearing  in the top 1000 were collected.
out of all projects and markets  this is the one with most studies available.
» this is a correct observation.
on the other hand, by developing linux collaboratively, the total linux  market is 10 times greater, andred hat has been successful in capturing 62%  of that larger market.
finally, we should point out the harmony between these observations of vendors revenues and investment into linux, with the above treatment of governance models of open source projects: we observe here that if red hat was developing linux alone as a single vendor effort, it would be approximately 10x smaller.
even so, the ohloh numbers were used for most projects to get an ordered  list and the eventual grouping into different sizes of communities, but this  was balanced with a subjective check by the authors own observations of the  projects.
it is notable - and relevant for the following discussion on financial motivations - that this makes mozilla corp larger on a revenue basis than any of the for-profit vendors in the vendor column!
in particular, the included projects had to be: sources used were the lists generated by the popularity-contest package in debian and ubuntu, sourceforge all time top downloads and this was complemented with a short list of projects known to be large and important but not found by the above sampling method.
for  novell, the levarage is almost as significant, with 7.6% of development effort,  29% market share, yielding a roughly 4x leverage factor.
then many need a web server, but this group is again smaller than everyone who needs a database.
so we make an additional observation that while sharing development cost  with others, red hat is quite firmly in control of this project.
looking at reports on linux development on the one hand, and market shares of the different linux vendors on the other hand, we can see that: the above means that red hat as the leading linux vendor has an unproportionally large market share compared to the development investment.2
if a vendor is currently in control of an open source project, it should  explore the option of transferring the project to an existing foundation, or  alternatively creating its own foundation for it.
a 9 to 0 is statistically a very strong result in favor of the  foundation governance model.
this in turn means the total market share of linux of the total operating systems market might be about 1/10 of the current market share, since the product would be weaker and not serve well as many customers as it does today.
the main results of this study are statistically very strong, with a 10x difference in size between different types of projects, and however large the margin of error due to ohloh inaccuracies, it is certainly smaller than that.
these were then correlated against the known governance model:
thus, theleverage that red hat receives from participating in the collaborative development of linux is: leverage = 62/12 ~= 5x to justify the logic behind the above calculation we should make some additional remarks: the revenues generated by a product will depend on from the above treatment of red hat's role in the collaborative development of linux on the one hand, and its market share on the other, we can conclude that if red hat was solely developing linux as a single-vendor effort, then linux would receive only 1/10 of the current total engineering investment.
if a vendor is currently in control of an open source project, it should explore the option of transferring the project to an existing foundation, or alternatively creating its own foundation for it.
this resulted in the following sample of open source projects.
these facts  don't fit nicely into any column in the above table, but underscores the size  of the drupal community - in fact, drupal may be the largest open source  project out there?
it doesn't invalidate your observations and recommendations as the relationship between mozilla corp and the mozilla foundation is rather unique.
in 2011  oracle donated the openoffice code to apache foundation, where ibm is investing  developers and rallying for a community.
some of the results are quite remarkable and have general applicability, so i wanted to share them here: (small updates done on 2011-07-14.)
on the other hand, this is precisely the difference observed between  the 9 foundation governed and collaborative projects in the  "xtralarge" category compared to the average size of the largest  single-vendor projects.
now  successfully forked: all linuxes immediately backed it, 77 new contributors  within 2 months.
for instance "multiple vendor consortium" is not observed in the sample.
there appears to be a glass ceiling for single vendor projects prohibiting their growth from the large category upwards.
in 2011 an attempt was made to get more accurate numbers about the  engineering investment into openjdk - this was motivated by the thinking that  it could potentially now be of xtralarge size and must in anyway be very close  to a thousand developers collectively.
even if the underlying data was  deemed to be of poor quality, it is clear it does not have errors that could  explain a difference of this magnitude.
python changed to foundation in 2000.
if the technology at hand only serves a niche (x-ray imaging, whatever), then of course that will limit its size anyway.
and there are caveats to be  aware of, for instance searching for "cpan" on ohloh gives statistics  about the perl cpan module, not the entire cpan archive (which may be  impossible to get form anywhere).
on the other hand, by developing linux collaboratively, the total linux market is 10 times greater, andred hat has been successful in capturing 62% of that larger market.
but i wonder if anyone could come up with other projects which are exceptions?
large vendor governed projects tend to be controversial: mysql: financial star, but now forked many times over.
the table shows the ohloh numbers from 2010.
openjdk is however a special case: 1) java grew  to its current magnitude as a purely proprietary product and 2) while not  publicly known, the move by ibm from apache to openjdk seems to have been  influenced by some kind of coercion from oracle, such as related to the oracle  vs google patent and copyright suit against dalvik/harmony, or holding some  aspect of the jcp process hostage, etc.
mariadb и предоставлением альтернативной поддержки mysql, опубликовал результаты исследования моделей управления и [...]»
this "brute force" strategy is simply not available to most open source projects aspiring to reach the xtralarge category.
in addition to that, as of this moment, drupal has  some 8291 addon modules, a similar amount as the perl cpan archive.
subversion was previously led by collabnet, but is since 2009 an apache (foundation) project and wordpress is transfering to its own foundation in 2010 from automattic, but both are here categorized as vendor projects since this is the model that existed for most of their lifetime.
this seems to be in harmony with the previous observation that the largest single vendor projects are roughly 10 times smaller than the "xtralarge" foundation governed projects.
in  particular, the included projects had to be: upstream projects, where code is developed (e.g. not a linux distribution  or something like xampp)
it is also possible to do the same calculation for the second largest linux vendor novell: it seems also novell is benefiting from the collaborative development model of linux, having a market share almost 4 times larger than its engineering investment.
(financially ok: nokia  acquired in 2008.)
some time ago i was asked to do a study of our most popular open source projects to assess 1) what governance models are out there and 2) if the governance model has any effect on the project's success (such as size of developer community) on the one hand and on the other hand on the business of the related vendor(s).
henrik ingo henrik.ingo@openlife.cc 2010-11-27 -- published as a creative commons attribution licensed work, for details on copying and sharing, see http://creativecommons.org/licenses/by/3.0/
this simply cannot be correct and the most likely explanation is that oracle develops java mostly behind closed doors with one or a few people periodically funneling bug fixes and new code towars openjdk.
the other numbers are based on ohloh.net.
with the donation of openoffice to apache this interpretation may perhaps have reached its limit, other than the apache license, openoffice seems to have nothing at all in common with any of the other apache projects.
these projects clearly stand out from the following "large" category.
follow me on twitter
this simply cannot  be correct and the most likely explanation is that oracle develops java mostly  behind closed doors with one or a few people periodically funneling bug fixes  and new code towars openjdk.
oracle's openjdk may become the first vendor controlled project to  reach the xtralarge category.
instead, projects can be grouped by size into xtralarge, large and medium categories (small projects were omitted).
to  truly reach their fullest potential, open source projects are recommended to  consider the proven governance model of a non-profit foundation around  which participants collaborate.
for perl the only statistic available is the number of modules on cpan.
(eg. eclipse 2001-2003.)
for foss web applications (which is a huge category), almost all projects
for instance ohloh claims that mysql has only 25 active developers in a given month, yet the author is personally familiar with more full time mysql developers than that.
the sourceforge list turned out to be a disappointment, it seems it is  topped by filesharing applications and even a lot of windows-only software.
» [...] how to grow your open source project 10x and revenues 5x | openlife.cc how to grow your open source project 10x and revenues 5xa study into the most popular open source projects, comparing governance models vs size of the (developer) community and estimating the business value of having a large community.
it was further observed that if linux had been developed as a single vendor effort by red hat alone, we can see that the engineering effort would probably be about 10 times smaller than the total effort by the whole linux community is today.
to truly reach their fullest potential, open source projects are recommended to consider the proven governance model of a non-profit foundation around which participants collaborate.
with the donation of openoffice to apache this interpretation may  perhaps have reached its limit, other than the apache license, openoffice seems  to have nothing at all in common with any of the other apache projects.
only a few projects judged to be relevant to the general area of "lamp server or linux desktop" were selected from here.
yes, i'm aware of that.
anyway, what is really funny is that to the best of our knowledge, mozilla corp/foundation generates more revenue than any of the vendors in the other column.
the task is to estimate the benefit linux vendors get from sharing  development costs by collaborating, and on the other hand what they might lose  in revenues and market share by being open.
most probably the number of developers all time is smaller than 8500, but it gives a good order of magnitude.
to answer this question, we will look into the linux project and the financial performance of its dominant vendors.
similarly separate "contributor modules" archives - found in  perl, php, drupal etc... - are considered part of the main project, as a  modular architecture is a key enabler of growing a large community.
the main results of this study are statistically very strong, with a  10x difference in size between different types of projects, and however large  the margin of error due to ohloh inaccuracies, it is certainly smaller than  that.
the explanation for this is that +98% of the top 1000 installed packages are common system libraries and utilities that can be grouped under "gnu system tools" or just discarded as "other" if not coming from gnu.
yet, it is an appropriate question to ask, from a vendor point of view, whether it would still be financially preferable to keep control of the project at the vendor in order to monetize it better, even with the risk of the project then remaining significantly smaller.
in 2011 oracle donated the openoffice code to apache foundation, where ibm is investing developers and rallying for a community.
nun hat er die zeit gehabt, sich über erfolgsfaktoren für open-source-projekte gedanken zu machen.
it is easy to observe  that all of the xtralarge projects have either a modular architecture (linux,  eclipse, perl+cpan, mozilla+addons, drupal) or are collections of software  (kde, apache, perl+cpan, gnome and gnu).
what is the % of projects which fit that (modular architecture / collections of software) description?
since the original vendor is always the strongest candidate to become the leading vendor also in a collaboratively developed project, the vendor could, as a rule of thumb, expect this strategy - if properly executed - to result in: linux kernel development - who writes it http://www.linuxfoundation.org/sites/main/files/publications/whowriteslinux.pdf red hat market share http://searchenterpriselinux.techtarget.com/news/1321810/novell-suse-linux-beats-out-red-hat-on-cost-at-life-sciences-firm http://webcache.googleusercontent.com/search?q=cache:u4twxd2g3zaj:searchenterpriselinux.techtarget.com/news/1321810/novell-suse-linux-beats-out-red-hat-on-cost-at-life-sciences-firm+%22red+hat%22+novell+%22market+share%22+idc&hl=en&client=firefox-a&strip=1 popular foss projects: popcon.debian.org (top 1000), popcon.ubuntu.com (top 1000), sourceforge.net/top (a few picks), project size http://blogs.fsfe.org/padams/?p=140 http://www.neary-consulting.com/docs/gnome_census.pdf http://www.linuxfoundation.org/sites/main/files/publications/whowriteslinux.pdf http://lwn.net/articles/413518/ (openoffice) http://www.eclipse.org/org/community_survey/eclipse_survey_2010_report.pdf http://growingventuresolutions.com/blog/contributors-drupal-7-final-numbers http://drupalmodules.com/forum/post/5541 / http://drupal.org/project/modules (drupal modules) http://www.ohloh.net/p/compare updated 2011-12-18: wordpress obviously is not an acquia project, acquia is a drupal services company, whereas automattic is the wordpress company.
the sourceforge list turned out to be a disappointment, it seems it is topped by filesharing applications and even a lot of windows-only software.
while the ohloh service was a convenient way to quickly gather statistics for such a large number of projects, the quality of the data seems to be rather unreliable.
these projects clearly stand out  from the following "large" category.
(todo: find out about jboss?)
while building an xtralarge developer community around  openjdk, if successful, is an impressive achievement of sun and oracle, the  route taken there is perhaps not applicable to the general open source project:  java grew to its current level of importance as a proprietary product, and  ibm's abandonment of apache harmony seems to have been the result of some kind  of non-public but strong coercion from oracle's side.
by comparing the relative investment of red hat and novell into the  development of linux, it was shown that both the largest and second largest  linux vendor clearly benefit from sharing development cost by collaborative  development.
(...and this used to be 50% few years  ago.)
wordpress only has data for core, plugins and themes is here added as  guesstimate to even reach medium.
henrik ingo published as a creative commons attribution licensed work, for details on  copying and sharing, see http://creativecommons.org/licenses/by/3.0/ executive summary
how to grow your open source project 10x and revenues 5x a study into the most popular open source projects, comparing governance  models vs size of the (developer) community and estimating the business value  of having a large community.
the task is to estimate the benefit linux vendors get from sharing development costs by collaborating, and on the other hand what they might lose in revenues and market share by being open.
also, the linux vendor market can  be seen as somewhat of a pioneer in open source businesses, so it is reasonable  to expect - or wish - that dynamics first seen in this market can later be seen  also in the other projects.
jboss has been uncontroversial to the community, but was attacked by ibm  backed apache geronimo for market share (but survived this).
this study classifies the historical  openoffice by sun, as it would be too early to say anything about the apache  and libreoffice descendants.
this seems like a good strategy to follow, resulting in 5x more revenues than the alternative strategy.
on the other hand within the more than 1000 all time mysql developers there are many duplicates, triplicates and quadruplicates due to people using different email addresses.
the author estimates that "the gnu project" would also be an xtralarge project if data had been found, as gcc alone tops the large category already.
the interview by nick heath appears in tech republic under the [...]
(see for instance matthew aslett, stephen o'grady, or myself.)
some of the results are quite remarkable and have  general applicability, so i wanted to share them here: (small updates done on 2011-07-14.)
debian ubuntu sourceforge henrik table 1: sample of popular open source projects used in the study the size of the developer community of the selected projects was then estimated so that they could be ordered roughly by size.
yet, it is an appropriate question to ask, from a vendor point of  view, whether it would still be financially preferable to keep control of the  project at the vendor in order to monetize it better, even with the risk of the  project then remaining significantly smaller.
openjdk is however a special case: 1) java grew to its current magnitude as a purely proprietary product and 2) while not publicly known, the move by ibm from apache to openjdk seems to have been influenced by some kind of coercion from oracle, such as related to the oracle vs google patent and copyright suit against dalvik/harmony, or holding some aspect of the jcp process hostage, etc.
from the projects categorized here, i wouldn't say that mysql is modular, it is moving increasingly in that direction.
while the unfathomable size  and velocity of the linux project is well studied (18 000 lines of code changed  per day!), this is not a single case but altogether 9 collaborative and  foundation governed projects have reached this size.
business value of having a (xtra)large community intuitively it seems obvious that it can only be positive - also  financially - if a project can grow 10 times larger with one model than  another.