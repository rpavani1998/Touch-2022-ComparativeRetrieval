having an automatic admin interface can cut down on building web applications like content management systems and blog applications.one major benefit is that all python programs look similar, since indentation is a language requirement and not a matter of style.this makes it easier to read and understand other people's python code."being whitespace sensitive means that it delimits blocks of code by line breaks, other programs like java, c++ and php use curly braces to delimit code blocks.i had built a framework in php over the past five years, that powers lots of high traffic multilingual sites, but after two weeks with django, iÂ´ve not only decided to learn django, but also to stop any other development on my own solution.the two factors that made me choose django over rails are that django has a very powerful and mature admin website built into the framework that you can use if you want.django developers are always thinking about security and as far as i know it's very secure.python's syntax and way of doing things is so much cleaner and elegant in my opinion that ruby.python is stricter in the way that it does things, like being whitespace sensitive for example.its overall philosophy goes with mine, it uses python which i like more than ruby and django's workflow and stack seem a lot more simple and logical than rails.what's the worst that can happen, you broaden your knowledge base and become a better php programmer (or whatever you use) because of it?and after working with django for over a year, i am very happy with it and have started using django's design patterns in my php framework that i have keep up over the years.you basically just need python and whatever database you're using installed locally for development.not only does django seem to make more sense, it's a lot faster than rails when used with apache 2.adrian's presentation was very logical in that he explained the django stack so that you could follow django's workflow for creating applications.