second, as we handle people's money, mistakes could be damaging, but the expressiveness of fp give us confidence in our code, and a lack of side effects facilitates testing.the code is more readable and easier to adapt as new market requirements come in.the goal is that it should give emergency managers a reliable and flexible way to coordinate on their most natural medium (maps), be as easy to use as pen and paper, quick to train a new user on, and able to run in many environments, some quite technologically out of date.both the channel and jabber servers need to speak to programs written in php and c++, and having infrastructure and engineers comfortable debugging it already in place when we began was invaluable.it's well-known that erlang is a good choice for communications applications and real-time chat in particular, and we'd like to mention that erlang's strong support for concurrency, distribution, hot code loading, and online debugging have been indispensable, and that it's those same weaknesses that lead us away from c++ when first designing the service.the recurring theme is "the right tool for the job" — actor-based, functional, imperative, and object-oriented programming are all valuable tools for modeling particular problems, but the most important lessons in our experience are how to lower the barriers to choosing the right tool, and how to arm engineers with the knowledge they need to make an appropriate choice.the logic is tightly tied to excel, and a server-side implementation involves a complete rewrite in another language, which carries both operational risk and developmental cost.our service management tools as well are language-independent; all our services regardless of language are controlled using the same interface.f# is a functional language with first class functions and composability, a pattern matching language and strongly typed.hypernumbers are developing a ‘spreadsheet-like’ programming language and platform for the web that will enable non-technical end-users to build dynamic integrated web-applications.while this may sound bizarre, excel's flexibility and convenience renders it an immensely useful tool for the front office, and our traders are extremely excel literate.excel combines two programming models a zeroth order functional language (the spreadsheet) an imperative programming language (visual basic for applications) the functional model allows very rapid development and great transparency, but the limitations of excel's built-in functions drives developers to use vba.a lot of functionality has been added to interact with the many moving parts of our infrastructure.unfortunately, our erlang projects live outside of our main repository, and the extra learning necessary to develop or just fix bugs in erlang tends to keep us isolated from the pool of talent in our department.the stronger community would in turn benefit the commercial users, in a positive feedback cycle.