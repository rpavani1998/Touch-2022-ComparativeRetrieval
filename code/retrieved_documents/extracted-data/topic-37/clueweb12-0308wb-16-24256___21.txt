as for the deprecation mechanism, i would find it a lot more relevant if we were given some kind of timetable of when features are removed.
are we going to see anything like the "original" 3.0 proposal's object model?
the problem with announcing details before they are well and truly finalized is that they can create false expectations, and this is very clearly what happened with longs peak.
there are a couple of axes to look at: (x) do you avoid forward-looking statements to the public in mid-project?
as it happened to be , microsoft understood that games over the market are their main goal , and set direction there.
they understood that the graphic accelerators have undergone a heavy change and thus a major api change is due.
the vendors alluded to above had very little to do with it.
by khronos member on 2008-09-06page 1 of 2 pages 1 2 > note: all comments are moderated for spambots so there will be a posting delay.
or are we just getting more of the same old messy api?
trust me , real good and fine people are looking up to serving you as opengl is a great hope for all of us who believe in the power of free software,openness and community.
you still need to mess with extensions to use geometry shaders, for example.
since january 2008, x and y have both been set back to "yes" - it was a period of silent running but the self-imposed deadline of specification hand-off for final review in early july was reached.
when was the last time you saw a deprecated function in an api get removed?
on the contrary : think of productive ways to have opengl offer more and be more attractive and associative than direct3d.
arb has chosen for the next major version of opengl.
let opengl3.1 be the proof of that !
much of the hostility could have been avoided by simply being upfront and informative.
i've been using opengl myself for around 8 years (bobvodka on the ogl forums, phantom on the gamedev.net forums) and this latest failure has pushed myself, and others, over the edge and into d3d land.
if you just stop to publish forward looking statements you release information like "working on it, reached mile stone one containing feature xy" once in a while.
this was magnified by the duration - the y axis - if it had only been a 3-4 month excursion then the frustration level would likely be lower.
is there a plan for the future?
i work with opengl ever since 1999, and went through all of its versions and subversions.
not even a "we are working but it takes longer" statement.
oh, you must mean that pesky opengl.org and gamedev.net forums where, upon release of the spec, the giant cry of 'what the hell?
it does *not* catch up with all the "new" features that have become possible on gpu's.
i see vague armwaving, saying "one day, at some unspecified point in the future, this function may no longer be available".
there is probably also some amount of deliberate fudding from the competitor(s).
for now , you are correct, gamers have been hushed, which is , in my opinion , a pity as they are the real ones who tweak and peak the api's.
api developers of an open standard need to be communicating with the community so that the community can hit the ground running with the updated api when it is released!
i think we are talking at cross-purposes: my main concern isn't about the expectations regarding the release (feature wise or in any other way).
we're now in the second such window, and it's not likely that detailed roadmaps of precisely what will make it into opengl 3.1 will be published during the window, but our goal is to keep the window short.
by liquidat on 2008-08-24@liquidat, sorry you feel that way, but it's the honest truth.
you won't get a new api, so don't wait for gl3.0".
anti spam: please enter the word you see in the image below: advanced search follow amdfirepro fireuser.com is a community resource for visualization, 3d, video and engineering professionals to learn about the latest acceleration and display technologies, discuss support issues, as well as influence the features and direction of the firegl and firepro accelerator line.
this discussion is not about disappointed time frames or delayed time tables.
and it does nothing to help you stay on the fast path.
by bo schwarzstein on 2008-08-20notgrumpy: you may hide the state of affairs from youself by saying "oh, it's not all developers.
if run a opengl 2.x or 1.x app on a system with opengl 3 installed, this removes major problems in 3.x.
my main concern is that there was no information at all - nothing.
by khronos member on 2008-08-24khronos member: sorry, but that is utterly bullshit.
although i say this, i don't think opengl 3 is the right step: opengl 2.x with a good set of arb extensions is simpler and provides the same: opengl was designed to provide extensibility thru extensions, core should be minimal.
by steven on 2008-08-20@notgrumpy "tabloid magazines of the web age"?
but suddenly, it's all "yeah, we couldn't change ogl too much now, because you know, developers would have no time to adjust".
the only company i can think of that has actually removed deprecated functionality is apple.
as much as i dislike the way microsoft behaves in general, i liked what they did when they approached dx10.
long term, if opengl evolves to track hardware capabilities on a regular basis, legacy features are deprecated out in an orderly fashion, and the api undergoes some streamlining to eliminate old warts, what's the problem ?
register for a free account!
and that’s new features now.
so while i see that you think the technical side of the development is not that bad at all, i don't get how you can still be confident that there will be a next step in the development of opengl.
how can you be sure that khronos doesn't screw it up, or simply just drops the opengl spec?
i'd really like to see the vaaaast authority from whence your gigantic self-important guru ego's spring.
the opengl3.0 topic , which was supposed to be the hottest living one , was all full of questions of "what happened to opengl3.0 spec ?" or "when can we expect anything ?" or even apologies like "no posts about the advancements of opengl3.0 because ...".
that's a very different thing from putting up roadmaps committing to specific changes or timelines.
username password forgot your password?
neither has java, or virtually anyone else.
as i said though this isn't to imply that there can't be discussions about ideas for future revisions or extensions through any number of channels (opengl.org forum is a good one).
don't let opengl get to the point where glide3.0
in person i believe in the power of communities, and so should khronos !
the  first is to provide core… tags: 3d, developers, opengl
yep, you can shoot me down on 'tell me what that is".
there has been much controversy over the direction the khronos group/opengl
what they did as of that moment, is that their labs sought the right api with their destination audience , they went to intel , nvidia, ati , and game companies and together they conceived a very nice api , who will, as i believe, undergo only minor changed to adapt itself to dx11 and later to dx12.
at least not totally....
also, well pointed criticism does not need any project names - the authority is given by the argument, not by an authority.
the problem with gl3.0 is that it fails in all these areas.
instead of giving a new, flying colors, innovative api [i seem to get the impression many have expected] and lure new users inside, make everything faster and appealing.
in which case khronos might want to consider *telling* people.
allow to run oldies... those apps using older directx libs than installed in a computer.
the problem is that there was a total stop of communication on all levels regarding all topics.
the longs peak fans may have lost track of the fact that its feature set didn't even reach a complete dx9 level.
but in reality you gave everyone the idea that there is nothing done at all, that the project is dead or at least not really important.
there has been much controversy over the direction the khronos group/opengl arb has chosen for the next major version of opengl.
by notgrumpy on 2008-08-19most of the extensions in gl 3.0 have been implemented in nvidia g80 series gpu, so i do not feel it's a greater improvement compared with the old.
the first is to provide core…tags: 3d, developers, opengl by swdesignman on 2008-08-18"after testing an approach that would have a drastic effect on the api, requiring complete opengl application rewrites and not introducing any of the long awaited features modern gpus are capable of, the choice was made to give programmers what they are really waiting for" so.... why are so many developers so furious then?
indeed, it could still be calmed by providing the information grumpy is asking for.
you activate shader xyz, only to find out that performance tumbles.
khronos , on the other hand , (and again , i am speculating because as a member of this community i also feel i have been left out) sought to keep their audience without [as you say] making a big fuss.
but i have heard loud complaints 'from the development community'.
it seems that khronos has totally forgot the "free as in freedom" concept.
once they got that, they'd be happy to see new features, of course.
during longs peak, the "x" and "y" were both effectively set to "no".
it does *not* work with current mainstream gpu's (because it needs juuuust a few features only available on dx10 gpu's).
all the appendix e stuff really removed, it's a huge good step in the correct direction imho.
after testing an approach that would have a drastic effect on the api, requiring complete opengl application rewrites and not introducing any of the long awaited features modern gpus are capable of, the choice was made to give programmers what they are really waiting for.
think about that by phoenix_wrath on 2008-09-06well, something else to think about, there are two isv's actually on the opengl working group and both of them are game developers.
a roadmap that says nothing about the future isn't much of a roadmap.
the whole way of process of defining the spec was something vague and did not remind me of the former arb i knew which posted requests for comments, suggestions and other specs on the forum to allow developers to feel the pulse of the whole project.
should you ask me , they succeeded very much (trust me on that one , that's what i do for a living...) .
microsoft has never removed a single deprecated function from their api's.
well, what i really want is what you said khronos was giving us, a roadmap.
i have been to siggraph2008 and expected some ingenious idea like inversing the api : inventing a new api (as you promised in the beginning in the forums) to be more generic and less of a fixed approach and to declare all fixed function s as extensions of opengl3.0, thus allowing quick wranglers to quickly adapt to the situation , changing almost nothing for vendors , yet introducing new concepts to the world which will show that indeed much effort was put here and will share the process with the users.
not just "an incremental update to the last incremental update to the last incremental update", because that strategy has had a decade to prove just how well it works.
users and developers,vendors and others cannot (!) trust khronos anymore to deliver anything reliable - because they showed that they are not able to communicate anything regarding the standard.
by liquidat on 2008-08-25would those posting generic gripes against khronos / ogl3 please put in the projects or company you work for rather than the chicken-shit safely anonymous generic assaults?
by liquidat on 2008-08-27to ogl enthusiast / liquidat and the distinguished kronos group member should this post be authorized : i have got to back up liquidat.
well, it seems like they managed to do so , their audience shall be safely kept.
it will not used for marketing or tracking in any way.
after testing an approach  that would have a drastic effect on the api, requiring complete opengl  application rewrites and not introducing any of the long awaited features  modern gpus are capable of, the choice was made to give programmers what they  are really waiting for.
calling it "what [programmers] are really waiting for" seems dishonest.
if you have a specific rendering or hardware feature that you feel would prevent you from writing opengl 3.0 code, you should write it up in the opengl.org forum, since the 3.1 definition effort is already underway.
the game developers in the working group for opengl have made it extremely clear that getting closer to current hardware capability (which means dx10 class hardware, as that is what is now available) should be the #1 priority, and this is the direction that has been taken for 3.0 - prioritizing integration of contemporary hardware capability above any sweeping api changes.
i believe this is the biggest problem the other problems are less important: - for use cuda or larrabee we may use opencl. - opengl is not an object oriented lib, maybe kronos should standarize a oo lib for those who demand it.
i don't hear any crucial common demoninator save a propensity for passive-agresssion through whining.
commenting on: opengl 3.0 - a big step in the right direction posted by nick haemel on august 18, 2008
by rob jones on 2008-08-21i've a question... when available, if i install a compliant opengl 3 driver on a computer, will opengl 2 app's still running??
and does it involve a change from the failed strategy of the last decade?
[if you regretfully recall] is today, which is practically nowhere.
the whole power of open standards is from no other than the community which uses it, keep that in mind, oh distinguished khronos member, embrace your community as you walk towards 3.1 : share your ideas and thoughts and even your problems.
your email address will not be published.
« name « email address comments: (you may use html tags for style)
this doesn't mean blocking off communication with the public as we're happy to discuss specific ideas or isv needs, but it would be off-policy for khronos members to post details or roadmaps relating exactly what will be in opengl 3.1 until it has reached a final or very-near-final state in the specification process.
heck, even the press contact of the khornos group didn't answer any e-mail, let alone giving a statement.
by clarks on 2008-08-18i'm not entirely unhappy with opengl 1.7, but it a disappointment.
and this requires a different philosophy behind the api.
and that is the part i cannot understand: why didn't khronos simply "hang out a sign" saying: "we are working at it, it takes longer, details later - but we are not dead."
login | register for account
note: registration is only used to validate postings.
by grumpy on 2008-08-18well said!!!
but there never was an response.
developers wanted something that was competetive with directx for dx9-class functionality.
unless of course, there are actual concrete plans for removing these deprecated functions.
it is also not about discussions about other features or api details.
which means that a "deprecated" label just seems like a slap in the face.
and besides, it's all about jalousy".
", you're in big trouble.
opengl has been falling behind for a decade or so.
gl 3.0 takes two important steps to moving open standard graphics forward in a major way.
by khronos member on 2008-08-24khronos member, thx for your quick response.
so , once again a whole share of new , innovative, flexible audience is left aside.
or pointed out in a different way: between the least official statement (fall last year) and the 3.0 release: how could anyone determine if khronos was indeed working on the spec or quietly dropped opengl?
more details → all contents copyright © 2012 fireuser.com.
i see that khronos member is referring to the forum.
i don't see this clear...
second, what are we getting instead?
as i said, i asked at the forums, i tried to reach the official press contact (!)
and thus , we shall continue working with an api like dx10's which is new , innovative, and rocks, and opengl3.0 will be , once again , the proprietary of those who write cad programs and professional flight simulators , like former mpi (presagis today) and companies who relay on sgi to do their work, because , believe it or not , sgi (at least these days) is heaving a little trouble finding support for new revisions of opengl.
but the complaint from grumpy seems a fundamental one: how do i make sure that all the activated features are hardware accelerated?
i can imagine a developer saying "so, why didn't you say so, you #@$**@@!"
are we going to see any structural changes to the api?
because of the developers i know, the old gl3.0 was much more of what we really wanted than this current gl2.2 (or should it be 1.8?)
if you look at the spec rewritten for human beings, ie.
you try to present the situation as you were not giving out too much information.
it does *not* clean up the api.
it was almost a year delayed, and despite all the promises, and completely contrary to the claimed goals of 3.0 (give developers a warning before removing stuff), *not a word* was spoken to developers for half a year after the change in direction for 3.0 was decided.
this is where the other webpages have picked up the outrage from.
i don't know, i just find it hilarious that khronos decided half a year ago to give up on the project they'd been getting extremely positive feedback from developers on, in order to "give developers what they really wanted"... without actually asking developers what they really wanted.
it was impossible to reach members of the group.
by anonymous on 2008-08-19you fail tom mention with any word the the entire process itself is broken entirely, mabye even beyond repair: an uncommented delay over almost a year is not acceptable.
game developers need to be hush hush to avoid creating hype.
what we wanted to see was something that would *change* this.
by liquidat on 2008-08-19grumpy: "all" the developers are furious because you're just reading tabloid magazines of the web age, where all the whiners can be found.
the entire communication was shut down - totally.
in the specs you can find then: "well, if this feature is not supported by your hardware it will be simulated in software".
by santi on 2008-08-22the frustration is understandable - as well, many team members were frustrated that longs peak had not reached a shippable state after the time invested.
lp was simply long on schedule and short on features, so it was set aside.
a "we didn't have the guts to remove this, and we won't have the guts to remove it next year, or the year after, so to avoid losing face, we'll just put this "deprecated" sticker on it instead".
the spec document is not as beautiful as it could be, but really tutorials are the ones for making stuff easily understandable, not specs.
not again...' went up from estabilished community members and opengl users as the arb failed to deliver on it's promises.
which yielded the worst of both worlds, the project direction diverged from the roadmap, yielding frustration.
as for me, my name does not need any further explanation: i speak for myself but i am active in several open source projects.
these developers were *not* looking forward to new features, but to a cleaner, saner api for working with current mainstream gpu's where they can be relatively sure of finding the fast (hardware-accelerated) path.
they first sought their target audience.
by phoenix_wrath on 2008-09-03api developers are not game developers!
and i also got an e-mail address of a board member whom i tried to contact.
gl 3.0 takes two  important steps to moving open standard graphics forward in a major way.
(y) do you enforce a controlled timeframe for deliverables (publishable spec)?
remember my personal information notify me of follow-up comments?
i don't see a roadmap.
khronos could have posted a simple newsletter back in january saying "instead of making the gl3.0 you've all stated that you love to death and are looking forward to, we're going to provide an extremely minor update which merely integrates a few extensions into the core.
the failure was in fluent communication, not in the delivery.
have a look at dx10/10.1/11, opengl does not unleash the capacity of gpu at all, so i do not like gl 3.0 a little.
by ogl enthusiast on 2008-08-27ogl enthusiast, you are aware of the ironie that you call for the real identities while you are indeed posting anonymous?
as i said, i'm not an expert, but it seems that if the api is styled in the fashion of "just tell me what you want an i give it to you!
instead, it was decided to keep developers in the dark for half a year.
however, you (the khronos group) stoppped every communication - you created the image the khronos group is not working on it any more.
by alipschitz on 2008-09-05no, alipschitz, you are not wrong.
but adding features to an api that no one who has a choice actually uses is just not going to impress.
there are two things missing here: first, *when* is it going to go away.