opengl provides a powerful, complete and generic feature set for 2d and 3d graphics operations.ggi is a project which aims to implement a graphics abstraction layer in lower level code, put graphics hardware support into a common codebase, and bring higher stability and portability to graphics applications.directplay directplay gives support for simplified networking for multiplayer gaming.direct3d, like opengl, provides a 3d graphics api.mip mapping reduces memory bandwidth requirements since the images are in hardware, but it also offers better quality in the rendered image.directplay gives support for simplified networking for multiplayer gaming.graphical console games written using the frame buffer suffer from the same deficiencies of the svga library: not all hardware is supported and the code will only run on linux.this document is a stepping stone to get the most common problems resolved and to give people the knowledge to begin thinking intelligently about what is going on with their games.while it's not officially certified (that would take more money than an open source project has), it's an almost fully compliant opengl implementation conforming to the arb specifications.xfree86 4.x provides a more centralized and self-contained approach to video.it's actually a meta-library, meaning that not only is it a graphics library which hides the details of xlib programming, it provides an easy interface for sound, music and event handling.a "real computer" provides an operating system many things, including a cpu, i/o channels, memory, a bios to provide low level access to motherboard and i/o resources, etc.this increases efficiency in writing to the video card and can speed up your graphics by 250% or more.this improves a game's visuals, but can also dramatically degrade performance.at its lowest level, it provides a platform independent (as much as that is possible in c++) way of dealing with display, sound, input, networking, files, threading and such.