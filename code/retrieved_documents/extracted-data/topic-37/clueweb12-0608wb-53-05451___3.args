"converting direct3d to opengl was like getting teeth pulled," describes ben.
they did borrow the quake ii model format for game characters, however, to avoid the work of writing their own modeling program from scratch.
while the game is nowhere near complete, egoboo's current form still has plenty of dungeon romping and monster-bashing.
the networking challenge is typical for this type of game.
"if anyone reading this ever writes a graphic program, wrap the graphics api calls in macros!" ben points out that opengl itself was not the problem in this process: "opengl has been a pleasure to work with.
it is possible for others to study the existing ai scripts and documentation, but he admits it is not easy to figure out.
in terms of its design, the inspiration for its game play draws uponnethack.
there are still some lingering problems from the conversion, though, such as our flaky support for particles.
as mentioned above, particle graphics do not rotate in the opengl version of the game like they do in the direct3d original.
in terms of its design, the inspiration for its game play draws uponnethack.
in its simpler form, it started as a direct3d windows game aaron did as an assignment for one of his college classes.
"our main problem is that we haven't gotten around to porting the network code from the original directx. i think it would be a pretty straightforward job for a competent programmer with some spare time.
he suggests that it might be best to start by contributing to the development of the original dungeon crawl, a more likely way to gain better technical insight into the engine's code.
in fact, ben says his brother has already developed some of his own: "aaron always seemed to get distracted and [would] code up new games using the egoboo engine.
other map-making tools for egoboo are also available and in development, including egomap, which adds random level generation to the game.
(when aaron started egoboo, his graphics card only supported direct3d.) related reading linux server hacks 100 industrial-strength tips and tools byrob flickenger
this game premise might sound, well, silly, but it's silly by design.
the egoboo graphics engine itself is not limited to dungeon crawlers.
in something like a real-time strategy, you might not notice if your units take a half-second to start moving.
" while the character models are done in quake ii format, egoboo uses a separate tool, developed for egoboo, calledcartman, for map generation.
figure 2 -- a peaceful outdoor scene, unless you're a sheep to those interested in modifying the egoboo code to create an entirely different type of game, bishop warns that the learning curve for the engine is pretty steep.
"converting direct3d to opengl was like getting teeth pulled," describes ben.
he had a simple real-time strategy test, as well as a bumper car game."
in something like a real-time strategy, you might not notice if your units take a half-second to start moving.
we've expanded our linux news coverage and improved our search!
the creators ofegoboo--brothers aaron and ben bishop--have aimed to make their game the most accessible and cutest open source dungeon rpg.
as is standard in dungeon adventures, game play consists of combat against monsters, spell-casting, and exploring a variety of map levels.
the original code from direct3d was a complete mess.
he had a simple real-time strategy test, as well as a bumper car game."
in the land of bishopia, king bishop has been kidnapped by evil forces.
they also credit other open source programmers specializing in graphics for contributing the help they needed to accomplish this specific task.
the graphics exhibit a japanime style; specifically, the artistic look of nintendo'slegend of zelda series is obvious.
as far as the game's ai, its scripting is specific to egoboo.
they did borrow the quake ii model format for game characters, however, to avoid the work of writing their own modeling program from scratch.
to rescue him, you must traverse dungeons in search of the "sporks of power".
"so i think egoboo is contributing by enlarging the pool of games." howard wen is a freelance writer who has contributed frequently to o'reilly network and written forsalon.com, playboy.com, and wired, among others.
the creators ofegoboo--brothers aaron and ben bishop--have aimed to make their game the most accessible and cutest open source dungeon rpg.
(when aaron started egoboo, his graphics card only supported direct3d.) related reading 100 industrial-strength tips and tools byrob flickenger
to rescue him, you must traverse dungeons in search of the "sporks of power".
so i'd like say what would get me to do a new release: a new level, significant bug fixes (networking, particles, etc.), and a good new [development] tool.
aside from the opengl and sdl apis, the rest of the codebase is original and was written in c by the bishop brothers.
the graphics exhibit a japanime style; specifically, the artistic look of nintendo'slegend of zelda series is obvious.
" in the end, ben is proudest not of the technical achievements that he, his brother, and various volunteers have made to egoboo, but, rather, the game's very place within the overall open source gaming scene.
other map-making tools for egoboo are also available and in development, including egomap, which adds random level generation to the game.
as is standard in dungeon adventures, game play consists of combat against monsters, spell-casting, and exploring a variety of map levels.
"our main problem is that we haven't gotten around to porting the network code from the original directx. i think it would be a pretty straightforward job for a competent programmer with some spare time.
as mentioned above, particle graphics do not rotate in the opengl version of the game like they do in the direct3d original.
the original code from direct3d was a complete mess.
ben says this may partly be because support for the lua language in egoboo "is not 'fully baked' as of now, from what i know."
in its simpler form, it started as a direct3d windows game aaron did as an assignment for one of his college classes.
while the game is nowhere near complete, egoboo's current form still has plenty of dungeon romping and monster-bashing.
ben, who wrote some of the ai, feels this is unfortunate because it has probably hindered further development by others who might want to help to improve it.
an extra, obvious benefit is that this decision makes customizing egoboo much easier: the mod community is full of people who are familiar with creating quake ii models.
"good open source games are few and far between," he says.
there are still some lingering problems from the conversion, though, such as our flaky support for particles.
" while the character models are done in quake ii format, egoboo uses a separate tool, developed for egoboo, calledcartman, for map generation.
"good open source games are few and far between," he says.
"so i think egoboo is contributing by enlarging the pool of games." howard wen is a freelance writer who has contributed frequently to o'reilly network and written forsalon.com, playboy.com, and wired, among others.
you choose to play as one of eight hero characters, including an elf, rogue, soldier, or wizard.
figure 2 -- a peaceful outdoor scene, unless you're a sheep to those interested in modifying the egoboo code to create an entirely different type of game, bishop warns that the learning curve for the engine is pretty steep.
ben, who wrote some of the ai, feels this is unfortunate because it has probably hindered further development by others who might want to help to improve it.
they don't rotate properly."
fixing the particle graphics is easy, says ben, but the network issue will be tougher to resolve.
aside from the opengl and sdl apis, the rest of the codebase is original and was written in c by the bishop brothers.
ben points out that opengl itself was not the problem in this process: "opengl has been a pleasure to work with.
while the game looks very good in its current form, it does not have a polished feel of a commercial game, which ben admits and wants to see improved.
egoboo features real-time action and 3d graphics.
they also credit other open source programmers specializing in graphics for contributing the help they needed to accomplish this specific task.
" the egoboo project could also use contributions of character and object models for the game and definitely needs more level maps.
so i'd like say what would get me to do a new release: a new level, significant bug fixes (networking, particles, etc.), and a good new [development] tool.
they don't rotate properly."
fixing the particle graphics is easy, says ben, but the network issue will be tougher to resolve.
it is possible for others to study the existing ai scripts and documentation, but he admits it is not easy to figure out.
you choose to play as one of eight hero characters, including an elf, rogue, soldier, or wizard.
ben says this may partly be because support for the lua language in egoboo "is not 'fully baked' as of now, from what i know."
" the egoboo project could also use contributions of character and object models for the game and definitely needs more level maps.
in fact, ben says his brother has already developed some of his own: "aaron always seemed to get distracted and [would] code up new games using the egoboo engine.
while the game looks very good in its current form, it does not have a polished feel of a commercial game, which ben admits and wants to see improved.
an extra, obvious benefit is that this decision makes customizing egoboo much easier: the mod community is full of people who are familiar with creating quake ii models.
he suggests that it might be best to start by contributing to the development of the original dungeon crawl, a more likely way to gain better technical insight into the engine's code.
" in the end, ben is proudest not of the technical achievements that he, his brother, and various volunteers have made to egoboo, but, rather, the game's very place within the overall open source gaming scene.