it is no surprise that playback of video files also falls under this category, and game developers can now use this api with ease to add fmv to their games.the advantage to this is that now developers can take advantage of this api without having to install a separate runtime.the d3dx library is very slick, containing apis to create everything from sprites, to fonts, to textures.the exact semantics of how to use this information is slightly different between opengl and direct3d. drawing discrete triangles would use this information raw and define each triangle separately.directdraw is dead, replaced completely by direct3d. direct3d is super-streamlined, and contains many new features.pixel shaders operate on pixels and can do all kinds of texture blending, noise generation, or anything else you can think of.information is slightly different between opengl and direct3d. drawing discrete triangles would use this information raw and define each triangle separately.they are simply included to simplify and unify the code base.matrix operations are very clean (especially with d3dx), and it is far easier to work with than opengl.however, the preferred way to do 2d graphics is with simple textures.surfaces have properties like resolution and color depth.the most glaring problem with directx graphics is its lack of an existing extension mechanism, like opengl’s glgetstring.since playback of video is the primary reason why a game developer would use directshow, we’ll do some code that does just that a little bit later.for both opengl and direct3d, you can specify all the vertices of a model in a huge array.using d3dx is an easy way to jump-start your development.