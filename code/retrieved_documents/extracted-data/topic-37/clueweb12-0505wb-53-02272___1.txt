then we covered the file format used to represent the data objects and the relationship of direct3d to com and its usage in the c++ and c programming languages.
the direct3d api is part of directx. - overview of direct3d - direct3d retained mode - direct3d immediate mode directx directx is a set of apis, available as com (component object model) objects.
from the figure, it is also clear that the retained mode also uses some features of directdraw.
applications can define higher-level templates using existing  lower-level or other higher-level templates.
directx  is not a single entity, but a collection of closely interacting and  interdependent applications.
a limitation of this model is that it may produce a banding effect  if the colour depth available is not very good.
due  to this, applications developed using such features will work on all hardware  platforms.
fundamentals of three dimensional computer graphics .
this method is used to query an object for its supported interface and hence the supported methods.
figure 2 shows the three modules of the  rendering engine and their interactions with the direct3d api, before  displaying the results on the rendering target, which is the 2d display  surface.
for more details on programming using sdk and using mfc, refer [9] and [10] respectively.
transformation module the transformation module is the  first of the three modules of the rendering engine.
some of the other features  include support for transparent blitting and support for overlays, for  implementing sprites and managing multiple layers of animation.
due to these guidelines, it is ensured that at least minimal support is guaranteed to the applications.
let us now consider each of the modules in a bit more detail.
to do this, it uses three four-by-four (4x4) matrices, namely theview transformation matrix, the world transformation matrix and the projection matrix.
direct3d immediate mode.
direct3d is  available to the developer as an api, using which, applications utilizing 3d  graphics can be developed much faster using a standard way.
mathematical elements for computer graphics .
file format specification, ver 1.13.microsoft corporation web page (www.microsoft.com/directx), 1997.
usually, a 3d scene is specified using a data file, which provides all the relevant information required for rendering purposes.
let us now  consider each of the modules in a bit more detail.
this file format is natively supported and used by the retained mode, which provides objects and methods to read, save and manipulate a file.
prentice hall of india, 2nd edition, 1994.
the version numbers are followed by the format  type, which can be one of the following: ``txt'' - text file ``bin'' - binary file ``com'' - compressed file
it is possible to set the states of the state registers separately, in  addition to setting the value of the composite matrix.
appendix a - this section presents a sample data file.
this 2d data is then given to the lighting  module, which calculates the light received by the data, considering the lights  in the scene.
the file format is the directx file format and has a ``.x'' extension.
net llc gamedev.net™, the gamedev.net logo, and gdnet™ are trademarks of gamedev.net, llc navigation - home - features - community - resources - careers customer service - gdnet+ subscriptions - job advertising - terms of service - privacy policy company info - about us - advertise on gamedev.net - contact us
in c++, a com interface is like an abstract base class, with all methods being pure virtual.
the components of directx are: directdraw - for 2d interactions, like fast 2d blitting (bit block  transfers), overlays, etc directsound - for incorporating soung into applications directplay - for incorporating multiple users into the applications, using  the network for communicating between the users direct3d - for incorporating 3d capabilities into applications directinput - for incorporating support for other peripherals, like  joysticks, into the applications of these components, let us  briefly cover the directdraw component, before covering the overview of  direct3d. directdraw the directdraw  component is important, as many of its features are used either directly or  indirectly by the direct3d component of directx.
this choice of using the hardware features if available, is transparent to the user.
for detailed discussions  of the retained mode and the immediate mode, refer [8] and [7] respectively.
in case a hardware platform does not support a certain feature, direct3d provides an equivalent implementation in software.
it is also called the ``xof'' file.
a restriction of this model is that only gray shades can be displayed and the textures used have to be of 8-bit depth.
by bipin patwardhan | published nov 22 2002 10:00 pm in directx and xna - article - comments (0) - revisions (4) - related stuff (25) direct3d constitutes one of the emerging apis from microsoft corporation, for providing new software features to developers, so that new and existing features of the pc can be exploited much better than is possible presently.
using animated pieces in a board-based game wit... feb 24 2012 11:17 pm | 0
this layer helps provide a unified driver model for accelerated 3d. rendering engine the rendering engine forms an important part of direct3d.
4 microsoft corporation.
template the different templates used in the file
it uses the data provided by the  transformation module and calculates the lighting information for the received  data.
the methods of the com object have to be explicitly invoked through note the explicit use of the pointer to the virtual tablelpvtbl and passing of the object itself as the first parameter in each method call.
this is done by providing a consistent interface to the hardware.
after rasterization, the data is 2d, lit using the different lights in the scene and may also have the specified texture maps applied to them.
hardware independence is guaranteed by directx, by providing requirement guidelines to all hardware vendors.
bipin patwardhan national centre for software technology, juhu, mumbai, india.
the file format is the  directx file format and has a ``.x'' extension.
the directdraw component is implemented in hardware and software.
figure 1: place of direct3d from figure 1, it is clear that the retained mode uses the immediate mode, transparent to the developer using the retained mode.
direct3drmcreate(&lpd3drm);
6 donald hearn and pauline baker.
the direct3d api is  part of directx. directx directx is a  set of apis, available as com (component object model) objects.
additionally, the time spent in developing such well known and well defined techniques is saved, helping in developing applications faster transparent access to hardware acceleration - is one of the very important features of direct3d, which uses the hardware support, if available.
direct3d is used to develop real-time, interactive, 3d applications.
directx provides a standard, robust platform to application developers, by guaranteeing hardware independence.
directdraw objects an application using directdraw, uses two objects, namely directdraw and directdrawsurface.
data this part contains the actual object information.
this effect is produced when the  number of pixels available for representing the colours is far less than the  number of colours actually required by the application to display the data  properly.
additionally,  the newer versions of directx make use of mmx technology.
the hal protects the  application from the differences of the different hardware.
when com objects are used through c++, thequeryinterface method returns a pointer to the virtual table and the different methods supported by the object can be accessed directly.
all of the features of direct3d are built on top of the hal, which provides hardware independence and makes applications portable.
the diagram shows the sequence of operations performed on the data,  before it is displayed.
com interface all the functions supported by a com object are available as interfaces of that object.
by providing a consistent interface across all hardware platforms, taking care of incompatibilities is shifted away from the application developer, resulting in less code and hence faster development.
direct3d is available to the developer as an api, using which, applications utilizing 3d graphics can be developed much faster using a standard way.
applications can also make use of additional objects like directdrawpalette and directdrawclipper.
another motivating factor for choosing these two languages is the comfort level of the authors, in using these languages.
an  advantage of this model over the rgb model is that it gives better performance  than the rgb model.
it is  compulsory at the beginning of the file.
the hel is a companion of direct3d and provides software emulation for the features of the 3d rendering pipeline, not supported by the hardware.
for  developing these applications, direct3d provides the following features: device independence - helps shield the applications from the vagaries of the  different hardware platforms.
the name is followed by the uuid (universally unique identifier) of the com object to be used to read this template when it is encountered.
the directx set has been developed keeping this need for high performance  in mind, and it provides a standard, robust platform for developing such  applications.
this module uses one more state register, the viewport, for holding the dimensions of the 2d display area.
rasterization module for more details on the direct3d api and its features, refer [3] and [2].
a restriction of this model is that only gray  shades can be displayed and the textures used have to be of 8-bit depth.
applications developed using direct3d are scalable as a  part or whole of the 3d rendering pipeline can be in the hardware and direct3d  can make use of it, if it is detected.
an important point about this module is that it renders only clockwise oriented triangles.
jump to content search advanced - home - for beginners - technical - game programming - general programming - graphics programming and theory - directx and xna - opengl - multiplayer and network programming - artificial intelligence - math and physics - mobile & console development - apis and tools - creative - game design - writing for games - music and sound - visual arts - gallery - business - breaking into the industry - business & law - production & management - community - forums - developer journals
introduction to computer graphics.
the transformation module combines all the matrices into one composite matrix and uses this for computations, as using only one matrix, as opposed to four, speeds up the calculations in the application.
a template is specified using a skeleton, as shown in figure 6.
3 microsoft corporation.
for detailed discussions of the retained mode and the immediate mode, refer [8] and [7] respectively.
a data file can be split into three parts, namely: header, template and data.
directdraw improves performance by providing support  for 2d functions of the applications.
microsoft corporation, 1997.
though this model supports multiple light sources, the colour components of the  lights are ignored.
whenever a com object is used, its reference count is incremented by one.
the developer is not made aware of this usage.
2 microsoft corporation.
- gdnet+ subscriptions - gallery - books - calendar - store - classifieds - job offers - contractors for hire - contract projects - hobbyist projects - marketplace - search section: - google - forums - members - help files - developer journals - gallery - calendar - downloads - resources - store - classifieds - tracker watched content new content - articles - »
in the banding effect, the transition from one colour to another, is not smooth.
hardware independence is guaranteed by directx, by providing requirement  guidelines to all hardware vendors.
though this model supports multiple light sources, the colour components of the lights are ignored.
a template has a name, which is used to identify the data type being read, when it is encountered.
the present applications,  written in dos, have to take care of the different hardware configurations,  making them quite configuration specific and harder to port to different  configurations.
for an explanation of these three matrices, refer [5], [6], [11], [12], [13] and [14].
the lit data is then given to the rasterization module, which calculates the transparency and applies the texture to the data.
comments peter molyneux: how to get a job in games devel... feb 24 2012 11:17 am | 0
the hal protects the application from the differences of the different hardware.
- ``lzw'' - lzw compression algorithm - `
the transformation module combines all the matrices  into one composite matrix and uses this for computations, as using only one  matrix, as opposed to four, speeds up the calculations in the application.
some of the other features include support for transparent blitting and support for overlays, for implementing sprites and managing multiple layers of animation.
these apis  provide objects and functions for developing real-time, high-performance  applications on the windows platform.
the reference count is decremented by one, when the object is released, using therelease method.
sdk (ver 3.0, 5.0) reference .
the data file specifies a cube.
for developing these applications, direct3d provides the following features: device independence - helps shield the applications from the vagaries of the different hardware platforms.
[restrictions] } figure 6: template specification skeleton
figure 4 shows a diagrammatic representation of the lighting module.
the feature of instancing allows reference to an data set, if it is required at multiple places, instead of replicating all the data elements.
procedural elements for computer graphics.
it also provides fast access to a blitting (bit block transfer) and buffer flipping.
view->lpvtbl->release(view)
what this means is that a com object can be used irrespective of the language being used for developing the application requiring 3d capabilities.
using these languages does not change the way we use com objects for incorporating 3d content into our applications.
place figure 1 shows the different parts of  direct3d, in relation to the other modules of a win32 system.
- is the other model supported by the lighting module of the rendering engine.
though many of the existing programs for 3d graphics on the windows platform talk to the different parts directly, it is envisaged that the directdraw and direct3d components of directx will be incorporated into future versions of win32 systems.
place figure 1 shows the different parts of direct3d, in relation to the other modules of a win32 system.
microsoft press, 1st edition, 1997.
direct3d  is used to develop real-time, interactive, 3d applications.
due to this, the complexity of software development is reduced and the incompatibilities between the hardware platforms is neutralized as far as possible.
comments 3d animation techniques with xna game studio 4.0 feb 23 2012 02:40 pm | 0
it is responsible for taking a scene definition in  terms of points in 3d, the different texture specifications, the lights and the  camera specifications, and rendering ready, so that it can be displayed on the  display device.
though direct3d does not provide a file format for specifying whole  scenes, it provides a file format to specify a 3d mesh object that can be  placed in a scene.
a template is specified using  a skeleton, as shown in figure 6.
applications can define higher-level templates using existing lower-level or other higher-level templates.
it is possible to set the states of the state registers separately, in addition to setting the value of the composite matrix.
on being given the execute call, the module goes through the list of vertices to be displayed and generates the transfomed vertices to be rendered.
the triangles whose surface normals face away from the camera.
comments getting started with audacity feb 24 2012 10:04 pm | 0
at the end of drawing, the screen is updated by flipping the back and the  front buffers.
it also provides fast access to  a blitting (bit block transfer) and buffer flipping.
though many languages can be used with com objects the languages we briefly cover are the c programming language and the c++ programming language.
appendix a this section presents a sample data file.
after  rasterization, the data is 2d, lit using the different lights in the scene and  may also have the specified texture maps applied to them.
it is also extensible and new templates  can be added very easily.
in this tutorial, we have seen that direct3d is one of the components of directx and is an api for 3d graphics programming.
the version numbers are followed by the format type, which can be one of the following: if the file is a compressed file, the compression type is specified following the format type.
an object is a valid candidate for garbage collection, when its reference count becomes zero.
as the information available on direct3d is quite a lot, we will present the information on direct3d using three tutorials, with each covering a different aspect of direct3d.
the application developer only has to put the detection facility into the application, which will allow it to query the hardware to find and use its capabilities, if present.
most of the objects and interfaces in directx are based on com and many of the directx apis are instantiated as a set of ole objects.
the primary motivation for developing these libraries is that the performance of existing windows applications catering to graphics intensive application like games and multimedia is very poor in comparison to the same applications developed on dos.
figure 3: transformation module lighting module the lighting module of the rendering engine  is the second of the three modules.
common usage a standard method of using directdraw is given below: - create the front buffer and back buffer (to exchange the images) - images to be displayed are written to the back buffer, instead of directly to the screen - at the end of drawing, the screen is updated by flipping the back and the front buffers.
due to this, the complexity  of software development is reduced and the incompatibilities between the  hardware platforms is neutralized as far as possible.
we mentioned the different modes in which direct3d can be operated, namely the retained mode and the immediate mode.
these numbers can be used to take care of versioning problems in data files, if required.
these apis provide objects and functions for developing real-time, high-performance applications on the windows platform.
email: bipin@ncst.ernet.in compare revision date title editor 4 jun 29 2011 06:12 am an overview of direct3d gaiiden 3 jun 29 2011 06:10 am an overview of direct3d gaiiden 2 jun 29 2011 06:10 am an overview of direct3d gaiiden 1 jun 29 2011 05:53 am an overview of direct3d gaiiden
addison wesley, 1989.
windows 95 programming.
this interface provides three methods, namelyaddref, queryinterface and release.
we are considering these two languages as they are the part of the primary languages being used to develop applications and that the differences between using these languages though not being very major, are significant.
the file format allows storage of predefined object  meshes, texture and animations, in addition to allows storage of user defined  objects.
the three  tutorials are: overview of direct3d direct3d retained mode direct3d immediate mode
the developer is not made  aware of this usage.
the retained mode is a high-level interface, while the immediate mode is a lower-level interface to the features of direct3d.
let us now consider the details of the file format.
it is as if two different  coloured bands have been placed side-by-side.
the features of direct3d are available to the user in two different ways.
the  application developer only has to put the detection facility into the  application, which will allow it to query the hardware to find and use its  capabilities, if present.
this module handles the  geometry transformations in the rendering engine.
a possible restriction on direct3d is the tight restriction with directx and its different components.
as a result of this, applications become  independent of the hardware platform and hence become more portable common driver model to hardware - guarantees to applications, that all the drivers supporting  direct3d will support a defined minimal set of features and capabilities.
the two  modes are discussed in details in separate tutorials.
any system providing 3d, will have to use direct3d  to provide its own features.
it provides direct access to the off screen bitmaps, making access faster.
comments - peter molyneux: how to get a job in games devel... feb 24 2012 11:17 am | 0
each of these modules can be  hardware accelerated, transparent to the user of the application.
the member list can be followed by an optional list of restrictions that need to be observed while reading the data or creating the data structure to hold the read data.
a template defines how a data stream is to be  interpreted by the reader of the file.
developing a mobile application with flash video game localisation - a tricky game comparing shadow mapping techniques with shadow explorer new incentives and a whole new platform from the intel appup developer program autodesk previews a games production solution 3d in photoshop: the ultimate guide for creative professionals getting your app on intel appup: porting "ancient frog" why appup?
in addition to these features, direct3d provides a fast software based rendering of the full 3d rendering pipeline.
lpd3drm->lpvtbl->createviewport(lpd3drm, device, camera, 0, 0, width, height, &view); . .
additionally, the time spent in developing such well  known and well defined techniques is saved, helping in developing applications  faster transparent access to hardware acceleration - is one of the very important features of direct3d, which uses  the hardware support, if available.
comments - introducing xcode tools for iphone development feb 21 2012 09:39 pm | 0
comments introducing xcode tools for iphone development feb 21 2012 09:39 pm | 0
the compression type can be one of the following: - ``txt'' - text file - ``bin'' - binary file - ``com'' - compressed file the compression type is followed by 4 digits, which indicate the number of bits used to represent floating point numbers.
though we have said until now that  direct3d can be used to display 3d data and though it is possible to generate  3d data on the fly, it is very difficult and restrictive to store information  of various complex models and scenes, typically used in 3d systems, directly  inside the application.
additionally, direct3d provides a specification to all hardware developers, which help their cards support the various direct3d features.
it uses the data provided by the transformation module and calculates the lighting information for the received data.
each of the parts is  described in the following sections.
the header part contains information which helps identify the file.
- event coverage - breaking into the industry - business and law - interviews - production and management recent resources - using animated pieces in a board-based game wit... feb 24 2012 11:17 pm | 0
this module handles the geometry transformations in the rendering engine.
the three matrices are maintained in three state registers, namely the viewing  matrix, the world matrix and the projection matrix, respectively.
the primary motivation for  developing these libraries is that the performance of existing windows  applications catering to graphics intensive application like games and  multimedia is very poor in comparison to the same applications developed on  dos.
figure 2: rendering engine modules the  3d data to be displayed, is given to the transformation module, which maps the  3d data onto its equivalent 2d data.
notice that we are not calling theaddref explicitly, but we are calling the release method, after using the com object.
the directdraw object represents the display adapter card.
the  two models supported are: monochromatic model - also known as the ramp model.
each of these modules can be hardware accelerated, transparent to the user of the application.
rasterization module a limitation of this model is that it may produce a banding effect if the colour depth available is not very good.
though we have said until now that direct3d can be used to display 3d data and though it is possible to generate 3d data on the fly, it is very difficult and restrictive to store information of various complex models and scenes, typically used in 3d systems, directly inside the application.
layers direct3d uses two layers, namely the hardware abstraction layer (hal) and the hardware emulation layer (hel).
this model uses only the gray component of each light source specified in the scene, to calculate a single shade value.
the file format allows storage of predefined object meshes, texture and animations, in addition to allows storage of user defined objects.
the data part can either store actual data or a reference to the data.
this layer is tightly integrated with the directdraw  hal and the graphics device interface (gdi) driver of the win32 system.
the application, at runtime can detect the hardware capabilities and use them if present
addison wesley, 2nd edition, 1993.
additionally, the newer versions of directx make use of mmx technology.
as we mentioned before, direct3d is one  of the apis in a set, available for application development.
} figure 7: data format skeleton sample data file a sample data file, to help understand the file format is presented in appendix a. directx and com before we conclude the overview on direct3d, we would like to briefly comment in the relationship between directx and the component object model (com), and its usage.
the directdrawsufrace object represents the display memory, on which the data to be displayed is rendered.
the functionality of the rendering engine is provided using three modules, namely thetransformation module, the lighting module and the rasterization module.
due to these guidelines, it is ensured that  at least minimal support is guaranteed to the applications.
it is the responsibility of the application to callrelease, after its work with the com object is over.
common usage a standard method of using directdraw is given  below: create the front buffer and back buffer (to exchange the images) images to be displayed are written to the back buffer, instead of directly  to the screen
a possible restriction on  direct3d is the tight restriction with directx and its different components.
applications can also make use of additional  objects like directdrawpalette and directdrawclipper.
comments - getting started with audacity feb 24 2012 10:04 pm | 0
the module also culls back-facing triangles, viz.
3d computer graphics.
transformation module the transformation module is the first of the three modules of the rendering engine.
iunknown to allow a component user to query for an interface, all com objects have to be derived from the standardiunknown interface.
figure 4 shows a diagrammatic representation of the  lighting module.
this model helps produce more realistic effects of the given scene, as it uses the full colour content of the light sources and the material of the object being lit.
this module takes only execute calls and the data and displays it onto the display surface.
for developing applications using direct3d on windows, knowledge of windows programming using the sdk or mfc is necessary.
technical - » directx and xna - » article: an overview of direct3d categories (see all) - technical - game programming - general programming - graphics programming and theory - directx and xna - opengl - multiplayer and network programming - artificial intelligence - math and physics - mobile development - apis and tools - creative - game design - music and sound - visual arts - business
the three tutorials are: as we mentioned before, direct3d is one of the apis in a set, available for application development.
it is compulsory at the beginning of the file.
the compression type is followed by 4 digits, which  indicate the number of bits used to represent floating point numbers.
follow the header information.
any system providing 3d, will have to use direct3d to provide its own features.
all this information is used while calculating the light falling at a particular point in the scene.
an important point about this module  is that it renders only clockwise oriented triangles.
this layer is tightly integrated with the directdraw hal and the graphics device interface (gdi) driver of the win32 system.
by providing a consistent interface across all hardware  platforms, taking care of incompatibilities is shifted away from the  application developer, resulting in less code and hence faster development.
on being given the execute call, the module goes  through the list of vertices to be displayed and generates the transfomed  vertices to be rendered.
the data file specifies a cube xof 0302txt 0064 template header {  word major; word minor; dword flags; } template vector {  float x; float y; float z; } template coords2d {  float u; float v; } template matrix4x4 {  array float matrix[16]; } template colorrgba {  float red; float green; float blue; float alpha; } template colorrgb {  float red; float green; float blue; } template indexedcolor {  dword index; colorrgba indexcolor; } template boolean {  word truefalse; } template boolean2d {  boolean u; boolean v; } template materialwrap {  boolean u; boolean v; } template texturefilename {  string filename; } template material {  colorrgba facecolor; float power; colorrgb specularcolor; colorrgb emissivecolor; [...] } template meshface {  dword nfacevertexindices; array dword facevertexindices[nfacevertexindices]; } template meshfacewraps {  dword nfacewrapvalues; boolean2d facewrapvalues; } template meshtexturecoords {  dword ntexturecoords; array coords2d texturecoords[ntexturecoords]; } template meshmateriallist {  dword nmaterials; dword nfaceindexes; array dword faceindexes[nfaceindexes]; [material] } template meshnormals {  dword nnormals; array vector normals[nnormals]; dword nfacenormals; array meshface facenormals[nfacenormals]; } template meshvertexcolors {  dword nvertexcolors; array indexedcolor vertexcolors[nvertexcolors]; } template mesh {  dword nvertices; array vector vertices[nvertices]; dword nfaces; array meshface faces[nfaces]; [...] } template frametransformmatrix {  matrix4x4 framematrix; } template frame {  [...] } header { 1; 0; 1; } material x3ds_mat_green_0_ { 0.000000, 0.666667, 0.000000, 1.000000;; 15.000000; 0.874510, 1.000000, 0.839216;; 0.00, 0.00, 0.00;; } frame x3ds_cube { mesh cube { 8; -40.000000; -30.000000; -49.999996;, 40.000000; -30.000000; -49.999996;, 40.000000; 29.999998; -50.000000;, -40.000000; 29.999998; -50.000000;, -40.000000; -30.000000; 50.000000;, 40.000000; -30.000000; 50.000000;, 40.000000; 30.000000; 50.000000;, -40.000000; 30.000000; 50.000000;; 12; 3;0,2,1;, 3;0,3,2;, 3;0,5,4;, 3;0,1,5;, 3;1,6,5;, 3;1,2,6;, 3;2,7,6;, 3;2,3,7;, 3;3,4,7;, 3;3,0,4;, 3;4,6,7;, 3;4,5,6;; meshmateriallist { 1; 12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; {x3ds_mat_green_0_} } meshnormals { 24; 0.000000;-0.000000;-1.000000;, 0.000000;-1.000000;0.000000;, -1.000000;0.000000;0.000000;, 0.000000;-0.000000;-1.000000;, 0.000000;-1.000000;0.000000;, 1.000000;0.000000;0.000000;, 0.000000;-0.000000;-1.000000;, 1.000000;0.000000;0.000000;, -0.000000;1.000000;-0.000000;, 0.000000;-0.000000;-1.000000;, 0.000000;1.000000;-0.000000;, -1.000000;0.000000;0.000000;, 0.000000;-1.000000;0.000000;, -1.000000;0.000000;0.000000;, 0.000000;0.000000;1.000000;, 0.000000;-1.000000;0.000000;, 1.000000;0.000000;0.000000;, 0.000000;0.000000;1.000000;, 1.000000;0.000000;0.000000;, -0.000000;1.000000;-0.000000;, 0.000000;0.000000;1.000000;, -0.000000;1.000000;-0.000000;, -1.000000;0.000000;0.000000;, 0.000000;0.000000;1.000000;; 12; 3;0,6,3;, 3;0,9,6;, 3;1,15,12;, 3;1,4,15;, 3;5,18,16;, 3;5,7,18;, 3;8,21,19;, 3;8,10,21;, 3;11,13,22;, 3;11,2,13;, 3;14,20,23;, 3;14,17,20;; } } } 1 kraig brockschmidt.
microsoft corporation, 1996-97.
for more details on com and its usage with other languages, refer [1].
the file format allows specification of fixed path animations and also supports instancing of objects, which helps in reuse of data sets and hence reducing the total size of the object being manipulated.
figure 5 shows a diagrammatic representation of the rasterization module.
this shade value is the diffuse component.
for an  explanation of these three matrices, refer [5], [6], [11], [12], [13] and [14].
rgb model - is the other model supported by the lighting module of the  rendering engine.
figure 5 shows  a diagrammatic representation of the rasterization module.
directx is based on the principles of com, which allow us to develop and distribute the required functionality, packaged as components or objects.
comments producer consumer using double queues feb 22 2012 09:13 am | 0
after this flipping operation, the back buffer becomes the current front buffer while the front buffer becomes the current back buffer direct3d after taking a brief look at the capabilities of directdraw, let us come to the overview of direct3d. introduction direct3d, is part of directx and is the component that helps us integrate 3d into windows applications.
this model supports multiple coloured light sources.
lpdirect3drmdevice dev; // direct3drm device // viewport through which the scene is viewed lpdirect3drmviewport view; lpdirect3drmframe camera; // camera . . .
this module  uses one more state register, the viewport, for holding the dimensions of the  2d display area.
this module takes only execute calls and the data and displays it onto the  display surface.
this effect is produced when the number of pixels available for representing the colours is far less than the number of colours actually required by the application to display the data properly.
all data objects have to belong to one of the templates specified after the header.
the retained mode is a high-level interface, while the  immediate mode is a lower-level interface to the features of direct3d.
clipping parameters can also be specified in this module.
the components of directx are: directdraw - for 2d interactions, like fast 2d blitting (bit block transfers), overlays, etc directsound - for incorporating soung into applications directplay - for incorporating multiple users into the applications, using the network for communicating between the users direct3d - for incorporating 3d capabilities into applications directinput - for incorporating support for other peripherals, like joysticks, into the applications of these components, let us briefly cover the directdraw component, before covering the overview of direct3d. directdraw the directdraw component is important, as many of its features are used either directly or indirectly by the direct3d component of directx.
directdraw is the only  client of the directdraw hardware abstraction layer (hal).
also, its performance as compared to the monochromatic model may be  less rasterization module the  rasterization module is the last of the three modules of the rendering engine.
all these features help in drastically improving the performance of the windows applications as compared to windows applications written without such support.
all com objects work on the principle of reference counting.
to do this, it uses three  four-by-four (4x4) matrices, namely theview transformation matrix, the world transformation matrix and the projection matrix.
directx provides a standard, robust platform to  application developers, by guaranteeing hardware independence.
an advantage of this model over the rgb model is that it gives better performance than the rgb model.
the application, at runtime can detect the hardware  capabilities and use them if present
all  these features help in drastically improving the performance of the windows  applications as compared to windows applications written without such support.
by bipin patwardhan | published nov 22 2002 10:00 pm in directx  and xna article revisions (4) related stuff (25) direct3d constitutes one of the  emerging apis from microsoft corporation, for providing new software features  to developers, so that new and existing features of the pc can be exploited  much better than is possible presently.
mcgraw-hill book company, 1st edition, 1985.
layers direct3d uses two layers, namely the hardware abstraction layer (hal) and the  hardware emulation layer (hel).
but, it is advisable to  let direct3d calculate the composite matrix, as the matrix multiplication  operations required, have been specially optimized in direct3d.
we saw that the rendering engine of direct3d consists of three modules, namely the transformation module, the lighting module and the rasterization module.
comments how we built an ios game on pc feb 23 2012 07:07 pm | 0
the diagram shows the sequence of operations performed on the data, before it is displayed.
the compression type  can be one of the following: ``lzw'' - lzw compression algorithm ``zip''
; a few points to be remembered while using com objects through c are: notes on programming - the first parameter of each method call on an object, has to refer to the object on which the methods is being invoked - each method of an object has to be explicitly accessed through the pointer to the virtual table (lpvtbl)
this function returns a pointer to the direct3drm (direct3d retained mode) object, which provides different methods like creation of a viewport, loading a mesh, etc.
com advantage an advantage that we get by using com is that we can have language independence between the com object and its users.
the triangles whose  surface normals face away from the camera.
from the figure, it is also clear that the retained mode  also uses some features of directdraw.
as the information available  on direct3d is quite a lot, we will present the information on direct3d using  three tutorials, with each covering a different aspect of direct3d.
in addition to these  features, direct3d provides a fast software based rendering of the full 3d  rendering pipeline.
though direct3d does not provide a file format for specifying whole scenes, it provides a file format to specify a 3d mesh object that can be placed in a scene.
usually, a 3d scene is specified using a data file,  which provides all the relevant information required for rendering purposes.
c++ and com code written c++ and com is less complex that equivalent code written in c and com.
the retained mode, the immediate mode and the direct3d hal, together, constitute the direct3d component of directx.
the retained mode, the immediate mode  and the direct3d hal, together, constitute the direct3d component of directx.
applications using  directdraw only communicate with directdraw and cannot access the hal directly  or indirectly.
the directx set has been developed keeping this need for high performance in mind, and it provides a standard, robust platform for developing such applications.
applications using directdraw only communicate with directdraw and cannot access the hal directly or indirectly.
all of the features of direct3d are  built on top of the hal, which provides hardware independence and makes  applications portable.
the header consists of a magic number (``xof''), which identifies the file and the major and minor version numbers of the file.
directx is not a single entity, but a collection of closely interacting and interdependent applications.
the hel is a companion of direct3d and  provides software emulation for the features of the 3d rendering pipeline, not  supported by the hardware.
figure 2 shows the three modules of the rendering engine and their interactions with the direct3d api, before displaying the results on the rendering target, which is the 2d display surface.
lpdirect3drm lpd3drm; // direct3d object in this sample, the queryinterface method is being invoked for us by the direct3drmcreate function.
the two modes are discussed in details in separate tutorials.
but, it is advisable to let direct3d calculate the composite matrix, as the matrix multiplication operations required, have been specially optimized in direct3d.
this api gives hardware independence in addition to transparent hardware acceleration and a fast software based emulation for missing hardware implementations of the rendering pipeline.
an interface is nothing but a group of related functions.
the lit data is then given to the rasterization module, which  calculates the transparency and applies the texture to the data.
programming using mfc.
figure 1: place of direct3d from  figure 1, it is clear that the retained mode uses the immediate mode,  transparent to the developer using the retained mode.
figure 3: transformation module lighting module the lighting module of the rendering engine is the second of the three modules.
in the banding effect, the  transition from one colour to another, is not smooth.
the uuid is followed by a list of members of the template.
the  directdrawsufrace object represents the display memory, on which the data to be  displayed is rendered.
if an interface is supported by an object, a reference is returned, which in turn can be used to access the different methods provided in the interface.
as a result of this, applications become independent of the hardware platform and hence become more portable common driver model to hardware - guarantees to applications, that all the drivers supporting direct3d will support a defined minimal set of features and capabilities.
additionally, direct3d provides a specification to all hardware  developers, which help their cards support the various direct3d features.
figure 4: lighting module the lighting module can be operated in any one of the two lighting models it supports.
after getting a pointer to the interface, the application can call specific methods from the interface, to get its job done.
figure 3 shows a diagrammatic representation of the transformation module.
the present applications, written in dos, have to take care of the different hardware configurations, making them quite configuration specific and harder to port to different configurations.
this model helps produce more realistic effects of the given  scene, as it uses the full colour content of the light sources and the material  of the object being lit.
addison wesley, 1994.
this file format is natively supported and used by the retained mode,  which provides objects and methods to read, save and manipulate a file.
applications developed using direct3d are scalable as a part or whole of the 3d rendering pipeline can be in the hardware and direct3d can make use of it, if it is detected.
view->release(); c and com a major difference between using c and c++ and com is that thequeryinterface method does no return a pointer to the virtual table, when com objects are used through c. the methods of the com object have to be explicitly invoked through the virtual table as is illustrated in the sample code in source listing 2.
articles - » technical - » directx and xna - » article: an overview of direct3d partners - - mark community read - - forums - developer journals - gallery - downloads - resources - store - classifieds - tracker - mark all as read - help copyright © 1999-2012 gamedev.
the directdraw  component is implemented in hardware and software.
the header consists of a magic number  (``xof''), which identifies the file and the major and minor version numbers of  the file.
each data object is read using a corresponding template object.
it is also called the ``xof''  file.
the supported features can be accessed by asking for a specific interface from the com object.
applications using these features will see a boost in performance eases addition of 3d to applications - as direct3d provides a standard mechanism and a standard set of  algorithms for 3d graphics, applications requiring such features can be  developed much faster.
directdraw is the only client of the directdraw hardware abstraction layer (hal).
due to this, applications developed using such features will work on all hardware platforms.
applications using these features will see a boost in performance eases addition of 3d to applications - as direct3d provides a standard mechanism and a standard set of algorithms for 3d graphics, applications requiring such features can be developed much faster.
the two models supported are: monochromatic model - also known as the ramp model.
figure 4: lighting module the lighting  module can be operated in any one of the two lighting models it supports.
the user of a component has to query the component for an interface.
comments show more » | view all recent resources» an overview of direct3d
the sample in source listing 1 illustrates the usage of com objects through c++.
let us now  consider the details of the file format.
the data is specified using a template skeleton, as illustrated in figure 7.
it is as if two different coloured bands have been placed side-by-side.
this choice of using the hardware features if available, is  transparent to the user.
rasterization module for  more details on the direct3d api and its features, refer [3] and [2].
figure 2: rendering engine modules the 3d data to be displayed, is given to the transformation module, which maps the 3d data onto its equivalent 2d data.
a template defines how a data stream is to be interpreted by the reader of the file.
the file format allows specification of fixed path animations and also  supports instancing of objects, which helps in reuse of data sets and hence  reducing the total size of the object being manipulated.
these numbers can be used to take care of versioning problems in data  files, if required.
this model uses  only the gray component of each light source specified in the scene, to  calculate a single shade value.
microsoft press, 2nd edition, 1995.
this module maintains a stack of the current lights and the ambient light level and the different material properties of the data.
the three matrices are maintained in three state registers, namely the viewing matrix, the world matrix and the projection matrix, respectively.
these are through the two modes of direct3d, namely: the retained mode and the  immediate mode.
typically, directx provides one object per device.
the virtual table as is illustrated below lpdirect3drm lpd3drm; // direct3d object lpdirect3drmdevice dev; // direct3drm device // viewport through which the scene is viewed lpdirect3drmviewport view; lpdirect3drmframe camera; // camera . .
microsoft press, 1st edition, 1996.
directdraw objects an application  using directdraw, uses two objects, namely directdraw and directdrawsurface.
this file format is template driven and is  architecture neutral and context free.
direct3d retained mode.
intel developers conference, aug-sep 97.
both c++ and com use virtual tables (vtable) for pure virtual functions.
this module maintains a stack of the current lights and the  ambient light level and the different material properties of the data.
though many of the existing programs for 3d graphics on the windows  platform talk to the different parts directly, it is envisaged that the  directdraw and direct3d components of directx will be incorporated into future  versions of win32 systems.
this is done by  providing a consistent interface to the hardware.
5 foley and van damm.
a data file can be split  into three parts, namely: header, template and data.
it provides direct access to the off  screen bitmaps, making access faster.
comments - producer consumer using double queues feb 22 2012 09:13 am | 0
if the interface is supported, queryinterface returns a pointer to the interface and calls addref to increment the reference count on the com object.
all this  information is used while calculating the light falling at a particular point  in the scene.
clipping parameters can also be specified in this  module.
this file format is template driven and is architecture neutral and context free.
in case a hardware platform does not  support a certain feature, direct3d provides an equivalent implementation in  software.
also, its performance as compared to the monochromatic model may be less the rasterization module is the last of the three modules of the rendering engine.
these are through the two modes of direct3d, namely: the retained mode and the immediate mode.
this  layer helps provide a unified driver model for accelerated 3d. rendering engine the rendering engine forms an  important part of direct3d.
after this flipping operation, the back buffer becomes the  current front buffer while the front buffer becomes the current back buffer direct3d after taking a brief look  at the capabilities of directdraw, let us come to the overview of direct3d. introduction direct3d, is part of directx and  is the component that helps us integrate 3d into windows applications.
if the file is a compressed file, the  compression type is specified following the format type.
it is also extensible and new templates can be added very easily.
comments - how we built an ios game on pc feb 23 2012 07:07 pm | 0
a quick review of the appup model
the functionality of the rendering engine is provided  using three modules, namely thetransformation module, the lighting  module and the rasterization module.
this 2d data is then given to the lighting module, which calculates the light received by the data, considering the lights in the scene.
`zip'' template the different templates used in the file follow the header information.
national centre for software technology, mumbai, india, aug-sep 1997.
mcgraw-hill book company, 2nd edition, 1990.
the game maker's companion interview with firelight technologies learning ios game programming real-time dynamic fur on the gpu a super simple method for creating infinite scenery a type-safe generic pointer a collection of examples of 64-bit errors in real programs - »
this referencing is used for the feature of instancing, supported by the file format.
figure 3  shows a diagrammatic representation of the transformation module.
direct3d reference manual.
it is responsible for taking a scene definition in terms of points in 3d, the different texture specifications, the lights and the camera specifications, and rendering ready, so that it can be displayed on the display device.
comments - 3d animation techniques with xna game studio 4.0 feb 23 2012 02:40 pm | 0
lpd3drm->createviewport(device, camera, 0, 0, width, height, &view);
directdraw improves performance by providing support for 2d functions of the applications.
each of the parts is described in the following sections.