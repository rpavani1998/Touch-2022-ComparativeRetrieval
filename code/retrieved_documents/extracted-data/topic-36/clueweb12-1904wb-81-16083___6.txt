and the most ironic thing  is, you're left on your own to choose the best plugin.
netbeans does have a plugin support,  but the plug-in base is nothing compared to netbeans.
it has millions of  plugins, though not all of them work well.
netbeans seem to provide everything i use  out-of-the-box.
intellij looks shitty, but i has the best  auto-compile and refactoring feature available out the.
netbeans however, is much more programmer oriented, and let's the ide to shape itself how you think, instead of shaping your thoughts to match the ide.
for example, if you want to create a jsf  project, you can't do it using j2ee project.
netbeans doesn't have any file import feature.
because it's easier to use for me.
tried  intellij and oracle jdeveloper once, but jdeveloper is slow even in my pc (c2q  q9550 2.83ghz, 4gb, intel g45).
the full netbeans package is 380mb with all the bells and whistle, which supports pretty much anything out of the box, but the full eclipse package (eclipse doesn't have an official full package, so created a package with similar functionalities as netbeans full package), well, about 1.3 gb.
netbeans has an excellent swing gui designer (matisse).
so if you're doing a  highly customized job, eclipse will be your only choice.
there's no clear winner here.
there are so many plugins for one task that the programmer is left confused.
for example, if you want  to develop android applications, eclipse may be your only choice.
there are so many plugins  for one task that the programmer is left confused.
netbeans vs eclipse – which one is better?
the setup of eclipse will have specific instructions from the it support people.
eclipse has a better refactoring support.
so i'm gonna  post some opinions about eclipse and netbeans focusing on some specific  criteria.
i'd  say its second only to firefox, which is not a ide at all.
the full netbeans  package is 380mb with all the bells and whistle, which supports pretty much  anything out of the box, but the full eclipse package (eclipse doesn't have an  official full package, so created a package with similar functionalities as  netbeans full package), well, about 1.3 gb.
really, the issues with eclipse are more it-oriented than development-oriented.
if you trying to develop a web application in netbeans 6.8 and build and rebuild it so many times.
you'll have to open a dynamic web  project to do this.
but the official packages are extremely stable.
these tool oriented view is sometimes very confusing.
on the other hand, netbeans loads all of them pretty effortlessly.
i'd say its second only to firefox, which is not a ide at all.
unfortunately it wasn't  free and the trial expired so i didn't get to test it that well.
of-course, sometimes the third-party plugins may cause it to crash.
it's essentially built on a plug-in oriented architecture.
so if you try to rename something, it won't mess up your whole code.
eclipse is by far the best ide in terms of  plug-in support.
tried intellij and oracle jdeveloper once, but jdeveloper is slow even in my pc (c2q q9550 2.83ghz, 4gb, intel g45).
so if you need a custom build-file, but don't know ant scripting,  you're in trouble.
netbeans however, is much more programmer oriented, and let's the ide to shape  itself how you think, instead of shaping your thoughts to match the ide.
it's very annoying sometimes.
netbeans however,  requires much less configuring, and in most of the cases, it configures itself,  and configures itself correctly.
© 2012 code explosion's blog.
so i'm gonna post some opinions about eclipse and netbeans focusing on some specific criteria.
give both of them a try, and use the one you like the most.
enter your email address to subscribe to this blog and receive notifications of new posts by email.
there's no  clear winner here.
although i prefer netbeans, i use both of them, to harvest the strengths of both.
and i would like to share my opinions about them.
netbeans however, isn't as rock  solid as eclipse.
so if you try to rename  something, it won't mess up your whole code.
although i prefer netbeans, i use both of them, to harvest the strengths of  both.
usability the usability of eclipse is a hell.
another thing is the auto-compile  feature, which on the fly compiles your code as you type and gives you instant  feedback on errors.
you'll have to open a dynamic web project to do this.
netbeans did try to implement something like this, but  eclipse is much better.
posted on april 14, 2011  by fatelectron
stabilty there's no question about the stability of eclipse.
this is where eclipse really triumphs.
14 april netbeans and eclipse are the two most popular java ides.
finally, which one do i prefer?
speed well, many of us are under the impression that eclipse is faster.
eclipse have some  tools for gui designing, but they're nothing compared to matisse.
unfortunately it wasn't free and the trial expired so i didn't get to test it that well.
and if you try to load eclipse with  that many plugins, it'll eat up about 1 gb of memory instantly, and the loading  time is, well, i've never managed to load eclipse, because it crashes.
the best eclipse plugins may not always be free (for example zend).
user-view eclipse is more tool oriented, where netbeans is more programmer oriented.
you'll have to spend more time configuring eclipse, than working with your project.
eclipse is somewhat too flexible for me.
i've been learning java for little over a year now
and if you try to load eclipse with that many plugins, it'll eat up about 1 gb of memory instantly, and the loading time is, well, i've never managed to load eclipse, because it crashes.
which one is better?
netbeans provides everything out-of-the-box,  and integrates seamlessly with anything you throw at it.
because it's easier to use  for me.
that  however, is arguable.
the previous releases frequently crashed, though the newer ones (after 6) almost never crash.
but the reason for this is probably because netbeans loads a lot more plugins than eclipse does.
misc eclipse requires you to write your ant script by yourself.
some of the criticisms aimed at eclipse could be mitigated by the environment that you develop in.
netbeans however, isn't as rock solid as eclipse.
i did some test on my own with both of them.
posted on april 14, 2011 by fatelectron 2 comments category:
it has millions of plugins, though not all of them work well.
although eclipse did have a bug in the helios release  involving auto-complete, it was fixed in sr1.
netbeans did try to implement something like this, but eclipse is much better.
netbeans provides everything out-of-the-box, and integrates seamlessly with anything you throw at it.
i've been learning  java for little over a year now
it will soon give an error not on compile but on some other stuff like junit.
this is a trivial question.
the basic netbeans java package is slower  than the basic eclipse j2ee package.
it's easier to code using netbeans.
that however, is arguable.
but the official packages are  extremely stable.
for example, if you want to create a jsf project, you can't do it using j2ee project.
so they're pretty stable right now.
and i would like to share my opinions about  them.
of-course, sometimes  the third-party plugins may cause it to crash.
i did some  test on my own with both of them.
netbeans however, requires much less configuring, and in most of the cases, it configures itself, and configures itself correctly.
tips interesting comparison.
the previous releases frequently crashed, though the newer  ones (after 6) almost never crash.
but there's no answer.
misc eclipse requires you to write your ant script by  yourself.
i use both eclipse and netbeans, for two different purposes.
and the most ironic thing is, you're left on your own to choose the best plugin.
if you’re working in a company, there is likely to be someone to do all of that configuration stuff.
the basic netbeans java package is slower than the basic eclipse j2ee package.
although eclipse did have a bug in the helios release involving auto-complete, it was fixed in sr1.
in slower machines eclipse works much better.
eclipse have some tools for gui designing, but they're nothing compared to matisse.
on the  other hand, netbeans loads all of them pretty effortlessly.
another thing is the auto-compile feature, which on the fly compiles your code as you type and gives you instant feedback on errors.
i'm new in java and i really  don't need that many features.
intellij looks shitty, but i has the best auto-compile and refactoring feature available out the.
netbeans does have a plugin support, but the plug-in base is nothing compared to netbeans.
eclipse is by far the best ide in terms of plug-in support.
so if you're doing a highly customized job, eclipse will be your only choice.
you'll have to spend more time  configuring eclipse, than working with your project.
i'm new in java and i really don't need that many features.
netbeans seem to provide everything i use out-of-the-box.
web toolbar by wibiya
but the reason for this is probably  because netbeans loads a lot more plugins than eclipse does.
for example, if you want to develop android applications, eclipse may be your only choice.
so if you need a custom build-file, but don't know ant scripting, you're in trouble.
the autofix isn't present in netbeans.
the autofix isn't present in  netbeans.