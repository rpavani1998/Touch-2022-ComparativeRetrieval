(interesting note; they actually have apologetic documentation that describes this broken behaviour, and bug4030718 that i was vehement about when 1.1 was broken; even to the extent that i wrote a patcher class that patched the classes.zip to show that this behaviour could be unbroken in time for the 1.2 release; in 1.4, they’ve finally marked it as closed.)
consider thedate class, which returns years since 1900, or the fact that we’ve got basically two of the same interfaces initerator and enumeration (and the ability to remove an object whilst traversing it is a bastardisation of the interface anyway; we could have equally had a sub-interface called ‘removableenumeration’ that added that specific functionality if required).
well, eclipse as a framework is much larger than eclipse as a developer environment, although the latter is more well-known.
and the best news of all is that the guidance of the platform and rcps is a meritorium controlled by the open eclipse organisation, so anyone can participate and guide the future; not just by jsrs.
java just provides a low-level layer to provide simplistic access; for example, theurl class provides basic access, whilst jakarta’shttpclient provides a framework for building http applications andhttpservlet provides basic web interaction, whilst struts provides a framework for building web-based applications.
(interesting note; they actually have apologetic documentation that describes this broken behaviour, and bug4030718 that i was vehement about when 1.1 was broken; even to the extent that i wrote a patcher class that patched the classes.zip to show that this behaviour could be unbroken in time for the 1.2 release; in 1.4, they’ve finally marked it as closed.)
just reading posts on some of theeclipse websites and plugin directories, you get the feeling that there is a large community working within the platform, not just the java ide.
if (!display.readanddispatch ()) display.sleep (); } display.dispose (); } this allows the programmer to have fine-grain control over the thread, and whilst this is single-threaded, it doesn’t have to be.
or the fact that since 1.1, java has a buggered threading model that processes theeventqueue resulting in all guis having to be killed with system.exit().
just reading posts on some of theeclipse websites and plugin directories, you get the feeling that there is a large community working within the platform, not just the java ide.
in any case, the reason why people are excited about the eclipse framework is that they are interested in what you can do with theplatform, not just how good the ide is.
i’ve started www.rcpapps.org to provide a set of examples on how to write rcp applications, and how you can design and build applications that take advantage of all that the eclipse frameworks have to offer.
eclipse -- more than just an ide jul 3rd, 2005 2005, eclipse i recently had the opportunity to give a talk on the eclipse framework and how it hangs together.
by the way, another reason why swt rocks is that they allow you to write your own threading for event handling; it’s why moststandalone swt apps have: swt event loop 1 2 3 4 5 6 7 8 9 10 11 12 public static void main (string [] args) { display display =
consider thedate class, which returns years since 1900, or the fact that we’ve got basically two of the same interfaces initerator and enumeration (and the ability to remove an object whilst traversing it is a bastardisation of the interface anyway; we could have equally had a sub-interface called ‘removableenumeration’ that added that specific functionality if required).
sun have never really quite ‘got’ java as an application development language; although it is a very powerful programming language.
and the best news of all is that the guidance of the platform and rcps is a meritorium controlled by the open eclipse organisation, so anyone can participate and guide the future; not just by jsrs.
it’s probably better that sun don’t control frameworks though, because there’s not a lot of evidence that up-front thought that happens.
sun have never really quite ‘got’ java as an application development language; although it is a very powerful programming language.
java just provides a low-level layer to provide simplistic access; for example, theurl class provides basic access, whilst jakarta’shttpclient provides a framework for building http applications andhttpservlet provides basic web interaction, whilst struts provides a framework for building web-based applications.
an application could run multiple ui-threads with a separate event loop in each thread.
they even acknowledge this: note: the most common threading model for an swt application is to run a single ui thread and perform long operations in computational threads.
they even acknowledge this: note: the most common threading model for an swt application is to run a single ui thread and perform long operations in computational threads.
an application could run multiple ui-threads with a separate event loop in each thread.
i’ve started www.rcpapps.org to provide a set of examples on how to write rcp applications, and how you can design and build applications that take advantage of all that the eclipse frameworks have to offer.
well, eclipse as a framework is much larger than eclipse as a developer environment, although the latter is more well-known.
by the way, another reason why swt rocks is that they allow you to write your own threading for event handling; it’s why moststandalone swt apps have:swt event loop 1 2 3 4 5 6 7 8 9 10 11 12 public static void main (string [] args) { display display =
or the fact that since 1.1, java has a buggered threading model that processes theeventqueue resulting in all guis having to be killed with system.exit().
frameworks are what made smalltalk popular; what makes coding in mac os x easy; and are the holy grail of reuse and patterns books around.
in any case, the reason why people are excited about the eclipse framework is that they are interested in what you can do with theplatform, not
jul 3rd, 20052005, eclipse i recently had the opportunity to give a talk on the eclipse framework and how it hangs together.
frameworks are what made smalltalk popular; what makes coding in mac os x easy; and are the holy grail of reuse and patterns books around.
it’s probably better that sun don’t control frameworks though, because there’s not a lot of evidence that up-front thought that happens.
