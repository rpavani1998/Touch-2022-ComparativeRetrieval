idea shows the power of an ide once again, eliminating the need for developers to wade through css references all day, or to waste time debugging conflicting styles.
it  correctly handles inner classes and honors method overriding inline superclass move field to local scope: converts a field to a local variable, reducing  the complexity of the class inline constructor: when only this(...) is used safe delete: removes class from class hierarchy change method signature: this is one of intellij idea's most powerful and  useful refactorings, which saves a lot of time and tedious work.
intellij idea  5.0 allows added parameters and exceptions to be propagated throughout the  method call hierarchy, as well as the ability to add/remove the throws clause introduce... refactorings are smarter at guessing types (e.g. when there  are unresolved references in an expression)
it has much to do with bad habits on html code writing .
disclaimer: english is not native language for me and i appreciate if you correct my errors in a friendly way rss feed java faq newsrss feed java forums
the comments  are property of their posters, all the rest 1999-2006 by java faqs daily tips.
i will not give the answer right now, you will find it in one of my next articles, because today we will look at intellij idea new features.
matching brace highlighting + quick navigation  to paired tag in html (ctrl + ] / ctrl + [) html validation + several quick-fixes: invalid attributes or illegal attribute values invalid local anchor wrong references to files in hyperlinks (e.g., values of attributes href  and src) duplicate attributes move/copy file safe delete file
it is huge collection of  big and small java programming articles and tips.
new refactorings: intellij idea has more and better quality  refactoring features than any other ide, and intellij idea 5.0 adds even more.
i  thing it is important for those who works withjsp, servlets, web services and  so on.
you can find more  details on the feature you interested in if you go tojidea home page or do  further research on the web.
skip simple getters/setters force step-over, ignoring breakpoints drag and drop support for breakpoints intellij idea 5.0 is the first ide to provide serious support for javascript, introducing many of the useful features java developers have become accustomed to.
a la frontpage  style...
it is truly the best jsp editor in the world.
intellij idea vs. eclipse vs. netbeans: my personal experience, part ii javafaq home » java tools
debugging j2me modules with third-party toolkits and device emulators.
and how it affects your jsp  generated pages?
matching brace highlighting + quick navigation to paired tag in html (ctrl + ] / ctrl + [) rename file, anchor, etc.
it's especially useful to help inspect complex nested object structures.
new refactorings: intellij idea has more and better quality refactoring features than any other ide, and intellij idea 5.0 adds even more.
it's especially useful to help inspect complex nested  object structures.
move method: a separate refactoring from move static method, this new  refactoring safely moves non-static methods from one class to another.
i will do an overview on current situation with html standards and latest design trends (how to write most efficient html code).
intellij idea 5.0 sprints ahead even further with several additions  and enhancements to its refactoring arsenal.
things changed when i started to use jidea!
move/copy file safe delete file extract inlined style block from html into a css file the new i18n support provides multiple important features that make working on internationalization issues simple and convenient.
you probably say - yes,  yes i know, it is from browsers war.
the descriptions below is mostly from idea's site.
it correctly handles inner classes and honors method overriding inline superclass move field to local scope: converts a field to a local variable, reducing the complexity of the class inline constructor: when only this(...) is used safe delete: removes class from class hierarchy change method signature: this is one of intellij idea's most powerful and useful refactorings, which saves a lot of time and tedious work.
jsp source-level debugging under websphere application server (5.1 &  6.0) shortcut to setting up a logging breakpoint: select the expression to log,  thenshift + click in the gutter dependent breakpoints: the second breakpoint won't trigger unless the first  breakpoint triggered muting breakpoints with one button smart step-into: skip simple getters/setters force step-over, ignoring breakpoints drag and drop support for breakpoints javascript support new intellij idea 5.0 is the first ide to provide serious support for  javascript, introducing many of the useful features java developers have become  accustomed to.
you can find more details on the feature you interested in if you go tojidea home page or do further research on the web.
from the official w3c standard: html colors and fonts settings html structure view html and xhtml on-demand validation convert html into xhtml show content (ctrl + shift + i): on a tag - shows schema on a file - shows file content on an image - shows image css support intellij idea 5.0's support for css enables developers to quickly and  easily edit html styles with code-completion, error highlighting, finding  references, and more.
auto-detection of resource bundles i18n intention actions for smart internationalization of hard-coded string literals, both simple and concateneted @nonnls annotation & intention action for excluding particular  hard-coded strings from localization i18n support for tag text in jsp files resource properties completion in java references smart editing of .properties files
printer friendly page search here again if you need more info!
intellij idea's intelligence really shines, helping developers quickly navigate and code html and xhtml in ways that are simply not possible with other tools.
interactive software released under gnu gpl, code credits, privacy  policy includes/db/db.php line 265:
that are all most important improvements and features.
assigning the return value of new by reference is deprecated includes/cmsinit.inc
no, it was bad html code.
move method: a separate refactoring from move static method, this new refactoring safely moves non-static methods from one class to another.
in this, part ii, i will describe in details most important changes in jidea  since 4.x version.
additionally, intellij idea combines all of the support for html, css, and javascript into one seamless package, and provides full support for java code inside jsp scriptlets.
idea shows the power of an ide once again,  eliminating the need for developers to wade through css references all day, or  to waste time debugging conflicting styles.
in the part 1 of this article i summarized my personal experience with eclipse, netbeans and jidea java ides.
missing or invalid closing braces invalid selector format quick doc (ctrl + q and shift + f1) opens description from the official w3c  standard unused css tags highlighting css structure view refactoring: rename (including the opportunity to rename css file, class or id  attribute, etc., directly from within html)
jsp support new intellij idea 5.0 has introduced an unprecedented level of support for jsp,  including jsp-specific refactorings and support for jsp 2.0.
jsp code mostly  produces different kind of html pages and it is important to have all html code  clean.
custom search home code examples java forum all java tips  books submit news, code... search...
strange looking pages, different layout in different browsers.
intellij idea become for me the number one tool not only in java  programming, but also html code writing and validation.
all of intellij idea's smart java features, like refactorings, intentions,  inspections, etc., work in scriptlet and declarations code: jsp 2.0 support support for jsp document format (jspx) jsp source-level debugging under websphere application server jsp code  formatting structure view for jsp files html and xhtml support new the support for coding html and xhtml in intellij idea 5.0 rivals, and in  many cases surpasses, dedicated html tools.
intellij idea 5.0 has introduced an unprecedented level of support for jsp, including jsp-specific refactorings and support for jsp 2.0.
intellij idea 5.0 brings code analysis to a whole new level, helping developers not only to understand code, but to find problems early, keep the design clean, and also to aid iterative design when used in combination with refactoring.
j2me run/debug configurations panel run/debug mobile phone emulators refactorings and search intellij idea is currently the undisputed leader in smart java coding  features.
to get the same level of support from other tools  would cost much more than intellij idea itself!
code completion for tags (including auto-insertion of closing tags),  attributes, styles, file references in hyperlinks, etc. find/highlight  usages of tags, ids, files, images, styles, etc. completion and validation  forwidth and height attribute values in img tags code formatting according to html-specific code style (defined via a dedicated  code style settings panel)
i will do an overview on current situation with html  standards and latest design trends (how to write most efficient html code).
the list is not full, mostly listed below is what i thought important for java, especially jsp developers.
offshore software tech doodling rss feed java faq news rss feed java forums all logos and  trademarks in this site are property of their respective owner.
debugger new intellij idea 5.0 has several new debugging features, including some great  breakpoint improvements to make debugging smarter, so developers can find bugs  faster with less manual effort.
support for mobile sdk midp1.0/midp2.0/ntt docomo
find/highlight usages of tags, ids, files, images, styles, etc. completion and validation forwidth and height attribute values in img tags code formatting according to html-specific code style (defined via a dedicated code style settings panel)
jsp source-level debugging under websphere application server (5.1 & 6.0) shortcut to setting up a logging breakpoint: select the expression to log, thenshift + click in the gutter dependent breakpoints: the second breakpoint won't trigger unless the first breakpoint triggered muting breakpoints with one button smart step-into:
strange  looking pages, different layout in different browsers.
intellij idea 5.0 brings code  analysis to a whole new level, helping developers not only to understand code,  but to find problems early, keep the design clean, and also to aid iterative  design when used in combination with refactoring.
a la frontpage style...
disclaimer: english is not native language for me and i appreciate if  you correct my errors in a friendly way
take your copy of free "java technology screensaver"!.
not only layout, even speed of page rendering increased dramatically when browsers switched from "quirks" to "standards compliance" mode.
we used that html code can be bad, not properly formatted, tags can be  opened and never closed - modern browsers will swallow any html code and do the  best...
i thing it is important for those who works withjsp, servlets, web services and so on.
auto-detection of resource bundles convenient multi-language resource-bundle editor i18n intention actions for smart internationalization of hard-coded string literals, both simple and concateneted @nonnls annotation & intention action for excluding particular hard-coded strings from localization i18n support for tag text in jsp files resource properties completion in java references smart editing of .properties files intellij idea 5.0 has several new debugging features, including some great breakpoint improvements to make debugging smarter, so developers can find bugs faster with less manual effort.
intellij idea 5.0 allows added parameters and exceptions to be propagated throughout the method call hierarchy, as well as the ability to add/remove the throws clause introduce... refactorings are smarter at guessing types (e.g. when there are unresolved references in an expression)
i although thought like this until i realized that many problems with my  pages not due to errors in my java code.
move/copy file safe delete file show applied styles for tag: opens a tree-view of all styles that are applied to the tag by css quick doc (ctrl + q and shift + f1) opens descriptions of html tags, attributes (with available values if defined), etc., from the official w3c standard: html colors and fonts settings html structure view html and xhtml on-demand validation convert html into xhtml surround with tag show content (ctrl + shift + i): on a tag - shows schema on a file - shows file content on an image - shows image intellij idea 5.0's support for css enables developers to quickly and easily edit html styles with code-completion, error highlighting, finding references, and more.
code completion for javascript keywords, variables, parameters and functions, including completion in html event handlers, etc. syntax and error highlighting, including on-the-fly validation highlighting for escape sequences in string literals intellij idea 5.1 enhances its support for j2ee development with several new features: detection of unbound namespace prefix in jsp and xml auto-import of tag libraries and xml schemas in jsp and xml completion/renaming for references to java methods from hibernate/spring/jsf configuration files jsp source-level debugging under websphere application server (5.1 & 6.0) intellij idea 5.0 supports developers for the increasingly popular j2me platform with features to simplify configuring, compiling, running, and debugging j2me modules with third-party toolkits and device emulators.
show applied styles for tag: opens a tree-view of all styles that are  applied to the tag by css quick doc (ctrl + q and shift + f1) opens  descriptions of html tags, attributes (with available values if defined), etc.,
i although thought like this until i realized that many problems with my pages not due to errors in my java code.
intellij idea 5.0 sprints ahead even further with several additions and enhancements to its refactoring arsenal.
i will not give the answer right now, you will find it in one  of my next articles, because today we will look at intellij idea new features.
free "1000 java tips" ebook is here!
you probably want that your customers see your application as a modern  tool, not ugly formatted page from beginning of 90s of past century.
intellij idea 5.0 makes it even easier and more powerful to customize any object display in the debugger, similar to the alternate collections view feature.
you probably say - yes,
as i mentioned above i am going to write soon an article on importance of  clean html code writing.
code completion of css keywords, values, properties, classes, html ids,  syntax and error highlighting, on-the-fly validation and intention actions.
i-mode dedicated j2me module type added building mobile applications (midlet suites)
convert to instance method: visibility options added rename class: suggests to rename a gui form if one is bound to it find catch()es for thrown exceptions intellij idea is currently the best tool available for static and on-the-fly code inspections.
search the javafaq.nu 1000 java tips ebook
java tools intellij idea become for me the number one tool not only in java programming, but also html code writing and validation.
you probably want that your customers see your application as a modern tool, not ugly formatted page from beginning of 90s of past century.
the list is not full,  mostly listed below is what i thought important for java, especially jsp  developers.
with  enhancements introduced in version 5.1, intellij idea can be justly named the  bestjava i18n / l10n tool.
to get the same level of support from other tools would cost much more than intellij idea itself!
convert to instance method: visibility options added rename class: suggests to rename a gui form if one is bound to it find catch()es for thrown exceptions code analysis intellij idea is currently the best tool available for static and  on-the-fly code inspections.
j2me run/debug configurations panel run/debug mobile phone emulators intellij idea is currently the undisputed leader in smart java coding features.
additionally,  intellij idea combines all of the support for html, css, and javascript into  one seamless package, and provides full support for java code inside jsp  scriptlets.
with enhancements introduced in version 5.1, intellij idea can be justly named the bestjava i18n / l10n tool.
and how it affects your jsp generated pages?
not only layout, even speed of  page rendering increased dramatically when browsers switched from  "quirks" to  "standards compliance" mode.
move/copy file extract inlined style block from html into a css file i18n support new the new i18n support provides multiple important features that  make working on internationalization issues simple and convenient.
intellij idea 5.0 makes it even easier and more powerful to  customize any object display in the debugger, similar to the alternate  collections view feature.
custom object display in debugger: most programmers write tostring() methods so that objects are easier to browse and inspect during debugging.
code completion for tags (including auto-insertion of closing tags), attributes, styles, file references in hyperlinks, etc.
custom object display in debugger: most programmers write  tostring() methods so that objects are easier to browse and inspect during  debugging.
jsp code mostly produces different kind of html pages and it is important to have all html code clean.
yes i know, it is from browsers war.
as i mentioned above i am going to write soon an article on importance of clean html code writing.
all of intellij idea's smart java features, like refactorings, intentions, inspections, etc., work in scriptlet and declarations code: jsp 2.0 support jsp source-level debugging under websphere application server jsp code formatting optimize imports in jsp structure view for jsp files the support for coding html and xhtml in intellij idea 5.0 rivals, and in many cases surpasses, dedicated html tools.
please take your copy here.
missing or invalid closing braces invalid selector format invalid css properties unused css class definitions find/highlight usages quick doc (ctrl + q and shift + f1) opens description from the official w3c standard unused css tags highlighting code folding code formatting css structure view refactoring: rename (including the opportunity to rename css file, class or id attribute, etc., directly from within html)
intellij idea's intelligence really  shines, helping developers quickly navigate and code html and xhtml in ways  that are simply not possible with other tools.
what is that - the "quirks" mode?
we used that html code can be bad, not properly formatted, tags can be opened and never closed - modern browsers will swallow any html code and do the best...
it is huge collection of big and small java programming articles and tips.
code completion for javascript keywords, variables, parameters and  functions, including completion in html event handlers, etc. syntax and error highlighting, including on-the-fly validation highlighting for escape sequences in string literals enhancements in j2ee support new intellij idea 5.1 enhances its support for j2ee development with several  new features: detection of unbound namespace prefix in jsp and xml auto-import of tag libraries and xml schemas in jsp and xml completion/renaming for references to java methods from hibernate/spring/jsf configuration files jsp source-level debugging under websphere application server (5.1 &  6.0) j2me support intellij idea 5.0 supports developers for the increasingly popular j2me  platform with features to simplify configuring, compiling, running, and