it has pretty good help files, simple (basic) syntax and is a great way for beginners to learn and for more experienced programmers to throw together simple apps in a hurry.it's handy enough on its own for c/c++ projects, independent of whether you are using qt or not, but it's extremely helpful for developing applications that use qt as it integrates very well with qt designer.basic was a great first language and is still useful in teaching simple programming constructs.this causes bugs, incompatibilities and ui integration problems.the component style of programming is extremely powerful - particularly when you can call upon very flexible and high level office components.the component style of programming does have lots of advantages.drawing on screen was easy, syntax was easy and reading from input was easy.though i haven't used it in a few years it is a great way to quickly put together graphical applications.while it may sound lazy, drag and drop interface creation and good remote debugging speeds development time, even for professionals.python and ruby are orders of magnitude more difficult to write interpreters for.it doesn't poll for changes in source files frequently enough and if you dare add a file outside the ide, you have to manually refresh the view to see it.that is where individual programmers pick up and are encouraged toward good/bad practices.the few things i can't do in netbeans are third party add-ons that haven't been tested well and don't integrate.the reason is that ide technology makes heavy use of static language features.lisps are by far the easiest interpreters to write.