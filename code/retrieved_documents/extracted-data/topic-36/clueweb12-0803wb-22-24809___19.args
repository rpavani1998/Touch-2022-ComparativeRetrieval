i've tried eclipse, zend studio, komodo, rubymine... and almost didn't bother with netbeans because it seemed that any ide was bound to be a disappointment.
i opened netbeans, and found some cool stuff, which i later learned that eclipse doesn't have!
the fact that netbeans offers a full-fledged ide that runs on multiple platforms is enough in itself.
code completion, automated javadoc building, automated jar deployment and the astonishing profiler make this the best ide out there for developers working on large projects.
all in all, with the improvements made to the netbeans editor, the tight integration with maven, and the painless way of setting up a jsf project (essentially, all required code completion and features works "automagically")
i can't say enough good things about netbeans.
code completion is one of them, and in netbeans it looks awesome.
i decided to give netbeans 6 a try, and i was amazed at the integration of the development environment.
it is also fast thanks to advances in hardware and so far has allowed me to easily develop non-gui java applications (programming assignments) for the object oriented programming module that i am currently teaching.
i think your efforts and product so far are so good you should get people running down the streets wearing t-shirts and singing.
i just have everything in netbeans - out of the box.
my students who used borland's jbuilder previously, were equally impressed.
that means that opening//<![cdata [ comments would comment out entire scripts.
professionally, i used also eclipse and intellij idea in other projects, but never even thought of switching to any of them with eportfel.
josh eckerman, eventux, llc i just wanted to say that netbeans 6.7.1 has blown myself and my team away.
the fact that it does all of this better than any ide i've ever seen is teetering on goofy.
if you work on sizable php projects and you’re not using an ide like netbeans, you might be surprised at how much time a tool like this can save you!
what i like most is that this ide gets better and better with every release, even with release candidates or master releases.
i am currently working on an enterprise scale distributed web application framework with over 200 source files and about 2 dozen import packages and netbeans has managed the coding and execution of my work perfectly.
i think the main difference between eclipse and netbeans is, that netbeans focuses on providing the very basic functionality for a developer.
however, the bottom line is netbeans makes you a better developer.
i stayed with the dw tools until version 8, when i got fed up with the continual costs of upgrading and the traditional bugs on release 1 of any version.
levan dvalishvili here is the top 5 features that pulled me to neatbeans from eclipse: very decent jsp editor, plus seamless integration with tomcat.
by version 4, netbeans was incredibly intuitive, stable and offered good tools for refactoring (the global search and replace features are a godsend) then came version 5, then 5.5.
but because of my commitment to free software, i have always been on the lookout for an ide that i could share with my students with them working under ms and me under linux.
my main requirements were great handling of php code, and great javascript - jquery in particular.
after using this, we've begun a migration to netbeans, and everyone is hitting the ground running.
you have to write html, css, and javascript code as well.
i was surprised by the responsiveness without sacrificing high-level functionality, and the feature set that seems to anticipate exactly what i want and would have designed into the product.
eclipse was nice, but netbeans has a much more comfortable feel to it.
try it, you won't be disappointed.
i just have everything in netbeans - out of the box.
so, i'm very happy with netbeans and i'll be using it, at least for java.
so, i'm very happy with netbeans and i'll be using it, at least for java.
needless to say, that soured aptana’s viability completely, and after looking into a fix for about an hour, i declared netbeans the winner.
after using this, we've begun a migration to netbeans, and everyone is hitting the ground running.
when i'm not using svn, i can save the file i'm working on, and it is automatically uploaded to the web or testing server.
yet, right out of the box, netbeans is pre-configured to develop, debug, and deploy web components quickly onto tomcat (which is included with the download).
so i went online to search for java, the language i've been refusing for so long.
i have already switched the whole company to netbeans for php, but little ol' me isn't enough to reach the masses.
laurin1 excerpt from zend forum:  netbeans 6.5....zend studio please pay attention my company bought three 3-year licenses for zend studio earlier this and up until a few weeks ago, there was nothing else on the market that even came close to meeting our requirements.
i wanted something free, and feature packed.
it is very well tested and has a great integration with databases and application servers.
i should also admit that i also wanted to access the additional capabilities these ides now offered.
the automatic integration of frameworks (along with the tutorials) makes acquiring facility with new java technologies relatively easy.
i’ve been using nusphere phped for some time, it also has similar feature but does not write the require statement like netbeans.
debugger that actually works well with web applications.
things i earlier missed from the eclipse editor are now available in netbeans, such as: highlighting a variable highlights it everywhere in the file, making it easy to see where it is been used.
needless to say, that soured aptana’s viability completely, and after looking into a fix for about an hour, i declared netbeans the winner.
netbeans came out the winner - not least because it wasn't based on a bloated eclipse platform, and being free, i couldn't argue with the price.
these days, it’s a powerful, multi-language development environment that’s free for the taking.
that means that opening//<![cdata [ comments would comment out entire scripts.
profiler that actually works.
this has however changed in recent times and i have tried it again, only to abandon it as it was often an overkill for small teaching level programming projects.
http monitor that actually works.
i've tried eclipse, zend studio, komodo, rubymine... and almost didn't bother with netbeans because it seemed that any ide was bound to be a disappointment.
i had briefly tried netbeans before, however i always went back to eclipse because it offered a much better java editor, i think this has changed in version 6 of netbeans.
eclipse was nice, but netbeans has a much more comfortable feel to it.
if you work on sizable php projects and you’re not using an ide like netbeans, you might be surprised at how much time a tool like this can save you!
i enjoyed the ease with which i could get my project going and really liked the color coding.
the automatic integration of frameworks (along with the tutorials) makes acquiring facility with new java technologies relatively easy.
a php ide with debugging built in (dw didn't have that a the time), and great facilities.
well done to all the people involved in producing such a great ide.
right out of the gate, their php and javascript support is on the whole, so much better and faster than zend's product, with so many fewer bugs, that despite the fact that we spent $1000 this year investing in zend's product, and i personally have spent time with zend's tech support and developers (good guys, very helpful), i am assisting my team in migrating over to use netbeans for most of our development....
i’m just saying i feel more comfortable now, today, using netbeans than using zend or nuspere; not to mention the cost of each of them.
i had become used to writing my php code in a simple text editor (jedit, if you’re wondering), so it had been awhile since i’d enjoyed the luxuries of project-wide code completion, code refactoring, and a full debugger.
it's a good product, and attractively priced.
doug puchalski free software is great.
the fact that it's open source is down right nuts.
in my experience, it takes much time to configure eclipse to properly develop web components.
well, i don't like microsoft products to begin with, so this was a natural disaster waiting to happen, and guess what... it happened...
this all started when it occurred to me that i was going nowhere fast trying to do php coding with eclipse's phpeclipse plugin....
all in all, with the improvements made to the netbeans editor, the tight integration with maven, and the painless way of setting up a jsf project (essentially, all required code completion and features works "automagically")
and as a summary i have to say i do not have any need for looking for better tool.
netbeans is hands down the best ide, with the least about of bugs, and virtually no learning curve (try that eclipse...), that i've used.
i think your efforts and product so far are so good you should get people running down the streets wearing t-shirts and singing.
until they dropped all php support from the tool, changed the ftp method (and broke it), and generally showed that they no longer had a strategy to support php developers.
[...] this took a while of jumping from site to site, checking out feature comparison charts, trying different software, and so on.
the more users you can reach at these early stages will help with user feedback and to drive future feature development.
i stayed with the dw tools until version 8, when i got fed up with the continual costs of upgrading and the traditional bugs on release 1 of any version.
free software is great.
i opened netbeans, and found some cool stuff, which i later learned that eclipse doesn't have!
professionally, i used also eclipse and intellij idea in other projects, but never even thought of switching to any of them with eportfel.
netbeans unpacks and sets up easily.
i just wanted to say that netbeans 6.7.1 has blown myself and my team away.
the fact that it covers the major elements of all of the languages it supports is second to none.
and even better, redeployments seem to go pretty smoothly and take a couple seconds to do.
you can lock yourself away, keep all the lights off, cover your face if you must, but just try it.
this has however changed in recent times and i have tried it again, only to abandon it as it was often an overkill for small teaching level programming projects.
the built-in example apps are self-explanatory and highly instructive.
i also plan to try netbeans on my next java gig to see how it holds up in an enterprise development environment.
when netbeans first appeared, i tried it, but only once as it was so slow on my box that it was unusable.
the fact that it has support for every language you could ever want (or need) to write code in is nearly unprecedented.
yet, right out of the box, netbeans is pre-configured to develop, debug, and deploy web components quickly onto tomcat (which is included with the download).
i was afraid i'd have to go through mountains of tutorials to regain my level of proficiency i had with eclipse.
i enjoyed the ease with which i could get my project going and really liked the color coding.
i quickly found references to the visual editor plugin, and i found a lot of information about it, but i couldn’t get it working with my installation of eclipse.
well, i don't like microsoft products to begin with, so this was a natural disaster waiting to happen, and guess what... it happened...
werner vesteraas, norway i got fed up with eclipse after four years.
i now implement mvc easily without having to memorize arcane directory structures.
i’ve done my 300th deployment now and no memory warnings, no bumps.
any file can be quickly opened via a keyboard shortcut (in eclipse it is ctrl+shift+r, in netbeans it is shift+alt+o)
i've abandoned radrails for netbeans.
i downloaded the netbeans ide to program a peer-to-peer networking course project for my graduate studies.
i was surprised by the responsiveness without sacrificing high-level functionality, and the feature set that seems to anticipate exactly what i want and would have designed into the product.
things i earlier missed from the eclipse editor are now available in netbeans, such as: ...all in all, with the improvements made to the netbeans editor, the tight integration with maven, and the painless way of setting up a jsf project (essentially, all required code completion and features works "automagically")
this made me the most nervous because it can be quite a dance dealing with java dependencies, etc.
on top of that, the tool is slick and clean....
surprisingly, that support is so good that it now compares favourably to more established competitors like eclipse, komodo ide, and zend studio.
i’d say that it’s a permanent replacement for dreamweaver in my book; netbeans is pretty much a php coder’s dream come true.
by version 4, netbeans was incredibly intuitive, stable and offered good tools for refactoring (the global search and replace features are a godsend) then came version 5, then 5.5.
so i went online to search for java, the language i've been refusing for so long.
great non-php tools for php developers netbeans is an ide that stands out above all others.
i personally think you have the best ide out there already for php development.
i think the main difference between eclipse and netbeans is, that netbeans focuses on providing the very basic functionality for a developer.
with enough motivation i might have persevered, but i had the netbeans alternative to look at.... maciej wegorkiewicz, software consultant i want to thank the team for the best ide i use for six years for development of personal finance application eportfel (www.eportfel.com).
i had briefly tried netbeans before, however i always went back to eclipse because it offered a much better java editor, i think this has changed in version 6 of netbeans.
the boys at sun have done an extremely amazing job of writing an ide devoid of anything overly cryptic.
it is very well tested and has a great integration with databases and application servers.
it's alright, you don't have to tell anyone that you're using netbeans.
but for rich client guis, netbeans has no competition on the market.
- highlighting a variable highlights it everywhere in the file, making it easy to see where it is been used.
and as a summary i have to say i do not have any need for looking for better tool.
it offers a built-in ftp client (far superior to dreamweaver) or supports subversion publishing.
i should also admit that i also wanted to access the additional capabilities these ides now offered.
the boys at sun have done an extremely amazing job of writing an ide devoid of anything overly cryptic.
- crtl+clicking a method call navigates to the method declaration - any file can be quickly opened via a keyboard shortcut (in eclipse it is ctrl+shift+r, in netbeans it is shift+alt+o) - ctrl+space automatically suggests variable names excerpt from blog entry: netbeans is now my favorite
- http monitor that actually works.
i am very impressed with the functionality of the netbeans ide for java programming!
it is very small, fast, and has many built-in features that help create better code, more efficiently.
these days, it’s a powerful, multi-language development environment that’s free for the taking.
my students who used borland's jbuilder previously, were equally impressed.
once you put all the hype aside, you'll realize just how invaluable a tool like netbeans is.
right out of the gate, their php and javascript support is on the whole, so much better and faster than zend's product, with so many fewer bugs, that despite the fact that we spent $1000 this year investing in zend's product, and i personally have spent time with zend's tech support and developers (good guys, very helpful), i am assisting my team in migrating over to use netbeans for most of our development....
the fact that it does all of this better than any ide i've ever seen is teetering on goofy.
i quickly found references to the visual editor plugin, and i found a lot of information about it, but i couldn’t get it working with my installation of eclipse.
i will use netbeans ide for my remaining graduate level courses in computer science at the university of florida.
when you do, you’ll be pleasantly surprised to find the same level of support for these languages built into netbeans too!
surprisingly, that support is so good that it now compares favourably to more established competitors like eclipse, komodo ide, and zend studio.
and even better, redeployments seem to go pretty smoothly and take a couple seconds to do.
i am very impressed with the functionality of the netbeans ide for java programming!
kalvin osborne, lead developer for xipolec, northern british columbia, canada i have used almost all, if not all, the ides that have looked good enough to try.
it's a good product, and attractively priced.
while i am still surveying the features, i am impressed how quickly i could deploy a new web application.
the built-in example apps are self-explanatory and highly instructive.
until they dropped all php support from the tool, changed the ftp method (and broke it), and generally showed that they no longer had a strategy to support php developers.
code completion is one of them, and in netbeans it looks awesome.
i was afraid i'd have to go through mountains of tutorials to regain my level of proficiency i had with eclipse.
i've abandoned radrails for netbeans.
i am currently working on an enterprise scale distributed web application framework with over 200 source files and about 2 dozen import packages and netbeans has managed the coding and execution of my work perfectly.
i must admit that i also very much like idea for its refactoring capabilities and for many possibilities it gives for developing multi-tier apps.
zend studio please pay attention my company bought three 3-year licenses for zend studio earlier this and up until a few weeks ago, there was nothing else on the market that even came close to meeting our requirements.
i decided to download and install eclipse and for the life of me i don't know how anyone could compare that to netbeans.
however, the bottom line is netbeans makes you a better developer.
i’m just saying i feel more comfortable now, today, using netbeans than using zend or nuspere; not to mention the cost of each of them.
try it, you won't be disappointed.
i will use netbeans ide for my remaining graduate level courses in computer science at the university of florida.
code completion, automated javadoc building, automated jar deployment and the astonishing profiler make this the best ide out there for developers working on large projects.
it offers a built-in ftp client (far superior to dreamweaver) or supports subversion publishing.
this all started when it occurred to me that i was going nowhere fast trying to do php coding with eclipse's phpeclipse plugin....
- debugger that actually works well with web applications.
i decided to download and install eclipse and for the life of me i don't know how anyone could compare that to netbeans.
- profiler that actually works.
i have used almost all, if not all, the ides that have looked good enough to try.
i can't say enough good things about netbeans.
i’ve been using nusphere phped for some time, it also has similar feature but does not write the require statement like netbeans.
you won't have any trouble at all getting people to convert from other ides to netbeans, that i am certain of...
the fact that it has support for every language you could ever want (or need) to write code in is nearly unprecedented.
so, i’m now self employed.
i have already switched the whole company to netbeans for php, but little ol' me isn't enough to reach the masses.
it is very small, fast, and has many built-in features that help create better code, more efficiently.
pete, kp direction i've been developing websites since 1999, and at kpdirection since 2001, starting with macromedia dreamweaver ultradev.
you can lock yourself away, keep all the lights off, cover your face if you must, but just try it.
you won't need any training, it's that easy.
eclipse and aptana studio pro were our standbys.
the fact that netbeans offers a full-fledged ide that runs on multiple platforms is enough in itself.
i installed eclipse on my laptop awhile back and had been suffering somewhat harsh just trying to prevent it from running out of permgen space....
used it few times but still nice feature.
but because of my commitment to free software, i have always been on the lookout for an ide that i could share with my students with them working under ms and me under linux.
[...] of course, writing php applications is more than just php code.
i also plan to try netbeans on my next java gig to see how it holds up in an enterprise development environment.
i decided to give netbeans 6 a try, and i was amazed at the integration of the development environment.
i want to thank the team for the best ide i use for six years for development of personal finance application eportfel (www.eportfel.com).
i now implement mvc easily without having to memorize arcane directory structures.
in my experience, it takes much time to configure eclipse to properly develop web components.
[...] of course, writing php applications is more than just php code.
the more users you can reach at these early stages will help with user feedback and to drive future feature development.
the fact that it's open source is down right nuts. ...
you have to write html, css, and javascript code as well.
you won't have any trouble at all getting people to convert from other ides to netbeans, that i am certain of...
however because of my university's commitment to ms, i have also used borland's programming ide with pascal, c, c++ and java.
my main requirements were great handling of php code, and great javascript - jquery in particular.
the fact that it covers the major elements of all of the languages it supports is second to none.
i installed eclipse on my laptop awhile back and had been suffering somewhat harsh just trying to prevent it from running out of permgen space....
when netbeans first appeared, i tried it, but only once as it was so slow on my box that it was unusable.
once you put all the hype aside, you'll realize just how invaluable a tool like netbeans is.
i knew about netbeans and eclipse, and knew that both of them were pretty good with java.
what i like most is that this ide gets better and better with every release, even with release candidates or master releases.
here is the top 5 features that pulled me to neatbeans from eclipse: - very decent jsp editor, plus seamless integration with tomcat.
i knew about netbeans and eclipse, and knew that both of them were pretty good with java.
however because of my university's commitment to ms, i have also used borland's programming ide with pascal, c, c++ and java.
the user interface is intuitive, and the drag and drop palettes are easy and transparent.
i must admit that i also very much like idea for its refactoring capabilities and for many possibilities it gives for developing multi-tier apps.
great profiler (easy and effective - you feel like using simple wizard and get exact info)
netbeans came out the winner - not least because it wasn't based on a bloated eclipse platform, and being free, i couldn't argue with the price.
when i'm not using svn, i can save the file i'm working on, and it is automatically uploaded to the web or testing server.
while i am still surveying the features, i am impressed how quickly i could deploy a new web application.
but for rich client guis, netbeans has no competition on the market.
when you do, you’ll be pleasantly surprised to find the same level of support for these languages built into netbeans too!
this made me the most nervous because it can be quite a dance dealing with java dependencies, etc.
netbeans is hands down the best ide, with the least about of bugs, and virtually no learning curve (try that eclipse...), that i've used.
a php ide with debugging built in (dw didn't have that a the time), and great facilities.
great profiler (easy and effective - you feel like using simple wizard and get exact info)
the user interface is intuitive, and the drag and drop palettes are easy and transparent.
you won't need any training, it's that easy.
i had become used to writing my php code in a simple text editor (jedit, if you’re wondering), so it had been awhile since i’d enjoyed the luxuries of project-wide code completion, code refactoring, and a full debugger.
it is also fast thanks to advances in hardware and so far has allowed me to easily develop non-gui java applications (programming assignments) for the object oriented programming module that i am currently teaching.
[...] this took a while of jumping from site to site, checking out feature comparison charts, trying different software, and so on.
i’d say that it’s a permanent replacement for dreamweaver in my book; netbeans is pretty much a php coder’s dream come true.
i downloaded the netbeans ide to program a peer-to-peer networking course project for my graduate studies.
i personally think you have the best ide out there already for php development.
