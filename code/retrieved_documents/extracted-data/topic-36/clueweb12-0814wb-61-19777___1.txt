dzone: what provisions does aries provide for the jpa spec?
we have jmx integration as well.
but, our objective with doing that is to gain experience and ensure that we have developed an efficient and usable and practical model for deploying multi‑bundled applications in order to inform our work in the osgi alliance.
which is actually, quite  an advanced extension to the blueprint specification that we add as value in  the aries blueprint implementation.
and in that model, in the managed model, the container not only manages the  life cycle of the entity manager, but it also manages the relationship of the  entity manager's persistence context with any transaction that the application  happens to be running under.
ian is a distinguished engineer at ibm working out of the hursley lab in the uk.
then within apache aries, we have a jpa container component which is part of our blueprint container.
aries is about components that can be integrated into enterprise runtime environments but components that are primarily application component facing, like theblueprint container.
so that the blueprint container can understand transaction configuration  for blueprint components, just like the ejb container can, in fact.
ian: osgi is described across a number of different specifications: there is an osgi core specification and then there are implementations of the osgi core such as eclipse equinox, apache felix, knopflerfish and others.
so the blueprint container is extended with the jpa container so that the blueprint components that run inside the blueprint container can have their jpa context managed for them by the blueprint container.
the second aspect is the application and it's definition of it's access to  the database through a jpa persistence xml and the entities that it provides to  interact with‑‑to actually represent the data in object form.
in a container managed environment, the container that the application  component runs it, for example, a blueprint container can work with and  discover jpa providers and inject entity managers from those jpa providers into  an application, in order to process it's persistence units.
so, in that respect, apache aries is  innovating because we're ahead of any standardization effort in the osgi  alliance at the moment.
dzone:  can you give us a preview of what we can expect to see  in the next three to six months with the aries project?
ian: arie's jta integration uses the transaction manager in geronimo.
so there's a nice integration between essentially loosely coupled  components.
dzone: can you tell us a little about your  role at ibm?
which eases the integration in an enterprise application  between components that have been derived from the java ee side of the  universe.
he also provides a roadmap for the project, which is currently in the apache incubator.
one of the other things that i think apache aries has a very forward‑looking approach to is the assembly and deployment of multi‑bundled applications.
programming groovy is easy to start with.
and our first release covers things like the  application assembly model, jmx, j2ee blueprint container, the things i've  spoken about already.
which is actually, quite an advanced extension to the blueprint specification that we add as value in the aries blueprint implementation.
ian:  where does java need to evolve?
ian: in an enterprise jar and certainly in the enterprise osgi specification, there is a definition of how persistence should be managed in an enterprise jar environment.
dzone: how does aries differ from the osgi framework?
view full user profile dzone recently met up with ibm's ian robinson to discuss apache aries, a project which aims to deliver a set of pluggable java components enabling an enterprise osgi application programming model.
what we have for the aries jta integration is the registration of jta services in the osgi service registry.
"what  is the framework?
it's  interesting, looking at the different ways that java could evolve.
and in that model, in the managed model, the container not only manages the life cycle of the entity manager, but it also manages the relationship of the entity manager's persistence context with any transaction that the application happens to be running under.
i would like  to see java evolve so that it recognizes the 10 years of experience, probably  11 years of experience, that we have in the osgi alliance of building modular  systems and actually adopt osgi as the module system for java.
in that model, the application is managing the use of the entity manager and it's association with any transaction context, for example.
which eases the integration in an enterprise application between components that have been derived from the java ee side of the universe.
then there is an enterprise osgi specification and that's where apache  aries comes in.
how we can encourage the use of osgi more globally, across the java  platform and in particular, in the enterprise java space, in the osgi  enterprise expert group and latterly to help set up the apache aries project  which focuses on building enterprise osgi technologies and in particular  enterprise osgi technologies that affect application components.
so that's jmx  integration.
so that the blueprint container can understand transaction configuration for blueprint components, just like the ejb container can, in fact.
beyond that, we've had interest expressed by members of the community to extend the work of the enterprise expert group at the moment with development of some more forward‑looking things, and indeed some things that we are interested in standardizing through the enterprise expert group.
i would like to see java evolve so that it recognizes the 10 years of experience, probably 11 years of experience, that we have in the osgi alliance of building modular systems and actually adopt osgi as the module system for java.
ian:  we're just in the process at the moment of  voting on our first release, so that will be about seven months after creating  the beta project.
what services do they provide?"
dzone: can you give us a preview of what we can expect to see in the next three to six months with the aries project?
what  services do they provide?"
he also provides a roadmap for the project, which is  currently in the apache incubator.
aries interacts with geronimo, gets the transaction manager, puts it into  the osgi service registry, and makes it available for applications.
there's an osgi compendium specification and generally speaking, most of  the compendium services that are defined in the compendium spec are also  implemented by felix and equinox.
in this interview, recorded at ibm impact 2010, ian talks about how apache aries relates to the osgi framework, and its support for numerous java ee specs, including thejava persistence api (jpa), the java transaction api (jta), and java management extensions (jmx).
so that talks about how java enterprise technologies are, if you like, married with osgi.
and that definition is to  integrate jpa into an enterprise jar .
but, our objective with doing that is to gain experience and ensure that we  have developed an efficient and usable and practical model for deploying  multi‑bundled applications in order to inform our work in the osgi  alliance.
so that talks about how java enterprise technologies are, if  you like, married with osgi.
so there are essentially, three different aspects of jpa provision in osgi.
we have jndi integration as well.
beyond that, we've had interest expressed by members of  the community to extend the work of the enterprise expert group at the moment  with development of some more forward‑looking things, and indeed some  things that we are interested in standardizing through the enterprise expert  group.
dzone: having worked really closely with the osgi enterprise expert group, and now on aries, in your opinion, what direction does java need to evolve to become a truly modular platform?
dzone: having worked really closely with the osgi enterprise expert  group, and now on aries, in your opinion, what direction does java need to  evolve to become a truly modular platform?
there is an application usage model where the application essentially finds a jpa provider, interacts with it to create an entity manager factory and then uses the entity manager factory.
how we can encourage the use of osgi more globally, across the java platform and in particular, in the enterprise java space, in the osgi enterprise expert group and latterly to help set up the apache aries project which focuses on building enterprise osgi technologies and in particular enterprise osgi technologies that affect application components.
so geronimo has an implementation of jta.
and can run  blueprint components under jta global transactions as well.
ian: my primary interest at the moment is around osgi  technologies and how they can be used in the application programming module in  the websphere application server and indeed, beyond the websphere application  server as well.
for example, an osgi service registered  in the service registry can also be made available for discovery through jndi  by a jndi client.
but i think, in terms of the work that we set out to do, to build initial implementations of the enterprise expert group specifications, once we've got our first release out there and we've demonstrated that we have a vibrant community, then i think, within the next three or four months, i hope and expect to see apache aries actually graduate from incubation.
i'm hoping, by the end of this week or next week, we'll have  our first release out there.
so jpa has two different usage modules.
it's interesting, looking at the different ways that java could evolve.
aries is about components that can be integrated into enterprise runtime  environments but components that are primarily application component facing,  like theblueprint container.
then within apache aries, we have a jpa container component which  is part of our blueprint container.
what applications are running inside that framework?
dzone: what provisions does aries provide  for the jpa spec?
the second aspect is the application and it's definition of it's access to the database through a jpa persistence xml and the entities that it provides to interact with‑‑to actually represent the data in object form.
the java evolution mismatch: why you need a better jvm getting started with fuse mediation router migrating to fuse mediation router developing .net/c# applications with voltdb implementing enterprise integration patterns dzone recently met up with ibm's ian robinson to discuss apache aries,  a project which aims to deliver a set of pluggable java components enabling an  enterprise osgi application programming model.
nitin is a and has posted 391 posts at dzone.
then there is the container integration which can optionally manage how jpa artifacts like entity managers and entity manager factories are provided, are injected into an application.
what we have for  the aries jta integration is the registration of jta services in the osgi  service registry.
and  services which are registered by osgi‑aware components on the other hand.
this reference of best practices and idiomatic solutions smoothly guides you to the next step of...
so the blueprint container is extended with the jpa container so that the  blueprint components that run inside the blueprint container can have their jpa  context managed for them by the blueprint container.
dzone: how does aries' jta and jmx integration work?
in this interview, recorded at  ibm impact 2010, ian talks about how apache aries relates to the osgi  framework, and its support for numerous java ee specs, including thejava  persistence api (jpa), the java transaction api (jta), and java management  extensions (jmx).
so, in that respect, apache aries is innovating because we're ahead of any standardization effort in the osgi alliance at the moment.
but i think, in terms of the work that we set out to do, to build initial  implementations of the enterprise expert group specifications, once we've got  our first release out there and we've demonstrated that we have a vibrant  community, then i think, within the next three or four months, i hope and  expect to see apache aries actually graduate from incubation.
for example, an osgi service registered in the service registry can also be made available for discovery through jndi by a jndi client.
dzone: how does aries differ from the osgi  framework?
things like provision of asynchronous services, perhaps  message‑driven blueprint endpoints, for example.
there's apache openjpa, which is the  jpa provider.
there's apache openjpa, which is the jpa provider.
and services which are registered by osgi‑aware components on the other hand.
i'm hoping, by the end of this week or next week, we'll have our first release out there.
and like  jpa, that we were talking about earlier on, we also have an integration of  transactions into the blueprint container as well.
which doesn't know anything about the osgi, on the one hand.
ian:  osgi is described across a number of different  specifications: there is an osgi core specification and then there are  implementations of the osgi core such as eclipse equinox, apache felix,  knopflerfish and others.
one of the other things that i think apache aries has a very  forward‑looking approach to is the assembly and deployment of  multi‑bundled applications.
so there's a nice integration between essentially loosely coupled components.
in that model, the application is managing the use of the entity manager  and it's association with any transaction context, for example.
then there is an enterprise osgi specification and that's where apache aries comes in.
dzone: how does aries'  jta and jmx  integration work?
ian:  arie's jta integration uses the transaction  manager in geronimo.
there are about eight services defined in the osgi jmx specification.
in a container managed environment, the container that the application component runs it, for example, a blueprint container can work with and discover jpa providers and inject entity managers from those jpa providers into an application, in order to process it's persistence units.
ian: we're just in the process at the moment of voting on our first release, so that will be about seven months after creating the beta project.
then there is the container integration which can optionally manage how jpa  artifacts like entity managers and entity manager factories are provided, are  injected into an application.
ian:  in an enterprise jar and certainly in the  enterprise osgi specification, there is a definition of how persistence should  be managed in an enterprise jar environment.
and that definition is to integrate jpa into an enterprise jar .
so that's jmx integration.
ian is a distinguished engineer at ibm  working out of the hursley lab in the uk.
in the jmx implementation in apache aries, we implement mbeans services so that you can use jmx to query aspects of a running osgi framework.
"what is the framework?
ian: where does java need to evolve?
that's essentially the summary of some of the core aspects.
there's an osgi compendium specification and generally speaking, most of the compendium services that are defined in the compendium spec are also implemented by felix and equinox.
there is an application usage model  where the application essentially finds a jpa provider, interacts with it to  create an entity manager factory and then uses the entity manager factory.
in the jmx implementation in apache aries, we implement mbeans services so  that you can use jmx to query aspects of a running osgi framework.
and like jpa, that we were talking about earlier on, we also have an integration of transactions into the blueprint container as well.
all from a remote jmx client.
attachment size (note: opinions expressed in this article and its replies are the opinions of their respective authors and not those of dzone, inc.)
dzone: can you tell us a little about your role at ibm?
aries interacts with geronimo, gets the transaction manager, puts it into the osgi service registry, and makes it available for applications.
and can run blueprint components under jta global transactions as well.
so technologies like jta, jndi, jpa, jmx and so on.
so from an open source and aries perspective, there are actually two open source projects that are relevant here.
so that's the transaction side of things.
things like provision of asynchronous services, perhaps message‑driven blueprint endpoints, for example.
ian: my primary interest at the moment is around osgi technologies and how they can be used in the application programming module in the websphere application server and indeed, beyond the websphere application server as well.
and our first release covers things like the application assembly model, jmx, j2ee blueprint container, the things i've spoken about already.
so from an open source and aries perspective, there are actually two open  source projects that are relevant here.
one aspect is the jpa provider.