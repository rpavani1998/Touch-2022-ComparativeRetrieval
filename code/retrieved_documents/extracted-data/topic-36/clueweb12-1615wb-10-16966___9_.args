although the standard ide is fine and provides out-of-the-box, ready-to-use, instant-rewarding experience, i'm missing features for serious more development, such as: parameters tips, jump to definition, object hierarchy browser, refactoring among others.i think qt provides a better solution to the problem java tries to solve and qt creator is an awesome ide.the last two solutions could address a larger number of ides, although they require customisation.but because chipkit boards offer much more power in mhz, i/os, memory,imho they deserve a more powerful ide with all the modern niceties.looking for a better ide posted: sun dec 11, 2011 1:28 pm joined: sat jul 16, 2011 10:19 am posts: 186 hi, the mpide provides an out-of-the-box, ready-to-use, instant-rewarding, stable and easy ide to build projects on both chipkit and arduino platforms.previous topic |next topic author message avenue33 post subject: looking for a better ide posted: sun dec 11, 2011 1:28 pm joined: sat jul 16, 2011 10:19 am posts: 186 hi, the mpide provides an out-of-the-box, ready-to-use, instant-rewarding, stable and easy ide to build projects on both chipkit and arduino platforms.don't get me wrong, netbeans or eclipse are both far superior to mpide.since mpide goes closer to arduino 1.0 and eclipse is available on windows / os x / linux, i hope the plug-in is going to address chipkit also.afaik, qt designer has the luxury of only providing support for c++, whereas, eclipse/netbeans support multiple languages.i've been looking around; here's what i've found so far: - full plug-ins like visual micro for visual studio or avr tool for eclipse - makefile, here, here and there but with many stability issues hard to solve because ofthat specific cryptic language, - command-line arduino ide like the ino project, which simulates the arduino ide pre-process and avoid the horrendous makefile.templates from xcode 3 are not upward compatible with xcode 4.tool for eclipse makefile, here, here and there but with many stability issues hard to solve because ofthat specific cryptic language, command-line arduino ide like the ino project, which simulates the arduino ide pre-process and avoid the horrendous makefile.i'm considering now ino, which simulates the hidden dirty work done by the standard arduino ide of pre-processing libraries, building, linking, and uploading.if it would be possible to do a really minimal implementation in netbeans, i would interested in making that happen.actually, i don't understand why each micro-controller board manufacturer supplies its own ide.