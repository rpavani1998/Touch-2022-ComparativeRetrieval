netbeans does have a plugin support, but the plug-in base is nothing compared to netbeans.
netbeans seem to provide everything i use out-of-the-box.
intellij looks shitty, but i has the best auto-compile and refactoring feature available out the.
netbeans however, is much more programmer oriented, and let's the ide to shape itself how you think, instead of shaping your thoughts to match the ide.
for example, if you want to create a jsf project, you can't do it using j2ee project.
netbeans doesn't have any file import feature.
tried intellij and oracle jdeveloper once, but jdeveloper is slow even in my pc (c2q q9550 2.83ghz, 4gb, intel g45).
the full netbeans package is 380mb with all the bells and whistle, which supports pretty much anything out of the box, but the full eclipse package (eclipse doesn't have an official full package, so created a package with similar functionalities as netbeans full package), well, about 1.3 gb.
netbeans has an excellent swing gui designer (matisse).
so if you're doing a highly customized job, eclipse will be your only choice.
there are so many plugins for one task that the programmer is left confused.
for example, if you want to develop android applications, eclipse may be your only choice.
there are so many plugins for one task that the programmer is left confused.
the setup of eclipse will have specific instructions from the it support people.
eclipse has a better refactoring support.
the full netbeans package is 380mb with all the bells and whistle, which supports pretty much anything out of the box, but the full eclipse package (eclipse doesn't have an official full package, so created a package with similar functionalities as netbeans full package), well, about 1.3 gb.
really, the issues with eclipse are more it-oriented than development-oriented.
if you trying to develop a web application in netbeans 6.8 and build and rebuild it so many times.
on the other hand, netbeans loads all of them pretty effortlessly.
unfortunately it wasn't free and the trial expired so i didn't get to test it that well.
of-course, sometimes the third-party plugins may cause it to crash.
so if you try to rename something, it won't mess up your whole code.
eclipse is by far the best ide in terms of plug-in support.
tried intellij and oracle jdeveloper once, but jdeveloper is slow even in my pc (c2q q9550 2.83ghz, 4gb, intel g45).
so if you need a custom build-file, but don't know ant scripting, you're in trouble.
netbeans however, is much more programmer oriented, and let's the ide to shape itself how you think, instead of shaping your thoughts to match the ide.
it's very annoying sometimes.
enter your email address to subscribe to this blog and receive notifications of new posts by email.
although i prefer netbeans, i use both of them, to harvest the strengths of both.
netbeans however, isn't as rock solid as eclipse.
so if you try to rename something, it won't mess up your whole code.
although i prefer netbeans, i use both of them, to harvest the strengths of both.
usability the usability of eclipse is a hell.
another thing is the auto-compile feature, which on the fly compiles your code as you type and gives you instant feedback on errors.
this is where eclipse really triumphs.
speed well, many of us are under the impression that eclipse is faster.
eclipse have some tools for gui designing, but they're nothing compared to matisse.
unfortunately it wasn't free and the trial expired so i didn't get to test it that well.
and if you try to load eclipse with that many plugins, it'll eat up about 1 gb of memory instantly, and the loading time is, well, i've never managed to load eclipse, because it crashes.
the best eclipse plugins may not always be free (for example zend).
user-view eclipse is more tool oriented, where netbeans is more programmer oriented.
you'll have to spend more time configuring eclipse, than working with your project.
and if you try to load eclipse with that many plugins, it'll eat up about 1 gb of memory instantly, and the loading time is, well, i've never managed to load eclipse, because it crashes.
netbeans provides everything out-of-the-box, and integrates seamlessly with anything you throw at it.
the previous releases frequently crashed, though the newer ones (after 6) almost never crash.
but the reason for this is probably because netbeans loads a lot more plugins than eclipse does.
netbeans however, isn't as rock solid as eclipse.
netbeans provides everything out-of-the-box, and integrates seamlessly with anything you throw at it.
it will soon give an error not on compile but on some other stuff like junit.
the basic netbeans java package is slower than the basic eclipse j2ee package.
it's easier to code using netbeans.
for example, if you want to create a jsf project, you can't do it using j2ee project.
of-course, sometimes the third-party plugins may cause it to crash.
tips interesting comparison.
the previous releases frequently crashed, though the newer ones (after 6) almost never crash.
if youâ€™re working in a company, there is likely to be someone to do all of that configuration stuff.
the basic netbeans java package is slower than the basic eclipse j2ee package.
in slower machines eclipse works much better.
eclipse have some tools for gui designing, but they're nothing compared to matisse.
on the other hand, netbeans loads all of them pretty effortlessly.
another thing is the auto-compile feature, which on the fly compiles your code as you type and gives you instant feedback on errors.
i'm new in java and i really don't need that many features.
intellij looks shitty, but i has the best auto-compile and refactoring feature available out the.
netbeans does have a plugin support, but the plug-in base is nothing compared to netbeans.
eclipse is by far the best ide in terms of plug-in support.
so if you're doing a highly customized job, eclipse will be your only choice.
you'll have to spend more time configuring eclipse, than working with your project.
i'm new in java and i really don't need that many features.
netbeans seem to provide everything i use out-of-the-box.
but the reason for this is probably because netbeans loads a lot more plugins than eclipse does.
for example, if you want to develop android applications, eclipse may be your only choice.
so if you need a custom build-file, but don't know ant scripting, you're in trouble.
the autofix isn't present in netbeans.
the autofix isn't present in netbeans.