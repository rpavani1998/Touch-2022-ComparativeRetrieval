so they're pretty stable right now.
and if you try to load eclipse with that many plugins, it'll eat up about 1 gb of memory instantly, and the loading time is, well, i've never managed to load eclipse, because it crashes.
because it's easier to use  for me.
the setup of eclipse will have specific instructions from the it support people.
user-view eclipse is more tool oriented, where netbeans is more programmer oriented.
web toolbar by wibiya
so if you need a custom build-file, but don't know ant scripting, you're in trouble.
for example, if you want to develop android applications, eclipse may be your only choice.
there's no  clear winner here.
i've been learning java for little over a year now
you'll have to open a dynamic web project to do this.
in slower machines eclipse works much better.
tips interesting comparison.
i'm new in java and i really don't need that many features.
but there's no answer.
the autofix isn't present in  netbeans.
another thing is the auto-compile feature, which on the fly compiles your code as you type and gives you instant feedback on errors.
netbeans however, requires much less configuring, and in most of the cases, it configures itself, and configures itself correctly.
it has millions of plugins, though not all of them work well.
posted on april 14, 2011  by fatelectron
there's no clear winner here.
netbeans has an excellent swing gui designer (matisse).
and if you try to load eclipse with  that many plugins, it'll eat up about 1 gb of memory instantly, and the loading  time is, well, i've never managed to load eclipse, because it crashes.
finally, which one do i prefer?
tried intellij and oracle jdeveloper once, but jdeveloper is slow even in my pc (c2q q9550 2.83ghz, 4gb, intel g45).
these tool oriented view is sometimes very confusing.
usability the usability of eclipse is a hell.
if you trying to develop a web application in netbeans 6.8 and build and rebuild it so many times.
you'll have to spend more time configuring eclipse, than working with your project.
unfortunately it wasn't free and the trial expired so i didn't get to test it that well.
which one is better?
and the most ironic thing  is, you're left on your own to choose the best plugin.
i've been learning  java for little over a year now
netbeans vs eclipse – which one is better?
i did some test on my own with both of them.
so i'm gonna  post some opinions about eclipse and netbeans focusing on some specific  criteria.
netbeans does have a plugin support,  but the plug-in base is nothing compared to netbeans.
of-course, sometimes  the third-party plugins may cause it to crash.
stabilty there's no question about the stability of eclipse.
really, the issues with eclipse are more it-oriented than development-oriented.
for example, if you want to create a jsf project, you can't do it using j2ee project.
but the official packages are  extremely stable.
netbeans did try to implement something like this, but  eclipse is much better.
although i prefer netbeans, i use both of them, to harvest the strengths of both.
the basic netbeans java package is slower  than the basic eclipse j2ee package.
netbeans however,  requires much less configuring, and in most of the cases, it configures itself,  and configures itself correctly.
if you’re working in a company, there is likely to be someone to do all of that configuration stuff.
netbeans did try to implement something like this, but eclipse is much better.
so i'm gonna post some opinions about eclipse and netbeans focusing on some specific criteria.
give both of them a try, and use the one you like the most.
unfortunately it wasn't  free and the trial expired so i didn't get to test it that well.
it's essentially built on a plug-in oriented architecture.
this is where eclipse really triumphs.
of-course, sometimes the third-party plugins may cause it to crash.
speed well, many of us are under the impression that eclipse is faster.
netbeans does have a plugin support, but the plug-in base is nothing compared to netbeans.
you'll have to open a dynamic web  project to do this.
you'll have to spend more time  configuring eclipse, than working with your project.
i'd say its second only to firefox, which is not a ide at all.
eclipse has a better refactoring support.
enter your email address to subscribe to this blog and receive notifications of new posts by email.
i'd  say its second only to firefox, which is not a ide at all.
so if you try to rename  something, it won't mess up your whole code.
i did some  test on my own with both of them.
because it's easier to use for me.
intellij looks shitty, but i has the best  auto-compile and refactoring feature available out the.
for example, if you want to create a jsf  project, you can't do it using j2ee project.
the best eclipse plugins may not always be free (for example zend).
eclipse is by far the best ide in terms of  plug-in support.
14 april netbeans and eclipse are the two most popular java ides.
but the official packages are extremely stable.
posted on april 14, 2011 by fatelectron 2 comments category:
eclipse is somewhat too flexible for me.
it will soon give an error not on compile but on some other stuff like junit.
and i would like to share my opinions about them.
and the most ironic thing is, you're left on your own to choose the best plugin.
misc eclipse requires you to write your ant script by yourself.
so if you're doing a highly customized job, eclipse will be your only choice.
so if you try to rename something, it won't mess up your whole code.
the full netbeans  package is 380mb with all the bells and whistle, which supports pretty much  anything out of the box, but the full eclipse package (eclipse doesn't have an  official full package, so created a package with similar functionalities as  netbeans full package), well, about 1.3 gb.
misc eclipse requires you to write your ant script by  yourself.
some of the criticisms aimed at eclipse could be mitigated by the environment that you develop in.
although i prefer netbeans, i use both of them, to harvest the strengths of  both.
netbeans however, is much more programmer oriented, and let's the ide to shape itself how you think, instead of shaping your thoughts to match the ide.
the previous releases frequently crashed, though the newer ones (after 6) almost never crash.
on the  other hand, netbeans loads all of them pretty effortlessly.
but the reason for this is probably  because netbeans loads a lot more plugins than eclipse does.
the full netbeans package is 380mb with all the bells and whistle, which supports pretty much anything out of the box, but the full eclipse package (eclipse doesn't have an official full package, so created a package with similar functionalities as netbeans full package), well, about 1.3 gb.
there are so many plugins  for one task that the programmer is left confused.
for example, if you want  to develop android applications, eclipse may be your only choice.
so if you're doing a  highly customized job, eclipse will be your only choice.
on the other hand, netbeans loads all of them pretty effortlessly.
so if you need a custom build-file, but don't know ant scripting,  you're in trouble.
netbeans seem to provide everything i use out-of-the-box.
netbeans provides everything out-of-the-box,  and integrates seamlessly with anything you throw at it.
but the reason for this is probably because netbeans loads a lot more plugins than eclipse does.
netbeans provides everything out-of-the-box, and integrates seamlessly with anything you throw at it.
intellij looks shitty, but i has the best auto-compile and refactoring feature available out the.
eclipse have some tools for gui designing, but they're nothing compared to matisse.
that  however, is arguable.
it has millions of  plugins, though not all of them work well.
although eclipse did have a bug in the helios release involving auto-complete, it was fixed in sr1.
that however, is arguable.
there are so many plugins for one task that the programmer is left confused.
netbeans however, isn't as rock  solid as eclipse.
netbeans doesn't have any file import feature.
i'm new in java and i really  don't need that many features.
the previous releases frequently crashed, though the newer  ones (after 6) almost never crash.
netbeans however, isn't as rock solid as eclipse.
the autofix isn't present in netbeans.
eclipse is by far the best ide in terms of plug-in support.
tried  intellij and oracle jdeveloper once, but jdeveloper is slow even in my pc (c2q  q9550 2.83ghz, 4gb, intel g45).
eclipse have some  tools for gui designing, but they're nothing compared to matisse.
netbeans however, is much more programmer oriented, and let's the ide to shape  itself how you think, instead of shaping your thoughts to match the ide.
it's very annoying sometimes.
i use both eclipse and netbeans, for two different purposes.
and i would like to share my opinions about  them.
another thing is the auto-compile  feature, which on the fly compiles your code as you type and gives you instant  feedback on errors.
this is a trivial question.
the basic netbeans java package is slower than the basic eclipse j2ee package.
although eclipse did have a bug in the helios release  involving auto-complete, it was fixed in sr1.
netbeans seem to provide everything i use  out-of-the-box.
© 2012 code explosion's blog.
it's easier to code using netbeans.