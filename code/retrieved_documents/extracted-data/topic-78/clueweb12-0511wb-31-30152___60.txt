this parallels the behavior of usevis-a-vis import.
applied at compile-time.)
the only even digit, 4, will come first.
the module is contained  within tie::refhash.
multithreaded code should be migrated  to the new ithreads model (seethe threads manpage, the threads::shared manpage  andthe perlthrtut manpage).
seethe net::ftp manpage, the net::nntp manpage,  the net::ping manpage (not part of libnet, but related), the net::pop3 manpage,  the net::smtp manpage, and the net::time manpage.
the following tests fail on 5.8.0 perl in beos personal 5.03: t/op/lfs............................failed at test 17 t/op/magic..........................failed at test 24 ext/fcntl/t/syslfs..................failed at test 17 ext/file/glob/t/basic...............failed at test 3 ext/posix/t/sigaction...............failed at test 13 ext/posix/t/waitpid.................failed at test 1
which 1 comes first is hard to know, since one 1 looks  pretty much like any other.
eventually, the problem gets whittled down to one that fits in the cache, from which point it benefits from the increased memory speed.
in many platforms, the vendor-supplied 'cc' is too stripped-down to  build perl (basically, 'cc' doesn't do ansi c).
(the case-insensitivity used to confuse the perl build process.)
this file is supposed to be used by hints file writers for architecture-wide changes (as opposed to config.over which is for site-wide changes).
the identifier "bad" is undefined.
the changes file for exhaustive details on what changed.
tie/file/t/31_autodefer.t 255 65280 65 32 49.23% 34-65 ../lib/autouse.t
in future releases of perl the forms will become  fatal errors so consider starting laundering now.
# "=de=ad=be=ef\n" print $decoded, "\n"; # "\xde\xad\xbe\xef\n" see also the perlio::via::quotedprint manpage.
if you have used that feature to disallow all but fully qualified variables, use strict;instead.
[561] the perl parser has been stress tested using both random input and  markov chain input and the few found crashes and lockups have been fixed.
more details are inperformance enhancements.
it does not taint the result of floating point formats anymore, making the behaviour consistent with that of string interpolation.
you can now override the readline() builtin, and this  overrides also the  angle bracket operator.
the lexical warnings category ``deprecated'' is no longer a sub-category of the ``syntax'' category.
any encoding supported by encode module is also available to the  ``:encoding()'' layer if perlio is used.
locale::constants, locale::country, locale::currency locale::language, and the locale::script  manpage, by neil bowers, have been added.
eastern asian perl users are now welcomed in their own languages: readme.jp  (japanese), readme.ko (korean), readme.cn (simplified chinese) and readme.tw  (traditional chinese), which are written in normal pod but encoded in euc-jp,  euc-kr, euc-cn and big5.
as a stop-gap measure to avoid people from getting frustrated at the  mysterious results (core dumps, most often), it is forbidden for now (you will  get a fatal error even from an attempt).
seethe hash::util manpage.
the core-dumping functionality will remain in future available as an explicit call to core::dump(), but in future releases the behaviour of an unqualified dump()call may change.
b::deparse has been significantly enhanced by robin houston.
are marked as utf-8.
rather than relying on c's argv[0] (which may not contain a full  pathname) where possible $^x is now set by asking the operating system.
perl used to be fragile in that signals arriving at inopportune moments could corrupt perl's internal state.
[561] line renumbering with eval and #linenow works.
seen in perl 5.7 but gone now time::piece (previously known as time::object)  was removed because it was felt that it didn't have enough value in it to be a  core module.
the long deprecated uppercase aliases for the string comparison operators (eq, ne, lt, le, ge, gt) have now been removed.
because of the large number of tests, running the regression suite will  take considerably longer time than it used to: expect the suite to take up to  4-5 times longer to run than in perl 5.6.
one reason of this unfinishedness is its (currently) inherent unportability: since both package names and subroutine names may need to be mapped to file and directory names, the unicode capability of the filesystem becomes important-- and there unfortunately aren't portable answers.
perl has been tested with the gnu pth userlevel thread package (  http://www.gnu.org/software/pth/pth.html ).
the gconvert macro ($config{d_gconvert}) used by perl for  stringifying floating-point numbers is now more picky about using sprintf %.*g
use of v-strings in use/require causes a (backward) portability warning.
the ``unrecognized escape'' warning has been extended to include \8, \9, and \_.
in any case, the change will break existing code that relies on the current (ill-defined) semantics, so just avoid doing this in general.
the debugger has a new dumpdepth option to control the  maximum depth to which nested structures are dumped.
seethe test::more manpage.
you can now override the readline()builtin, and this overrides also the  angle bracket operator.
h2xsuses the new extutils::constant module which will affect newly created extensions that define constants.
it can be used for example for vendor add-ons without disturbing  perl's own library directories.
this didn't do anything useful, as the sort was not performed.
failed at test 1  lib/test/harness/t/strap-analyze.....failed at test 8  lib/test/harness/t/test-harness......failed at test 23  lib/test/simple/t/exit...............failed at test 1 the above failures are known as of 5.8.0 with native builds with long  filenames, but there are a few more if running under dosemu because of  limitations (and maybe bugs) of dosemu: t/comp/cpp...........................
local($tied_hash{foo})
threads, by arthur bergman, is an interface to  interpreter threads.
[561] please see the perldiag manpage for more details.
infinity is now recognised as a number.
installation and configuration improvements generic improvements install now explains how you can configure perl to use 64-bit  integers even on non-64-bit platforms.
just by saying use switch; you have switch and case available in perl.
its semantics were never that clear and its  implementation even less so.
the older name is still available for compatibility, but is deprecated.
unicos fixed various alignment problems that lead into core dumps either during  build or later; no longer dies on math errors at runtime; now using full quad  integers (64 bits), previously was using only 46 bit integers for speed.
after years of trying, suidperl is considered to be too complex to  ever be considered truly secure.
this version of perl detects this brokenness  and has a workaround for it.
each unquoted argument will be automatically quoted to protect whitespace, and any existing whitespace in the arguments will be preserved.
while some limited functionality towards this does exist as of perl 5.8.0, that is more accidental than designed; use of unicode for the said purposes is unsupported.
it  seems that for some reason ``make install'' doesn't always completely overwrite  the files in /library/perl.
in search::dict one can now have a pre-processing hook for the lines  being searched.
[561] the regular expression captured submatches ($1, $2, ...) are now more consistently unset if the match fails, instead of leaving false data lying around in them.
the undocumented pack/unpack template letters d/f have been recycled for better use: now they stand for long double (if supported by the platform) and nv (perl internal floating point type).
using sort in scalar context now issues an optional  warning.
[561] file access tests now use current process privileges rather than the user's  default privileges, which could sometimes result in a mismatch between reported  access and actual access.
layers can be specified at open time via 3-arg form of open: open($fh,'>:crlf :utf8', $path) ||
this may cause new warnings when modules are being installed.
perlcchas been rewritten and its user interface (that is, command line) is much more like that of the unix c compiler, cc.
failed tests 128-130 op/pack...............................failed tests 25-5625 op/pow................................ op/taint..............................
the socket extension is now dynamically loaded instead of being statically  built in.
[561] the debugger (perl5db.pl) has been modified to present a more consistent commands interface, via (commandset=580).
in sys::syslog there is now a failover mechanism that will go through alternative connection mechanisms until the message is successfully logged.
[561] regular expression debug output (whether through use re 'debug'or via -dr) now looks better.
64-bit platforms and malloc if your pointers are 64 bits wide, the perl malloc is no longer being used  because it does not work well with 8-byte pointers.
you can set the environment variable perl_test_net_ping to ``1'' (one) before  running the perl test suite to enable all the net::ping tests.
if building perl with interpreter threads (ithreads), the getgrent(), getgrnam(), and getgrgid()functions cannot return the list of the group members due to a bug in the multithreaded support of unicos/mk.
amigaos perl 5.8.0 doesn't build in amigaos.
seethe tie::file manpage.
z/os (os/390) z/os has rather many test failures but the situation is actually much  better than it was in 5.6.0; it's just that so many new modules and tests have  been added.
this  probably means that you are trying to use an older shared perl library (or  extensions linked with such) with perl 5.8.0 executable.
and, for sufficiently large slices of pi, the  quicksort algorithm in perl 5.8 won't return the same results even if reinvoked  with the same input.
[561] can now send() from all threads, not just the first  one.
...anonymous temporary files are available without need to 'use filehandle' or other module via open($fh,"+>", undef) ||
rules for the conversion.
digest, frontend module for calculating digests (checksums), from gisle aas, has been added.
warnings relating to the use interpreter threads and their shared  data have been added.
sort() arguments are now compiled in the right  wantarray context (they were accidentally using the context of thesort() itself).
the utf8:: name space (as in the pragma) provides  various perl-callable functions to provide low level access to perl's internal  unicode representation.
this has been reversed to be in the right order.
the utf8::name space (as in the pragma) provides various perl-callable functions to provide low level access to perl's internal unicode representation.
this is the recommended method to build perl on vos.
... or on already opened handles via extended binmode: binmode($fh,':encoding(iso-8859-7)'); the built-in layers are: unix (low level read/write), stdio (as in previous  perls), perlio (re-implementation of stdio buffering in a portable manner),
socket/socketpair..............failed tests 12  ../lib/ipc/sysv.......................failed tests 2, 5-6  ../lib/warnings.......................failed tests 115-116, 118-119 the op/pack failure (``cannot compress negative numbers at op/pack.t line  126'')
more appropriate mechanisms for selecting the implementation exist, but they wouldn't have arrived in time to save quicksort.
it does not taint the result of floating point formats anymore,  making the behaviour consistent with that of string interpolation.
use warnings qw(fatal all)did not work as intended.
but quicksort was rescued at the last moment because it is faster than mergesort on certain inputs and platforms.
(for space considerations, the largest chinese encodings have been separated into their own cpan module, encode::hanextra, which encode will use if available).
seethe win32 manpage for details.
see the perlunicode  manpage for details, and more additions.
the c code has been made much more gcc -wallclean.
because perlio is now the default on most platforms, ``-perlio''
ncr mp-ras is now supported.
the older  methods, which build miniperl, are still available.
pod::parselink, by russ allbery, has been added, to parse l<> links in pods as described in the new perlpodspec.
if that doesn't help, you may have to try removing all the .bundle files from beneath /library/perl, and again ``make install''-ing.
this was caused by perl's  using the operating system libraries in a situation where the result of the  string to number conversion is undefined: now perl consistently handles such  strings as zero in numeric contexts.
there is a make target called ``perl.gprof'' for  generating a gprofiled perl executable.
which 1 comes first is hard to know, since one 1 looks pretty much like any other.
/anydbm_file.t 2 512 12 2  16.67% 1 4 ../lib/
if you have gcc 3, there is a make target called ``perl.gcov'' for  creating a gcoved perl executable for coverage analysis.
use term::readkey 2.20 or later.
mime::base64, by gisle aas, allows you to encode data  in base64, as defined in rfc 2045 -mime
multithreaded code should be migrated to the new ithreads model (seethe threads manpage, the threads::shared manpage andthe perlthrtut manpage).
s2p has been completely rewritten in perl.
xsubppnow understands pod documentation embedded in the *.xs files.
these documents usually detail one or more of the following subjects:  configuring, building, testing, installing, and sometimes also using perl on  the said platform.
chdir(``'')and chdir(undef)now give a deprecation warning because they cause a possible unintentional chdir to the home directory.
numerous memory leaks and uninitialized memory accesses have been hunted down.
digest::md5for calculating md5 digests (checksums) as defined in rfc 1321, from gisle aas, has been added.
z/os (formerly known as os/390, formerly known as mvs oe) now has  support for dynamic loading.
made possible to propagate customised exceptions via croak()ing.
[561] the debugger (perl5db.pl) has been modified to present a more  consistent commands interface, via (commandset=580).
the package;syntax ( packagewithout an argument) has been deprecated.
configure -duseithreads) because it wouldn't work anyway (the thread extension requires being configured with -duse5005threads).
this may cause new warnings  when modules are being installed.
because in effect storable does serialisation of perl  data structures, with it you can also clone deep, hierarchical datastructures.
perl installation leaves libnet unconfigured; use libnetcfg to  configure it.
in case of failure please try running them manually, for example ./perl
to call the latter, qualify the call as &dump(...).
your bug report, along with the output of perl -v, will be sent off to perlbug@perl.org to be analysed by the perl porting team.
[561] sys::syslog ignored the log_authconstant.
[561] sort() has been changed to use primarily mergesort  internally as opposed to the earlier quicksort.
``lslpp  -l|grep vac.
socks support is now much more robust.
the c code has been made much more gcc -wall clean.
it is the little brother of -t: instead of dying on taint violations, lexical warnings are given.
in sdbm_file on dosish platforms, some keys went missing because of  lack of support for files with ``holes''.
benchmark.t lib/memoize/t/expmod_t.t lib/memoize/t/speed.t
see the perlunicode manpage for details, and more additions.
io::socket::inet now supports a value of zero for localport(usually meaning that the operating system will make one up.)
using the /g modifier in split() is meaningless and  will cause a warning.
(they used to be aliases for d/f, but you never knew that.)
better unc path handling under ithreads.
please remember to set your environment variable lc_all to ``c'' (setenv lc_all c) before running ``make test'' to avoid a lot of warnings about the broken locales of mac os x.
perl now tries internally to use integer values in numeric conversions and basic arithmetics (+ - * /) if the arguments are integers, and tries also to keep the results stored internally as integers.
with the quicksort algorithm used to  implement perl 5.6 and earlier, the order of ties is left up to the sort.
[561] the behaviour of non-decimal but numeric string constants such as  ``0x23'' was platform-dependent: in some platforms that was seen as 35, in some  as 0, in some as a floating point number (don't ask).
since in many systems the standard  number parsing functions likestrtoul() and atof() seem to have bugs, perl tries to work around their deficiencies.
dofollowed by a bareword now ensures that this bareword isn't a keyword (to avoid a bug where do q(foo.pl)tried to call a subroutine called q).
it broke at some point during the  ithreads work and we could not find amiga experts to unbreak the problems.
this is caused by the characters \xff
the most notable omission, for space  considerations, is the unihan database.
[561] deprecations the semantics of bless(ref, ref) were unclear and until someone  proves it to make some sense, it is forbidden.
tied hash interfaces are now required to have the exists and delete methods (either own or inherited).
it now works as documented.
[561] wait(), waitpid(), and backticks now return the correct exit status  under windows 9x.
all regular expression compilation error messages are now hopefully easier to understand both because the error message now comes before the failed regex and because the point of failure is now clearly marked by a {bar}has been deprecated for a while.
eval "v200"now works.
this change leads to often  slightly faster and always less lossy arithmetics.
perlio is the default configuration because without it many new features of perl 5.8 cannot be used.
the (bogus) escape sequences \8 and \9 now give an optional warning (``unrecognized escape passed through'').
h2xs now uses devel::ppport for better  portability between different versions of perl.
examples include any platform using sfio, and compaq/tandem's nonstop-ux.
the difference between scripts and blocks is that scripts are the glyphs used by a language or a group of languages, while the blocks are more artificial groupings of (mostly) 256 characters based on the unicode numbering.
the readme file for general stuff.
the following tests are known to fail on super-ux: op/64bitint...........................failed tests 29-30, 32-33, 35-36  op/arith..............................
(perlunicode is more of a detailed reference and background information) perlutil explains the command line utilities packaged with the perl distribution.
this shouldn't be too difficult for module authors, however: perlio has been designed as a drop-in replacement (at the source code level) for the stdio interface.
tie::refhash::nestable, by edward avis, allows storing hash references (unlike the standard tie::refhash)
open($fh,">:utf8","uni.txt"); note for ebcdic users: the pseudo layer ``:utf8'' is erroneously named for you since it's not utf-8 what you will be getting but instead utf-ebcdic.
for example: open kid_ps, "-|", "ps", "aux" or die $!; forks the ps(1) command (without spawning a shell, as there  are more than three arguments to open()), and reads its standard output via the kid_ps filehandle.
[561] caller()could cause core dumps in certain situations.
(redhat linux/alpha with gcc 3.1 reported no problems, as did linux 2.4.18 with gcc 2.95.4.)
so the 5.8 quicksort scrambles large arrays before sorting them, as a statistical defence against quadratic behaviour.
the command-line options -s and -f are now recognized on the shebang  (#!) line.
see the perldebguts manpage  for more complete information.
the output is highly customisable.
for example printf "%2\$s %1\$s\n", "foo", "bar"; will print ``bar foo\n''.
seethe extutils::makemaker manpage for more details.
-ilib ext/time/hires/hires.t tied/magical array/hash elements do not autovivify
[561] linux previously had problems related to sockaddrlen when using  accept(),recvfrom() (in perl: recv()), getpeername(), and  getsockname().
stratus vos the native build method requires at least vos release 14.5.0 and gnu  c++/gnu tools 2.0.1 or later.
and odbm_file just coredumps.
[561] pos()did not return the correct value within s///ge in earlier versions.
platform specific changes and fixes bsdi 4.
new unicode properties unicode scripts are now supported.
after configure has finished, you can just say make all test and perl will be built and tested, all in perl/build/directory.
perl will now first finish whatever it was doing,  like finishing an internal operation (likesort()) or an external  operation (like an i/o operation), and only then look at any arrived signals  (and before starting the next operation).
these are not new failures--perl 5.005_0x has  the same bugs, but didn't have these tests.
*foo{format}now works.
file handles can be marked as accepting perl's internal encoding of  unicode (utf-8 or utf-ebcdic depending on platform) by a pseudo layer ``:utf8''  : open($fh,">:utf8","uni.txt"); note for ebcdic users: the pseudo layer ``:utf8'' is erroneously named for  you since it's not utf-8 what you will be getting but instead utf-ebcdic.
if one attempts the  test on a fat install (or build) the following failures are expected: ../ext/
[561] printing quads (64-bit integers) with printf/sprintf now works  without the q l ll prefixes (assuming you are on a quad-capable platform).
data::dumper now has an option to dump code references using b::deparse.
[561] use of $& could trigger a core dump under some situations.
xs::typemap, by tim jenness, is a test extension that  exercises xs typemaps.
additional bonuses are that the worst case behaviour of sort()is now better (in computer science terms it now runs in time o(n log n), as opposed to quicksort's theta(n**2)worst-case run time behaviour), and that sort()is now stable (meaning that elements with identical keys will stay ordered as they were before the sort).
pack/unpack d/f recycled the undocumented pack/unpack template letters d/f have been recycled for  better use: now they stand for long double (if supported by the platform) and  nv (perl internal floating point type).
unicode in general should be now much more usable than in perl 5.6.0 (or even in 5.6.1).
open($fh,'>:crlf :utf8', $path) ||
[561] prototype(\[$@%&]) is now available to implicitly  create references (useful for example if you want to emulate thetie() interface).
support for unicode, iso-8859-1, and ascii are compiled in to the module.
[561] io::socket::inet has support for the reuseport option (if your platform supports it).
for the full list of the available apis see the perlapi manpage.
this is caused by darwin's ufs not supporting  inode change time.
io::socket now has an atmark()method, which returns true if the socket is positioned at the out-of-band mark.
one can have unicode in identifier names, but not in package/class or subroutine names.
extutils::makemaker now uses file::spec internally, which hopefully leads to better portability.
for similar functionality, see pack('u0', ...) and pack('c0', ...).
file handles can be opened to ``in memory'' files held in perl  scalars via: open($fh,'>', \$variable) ||
[561] solaris 64-bitness using the sun workshop compiler now works.
perlio is now the default io is now by default done via perlio rather than system's ``stdio''.
seethe perlthrtut manpage for more information.
the only  remaining use of ``use utf8'' is when the perl script itself has been written  in the utf-8 encoding of unicode.
if your platform supports fork(), you can use the list form of openfor pipes.
see ``new unicode properties'' earlier in this document for additional  information on changes with unicode properties.
stratus vos is now supported using perl's native build method  (configure).
on the  other hand, perl will now execute code such assystem("c:/program  files/myapp/foo.exe", @args) correctly.
for example, if you reallydon't care about the order of  even and odd digits, quicksort will run ino(n) time; it's very  good at sorting many repetitions of a small number of distinct elements.
in 5.10, it is expected to be  removed.
so, as you add more and more digits of pi, the order in which the sorted even and odd digits appear will change.
in order to be more consistent with the return value of  ref().
ndbm_file/ndbm.t 13 3328 71 59 83.10% 1-2 4 16-71  ../ext/
[561+] filter::util::call, by paul marquess, provides you with  the framework to writesource filters in perl.
saychdir() if you really mean that.
hp-ux readme.hpux updated; configure -duse64bitall now works; now uses hp-ux malloc instead of perl malloc.
if you configure with ithreads, ext/threads/t/libc.t will fail.
this particular test stress tests thelocaltime() call  to find out whether it is threadsafe.
note that after this perl really does assume that everything is utf-8: for example if some input handle is not, perl will probably very soon complain about the input data like this ``malformed utf-8 ...''
for more information, seehttp://www.unicode.org/ .
if your platform supports fork(), you can use the list form of open for pipes.
unicode scripts are now supported.
in general a lot of fixing has happened in the area of perl's understanding of numbers, both integer and floating point.
note that after this perl really does assume that everything is utf-8: for  example if some input handle is not, perl will probably very soon complain  about the input data like this ``malformed utf-8 ...''
* perl now works on post-4.0 bsd/oses.
perl used to have such  a subroutine, but that is no more the case.
the iso 8859-15 locales may fail the locale test 117 in freebsd.
tied hash interfaces are now required to have the exists and delete  methods (either own or inherited).
db_file now supports newer berkeley db versions, among other  improvements.
seethe unicode::ucd manpage.
dthr and djsp have been obsoleted; the former removed (because it's  a no-op) and the latter replaced with dsp.
a failure (think chdir(some_function()) can lead into unintended chdir() to  the home directory, therefore this behaviour is deprecated.
the suidperl functionality is likely to be  removed in a future release.
see the perlipc manpage.
the english module can now be used without the infamous performance  hit by saying use english '-no_match_vars'; (assuming, of course, that you don't need the troublesome variables $` , $&, or $'.)
this is known problem with cygwin, and a  workaround is detailed in here: http://sources.redhat.com/ml/cygwin/2001-12/msg00894.html cygwin ndbm tests fail on fat one can build but not install (or test the build of) the ndbm_file on fat  filesystems.
failed test stat wstat total fail failed list of failed  ---------------------------------------------------------------------------  ../ext/data/dumper/t/dumper.t 357 8 2.24% 311 314 325 327 331 333 337 339  ../ext/io/lib/io/t/io_unix.t 5 4 80.00% 2-5 ../ext/
(well, at least the  built-in attributes.)
the main rationale was to have thread modules to  obey normal naming,thread:: (the threads and threads::shared themselves are more pragma-like, they affect  compile-time, so they stay lowercase).
you can see the correct behaviour by  replacing the 1..5 with 1, 2, 3, 4, 5.
since perlio is a drop-in replacement for stdio at the source code level, this shouldn't be that drastic a change.
now you will get an optional warning.
perlbugis now much more robust.
see also the perlio::via::quotedprint manpage.
some memory-hungry perl applications like the pdl don't work well with perl's malloc.
[561] configure no longer includes the dbm libraries (dbm, gdbm, db, ndbm) when building the perl binary.
in the ithreads model any data sharing between threads must be explicit, as opposed to the model where data sharing was implicit.
this means that for example instead of do format()you must write do &format().
seethe perlembed manpage.
if you have cpan access (either network or a local copy such as a cd-rom) you can during specify extra modules to configure to build and install with perl using the -dextras=... option.
posix::sigaction() is now much more flexible and robust.
xs::apitest, by tim jenness, is a test extension that exercises xs apis.
unicode::collate, by sadahiro tomoyuki, implements the  uca (unicode collation algorithm) for sorting unicode strings.
large unsigned numbers (those above 2**31) could sometimes lose  their unsignedness, causing bogus results in arithmetic operations.
the only exception to this is sunos 4.x, which needs them.
the main rationale was to have all core perlio layers to have all lowercase names.
memoize can make your functions faster by trading space  for time, from mark-jason dominus.
the return value of cwd::fastcwd() is now tainted.
time::hires, by douglas e. wegscheid, provides high  resolution timing (ualarm, usleep, and gettimeofday).
see the perluniintro manpage for the explanation of the current model, and the utf8 manpage for the current use of the utf8 pragma.
you can see the list of changes in the 5.6.1 release (both from the 5.005_03 release and the 5.6.0 release) by readingthe perl561delta manpage.
the comparison block is now run in scalar context, and the  arguments to be sorted are always provided list context.
myvariables now handled at run-time use utf8, almost) ref(...)instead of scalar(...)
carp now has better interface documentation, and the @carp_not interface has been added to get optional control over where errors are reported independently of @isa, by ben tilly.
you can regard this as totally trivial, or somewhat profound.
[561] a socket handle leak in accept() has been fixed.
again, this  is not perl's fault-- the libc of mac os x is not threadsafe (in this  particular test, thelocaltime() call is found to be threadunsafe.)
the exec list and system list operations  now produce warnings on tainted data and in some future release they will  produce fatal errors.
so the  extensions that are having problems can try configuring themselves without the  largefileness.
if building perl with interpreter threads (ithreads), the  getgrent(), getgrnam(), andgetgrgid() functions cannot return the  list of the group members due to a bug in the multithreaded support of  unicos/mk.
[561] zero entries were missing from the unicode classes such as isdigit.
[561] configure support for pdp11-style memory models has been removed due  to obsolescence.
building extensions can fail because of largefiles some extensions like mod_perl are known to have issues with `largefiles', a  change brought by perl 5.6.0 in which file offsets default to 64 bits wide,  where supported.
package mypack; use attribute::handlers; sub wolf :attr(scalar) { print "howl!\n" } # later, in some package using or inheriting from mypack... my mypack $fluffy : wolf; # the attribute handler wolf will be called both variables and routines can have attribute handlers.
use mime::base64; $encoded =
encode, originally by nick ing-simmons and now maintained by dan kogai, provides a mechanism to translate between different character encodings.
the justification for this rests with quicksort's worst  case behavior.
(multipurpose internet mail  extensions).
[561] some cases of inconsistent taint propagation (such as within hash  values) have been fixed.
unicode support on ebcdic still spotty though mostly working, unicode support still has problem spots on ebcdic  platforms.
open($fh,'>', \$variable) ||
it also serves as an example of a loadable perlio layer.
non-blocking waits for child processes (or pseudo-processes) are  supported viawaitpid($pid, &posix::wnohang).
glob()now returns filenames in alphabetical order the list of filenames from glob() (or ) is now by default sorted alphabetically to be csh-compliant (which is what happened before in most unix platforms).
see the perlbeos manpage (readme.beos) for more details.
the debugger can now show lexical variables if you have the cpan  module padwalker installed.
warnings relating to the use interpreter threads and their shared data have been added.
useperlcc -b instead.)
see the threads manpage, the threads::shared manpage, and the perlthrtut manpage.
socket/socketpair..............failed tests 12 ../lib/ipc/sysv.......................failed tests 2, 5-6 ../lib/warnings.......................failed tests 115-116, 118-119 the op/pack failure (``cannot compress negative numbers at op/pack.t line 126'')
interpreter threads (ithreads) is the new thread model  introduced in perl 5.6 but only available as an internal interface for  extension writers (and for win32 perl forfork() emulation).
hp-ux readme.hpux updated; configure -duse64bitall now works; now  uses hp-ux malloc instead of perl malloc.
any encoding supported by encode module is also available to the ``:encoding()'' layer if perlio is used.
in future releases, non-perlio aware xs modules may become completely unsupported.
a mmap layer may be available if platform supports it (mostly unixes).
seethe unicode::collate manpage.
threads, by arthur bergman, is an interface to interpreter threads.
also, usually the system mallocs on such platforms are much better optimized for such large memory models than the perl malloc.
devel::ppport, originally by kenneth albanowski and now maintained by paul marquess, has been added.
a mmap layer may be available if platform supports it (mostly  unixes).
sizeof(long)was 4, but sizeof(iv)was 8.
a workaround for the problem has been added.
so the 5.8 quicksort  scrambles large arrays before sorting them, as a statistical defence against  quadratic behaviour.
(something that our()does not and will not support.)
see installation and configuration improvements for the effects of perlio on your architecture name.
seethe perluniintro manpage for introduction and the  perlunicode manpage for details.
if you don't have /bin/mail, or if you have  'safe setuid scripts', or if suidperl is not installed, you are safe.
lib/ftmp-security tests warn 'system possibly insecure' don't panic.
encode, originally by nick ing-simmons and now  maintained by dan kogai, provides a mechanism to translate between different  character encodings.
the older name is still  available for compatibility, but is deprecated.
net::ping has been considerably enhanced by rob brown: multihoming is now supported, win32 functionality is better, there is now time measuring functionality (optionally high-resolution using time::hires), and there is now ``external'' protocol which uses net::ping::external module which runs your external ping utility and parses the output.
use of /c in substitutions, even with /g, elicits use of /c modifier is meaningless in s///.
this affects builds with -duselongdouble.
it also sends the bug  report to perl.org, not perl.com.
use of the /cmatch modifier without an accompanying /gmodifier elicits a new warning: use of /c modifier is meaningless without /g.
this implementation also allows later systems to call kill from within a signal handler.
many test suite tests still fail and the co-existence of  unicode and ebcdic isn't quite settled, but the situation is much better than  with perl 5.6.
but quicksort was rescued at the  last moment because it is faster than mergesort on certain inputs and  platforms.
print "exists!\n" if exists $tied_hash{foo}; as a side effect of this fix, tied hash interfaces must define the exists and delete methods.
../ext/b/t/xref.t 255 65280 14 12 85.71% 3-14 ../ext/list/util/t/first.t 255 65280 7 4 57.14% 2 5-7 ../lib/
this enables the new behaviour for perl  embedders.
they are now magnitudes faster, and they support various bignum libraries such as gmp and pari as their backends.
list::util, by graham barr, is a selection of general-utility list subroutines, such as sum(), min(), first(), and shuffle().
we suggest upgrading to at least vac version 5.0.1.0, that has been known to compile perl correctly.
ebcdic platforms (z/os (also known as os/390), posix-bc, and vm/esa)
modules may fail to compile at all, or they may compile and work incorrectly.
regular expressions on references and overloaded scalars now work.
decode_qp($encoded); print $encoded, "\n"; # "=de=ad=be=ef\n" print  $decoded, "\n"; # "\xde\xad\xbe\xef\n" see also the perlio::via::quotedprint manpage.
suidperl is neither built nor installed by default.
several new tests have been added, especially for the lib and ext subsections.
according to perlbench, this change has not affected the overall speed of perl.
perl5db.t was also added to test the changes, and as a placeholder for further tests.
test::simple, by michael schwern, has basic utilities for writing tests.
apparently this problem has been fixed in the latest freebsd releases.
trying to use unicode characters on an i/o stream without marking the stream's encoding (using open()or binmode())will cause ``wide character'' warnings.
the rationale is that neither does localtime(), and timelocal()and localtime()are supposed to be inverses of each other.
this is known problem with cygwin, and a workaround is detailed in here: http://sources.redhat.com/ml/cygwin/2001-12/msg00894.html one can build but not install (or test the build of) the ndbm_file on fat filesystems.
next, by damian conway, is a pseudo-class for method  redispatch.
(they  produce something other than ``1'' and ``-1'' when formatting 0.6 and -0.6  using the printf format ``%.0f''; most often, they produce ``0'' and ``-0''.)
arrays now always interpolate into double-quoted strings [561] in double-quoted strings, arrays now interpolate, no matter what.
perl now works on post-4.0 bsd/oses.
added a new posix-ish  character class[[:blank:]] which stands for horizontal whitespace  (currently, the space and the tab).
this seems to be a compiler error since if compiled with gcc no core dump ensues, and no failures have been seen on the said test on any other platform.
(this happens because the test scripts from under t/lib have been moved to be closer to the library/extension they are testing.)
history written by jarkko hietaniemi .
if you run sort { $a  $b } ( 1 .. $n , 1 .. $n ); (something you might approximate if you wanted to merge two sorted arrays  using sort), doubling $n doesn't just double the quicksort time, it quadruples it.
the dg/ux platform now supports 5.005-style threads.
in safe, %inc is now localised in a safe compartment so  that use/require work.
seethe test::simple manpage.
for very small lists this may result in slightly slower sorting times, but in general the speedup should be at least 20%.
core enhancements unicode overhaul unicode in general should be now much more usable than in perl 5.6.0 (or  even in 5.6.1).
(eg by reading/proc/self/exe on linux, /proc/curproc/file on freebsd)
some warning messages still remain in some platforms, so if you are compiling with gcc you may see some warnings about dubious practices.
a potential security vulnerability in the optional suidperl component of perl was identified in august 2000.
linux long doubles should now work (see install).
gccs prior to 2.95.3 are definitely not good enough, and gcc 3.1 may be even better.
the suidperl functionality is likely to be removed in a future release.
z/os has rather many test failures but the situation is actually much better than it was in 5.6.0; it's just that so many new modules and tests have been added.
use tie::hash; tie my %tied_hash => 'tie::stdhash'; ... # nothing has set the foo element so far { local $tied_hash{foo} = 'bar' } # this used to print, but not now.
seethe  encode manpage.
note that some of the net::ping tests are disabled when running under the  perl distribution since one cannot assume one or more of the following: enabled  echo port at localhost, full internet connectivity, or sympathetic firewalls.
utf-16 and ucs-2 encoded perl  files should now be read correctly.
yes, much  quicker than perlretut.
currently, there is no good solution for the problem, but configure now provides appropriate non-largefile ccflags, ldflags, libswanted, and libs in the %config hash (e.g., $config{ccflags_nolargefiles}) so the extensions that are having problems can try configuring themselves without the largefileness.
vms see socket extension dynamic in vms and ieee-format floating point default on openvms alpha for important changes not otherwise listed here.
the threads::shared::queue and threads::shared::semaphore were renamed as thread::queue and thread::semaphore just before 5.8.0.
term::readkey not working on win32 use term::readkey 2.20 or later.
the even and odd numbers appear in  the output in the same order they appeared in the input.
enc2xsis a tool for people adding their own encodings to the encode module.
tie::array's splice method was broken.
using the /g modifier in split()is meaningless and will cause a warning.
the main rationale was to have thread modules to obey normal naming, thread:: (the threads and threads::shared themselves are more pragma-like, they affect compile-time, so they stay lowercase).
scripts are similar to (and  superior to) unicodeblocks.
you can now build a really minimal perl called microperl.
fix password routines which in some shadow password platforms (e.g.  hp-ux) causedgetpwent() to return every other entry.
in  particularbinmode(fh) - and hence :raw - will now  turn off both crlf and utf-8 translation and remove other layers (e.g.  :encoding()) which would modify byte stream.
this change will  probably break backward compatibility with compiled modules.
stratus vos the native build method requires at least vos release 14.5.0 and gnu c++/gnu tools 2.0.1 or later.
the existing behaviour when localising tied arrays and hashes is  wrong, and will be changed in a future release, so do not rely on the existing  behaviour.
a workaround for the problem has been  added.
seethe perlhack manpage .
documentation on how to use the perl source repository has been  added toporting/repository.pod.
perlapi.pod (a companion to perlguts) now attempts to document the  internal api.
print "exists!\n" if exists  $tied_hash{foo}; as a side effect of this fix, tied hash interfaces must define the exists and delete methods.
there is no need to escape any of the \wcharacters.
perly.c, sv.c, and sv.h have now been extensively commented.
the_quicksort and _mergesort subpragmas are heavy-handed ways to select the underlying implementation.
you have to recompile your xs modules.
for example, while the script latin includes all the latin characters and their various diacritic-adorned versions, it does not include the various punctuation or digits (since they are not solely latin).
printf() and sprintf() now support  parameter reordering using the%\d+\$ and *\d+\$ syntaxes.
mkdir()now ignores trailing slashes in the directory name, as mandated by posix.
however, if you just want to sort the even digits ahead of the odd  ones, then what will sort { ($a % 2)  ($b % 2) } @digits; yield?
the in or is prefix to names used with the \p{...} and \p{...} are now almost always optional.
use pdl 2.3.4 or later.
the win32::setchildshowwindow() builtin can be used to control the  visibility of windows created by child processes.
seethe unicode::normalize manpage.
[561] pos() did not return the correct value within s///ge in  earlier versions.
/tie/file/t/31_autodefer.t 255 65280 65 32 49.23% 34-65 ../lib/autouse.t 10 1 10.00% 4 op/flip.t 15 1 6.67% 15 these failures are unlikely to get fixed as 5.005-style threads are considered fundamentally broken.
eventually, the problem gets whittled down to one  that fits in the cache, from which point it benefits from the increased memory  speed.
what this means is that in list context the functions will return  only three values, not four.
one potential failure is whether one can (or, if one can, whether it's a good idea to) link together at all binaries with different ideas about file offsets; all this is platform-dependent.
use mime::quotedprint; $encoded = encode_qp("\xde\xad\xbe\xef"); $decoded =
g_float is still available as a  configuration option.
for tests 129 and 130, the failing platforms do not comply with the ansi c
[561] warnings::enabled() now reports the state of $^w correctly if the  caller isn't using lexical warnings.
[561] perl5opt with embedded spaces didn't work.
many of the new tests are of course introduced by the new modules, but still in general perl is now more thoroughly tested.
[561] less stack reserved per thread so that more threads can run  concurrently.
because of the above error, parts of the converted headers will be invisible.
for similar  functionality, see pack('u0', ...) and pack('c0', ...).
the previous behaviour of ignoring  them by default and warning if requested was unacceptable since it, in a way,  falsely promised that the features could be used.
in search::dict one can now have a pre-processing hook for the lines being searched.
this is only meant as a temporary debugging aid while securing the code of old legacy applications.
(the whole dump()feature is to considered deprecated, and possibly removed/changed in future releases.)
one such known spot are the \p{} and \p{} regular expression constructs for code points less than 256: the pp are testing for unicode code points, not knowing about ebcdic.
universal::isa no longer caches methods incorrectly.
the (bogus) escape sequences \8 and \9 now give an optional warning  (``unrecognized escape passed through'').
aix dynamic loading should be now better supported.
atheos ( http://www.atheos.cx/ ) is a new platform.
vms see socket extension dynamic in vms and ieee-format floating point default  on openvms alpha for important changes not otherwise listed here.
seethe digest manpage.
h2xsnow uses devel::ppportfor better portability between different versions of perl.
seethe digest::md5 manpage.
it is now a top-level category in its own right.
note that breaking out from potentially blocking operations  should still work, though.
scalar()now forces scalar context even when used in void context.
qw(a\\b)now parses correctly as 'a\\b': that is, as three characters, not four.
therestricted hashes interface is  expected to be the replacement interface (seethe hash::util manpage).
ithreads the new interpreter threads (``ithreads'' for short) implementation of  multithreading, by arthur bergman, replaces the old ``5.005 threads''  implementation.
text::balanced, by damian conway, has been added, for extracting delimited text sequences from strings.
emacs/e2ctags.pl is now much faster.
time::local::timelocal() does not handle fractional seconds anymore.
note for code authors: if you want to enable your users to use utf-8 as their default encoding but in your code still have eight-bit i/o streams (such as images or zip files), you need to explicitly open() or binmode() with :bytes (see open in the perlfunc manpage and binmode in the perlfunc manpage), or you can just use binmode(fh)
i18n::langinfocan be used to query locale information.
the glibc release 2.2.2 is known to have fixed the modfl()bug.
using splice() past the end of an array now causes a  warning.
[561+] the amdahl uts unix mainframe platform is now supported.
pack() / unpack()can now process the perl internal numeric types: ivs, uvs, nvs-- and also long doubles, if supported by the platform.
the behavior in earlier versions of perl 5 was that arrays would interpolate into strings if the array had been mentioned before the string was compiled, and otherwise perl would raise a fatal compile-time error.
self-ties of arrays and hashes are not supported and fatal errors will happen even at an attempt to do so.
the version of berkeley db used when the perl (and, presumably, the  db_file extension) was built is now available as @config{qw(db_version_major db_version_minor db_version_patch)} from  perl and asdb_version_major_cfg db_version_minor_cfg db_version_patch_cfg from c. building berkeley db3 for compatibility modes for db, ndbm, and odbm  has been documented in install.
new documentation perl56delta details the changes between the 5.005 release and the  5.6.0 release.
this was found to be an inconvenient interface, and in perl 5.8 the unicode  model has completely changed: now the ``unicodeness'' is bound to the data  itself, and for most of the time ``use utf8'' is not needed at all.
a change to self-tying of globs has caused them to be recursively  referenced (see:two-phased garbage collection in the perlobj manpage).
gccs prior  to 2.95.3 are definitely not good enough, and gcc 3.1 may be even better.
the 5.005 threads model (module thread) is deprecated  and expected to be removed in perl 5.10.
you should carefully launder the arguments to  guarantee their validity.
(  http://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=65612 ) linux with sfio fails op/misc test 48 no known fix.
(perlunicode is more of a detailed reference and background information)
miscellaneous changes autoload is now lvaluable, meaning that you can add the :lvalue  attribute to autoload subroutines and you can assign to the autoload return  value.
the following tests are known to fail in mac os x 10.1.5 because of buggy (old) implementations of berkeley db included in mac os x: failed test stat wstat total fail failed list of failed ------------------------------------------------------------------------- ../ext/db_file/t/db-btree.t 0 11 ?? ??
fcntl, socket, and sys::syslog have been rewritten by nicholas clark to use the new-style constant dispatch section (seethe extutils::constant manpage).
removing directories with 'no lib' now works.
pod::parselink, by russ allbery, has been added, to  parse l<> links in pods as described in the new perlpodspec.
the identifier "bad" is  undefined.
-ilib ext/time/hires/hires.t for normal arrays $foo =
using chdir(``'') or chdir(undef) instead  of explicitchdir() is doubtful.
there is a new kill implementation based on sys$sigprc that allows older vms systems (pre-7.0) to use kill to  send signals rather than simply force exit.
(interesting only for extension writers and perl core hackers.)
[561+] the following platform-specific documents are available before the  installation as readme.platform, and after the installation as perl platform: perlaix perlamiga perlapollo perlbeos perlbs2000 perlce perlcygwin  perldgux perldos perlepoc perlfreebsd perlhpux perlhurd perlirix perlmachten  perlmacos perlmint perlmpeix perlnetware perlos2 perlos390 perlplan9 perlqnx  perlsolaris perltru64 perluts perlvmesa perlvms perlvos perlwin32
some warning messages still remain in some platforms, so if you are compiling  with gcc you may see some warnings about dubious practices.
the  enhanced version has also been backported to earlier releases of perl and  submitted to cpan so that the earlier releases can enjoy the fixes.
currently, there is no good solution for the problem, but  configure now provides appropriate non-largefile ccflags, ldflags, libswanted,  and libs in the %config hash (e.g., $config{ccflags_nolargefiles})
[561] lexicals i: lexicals outside an eval ``'' weren't resolved correctly  inside a subroutine definition inside the eval ``'' if they were not already  referenced in the top level of the eval``''ed code.
storable gives persistence to perl data structures by  allowing the storage and retrieval of perl data to and from files in a fast and  compact binary format.
seethe encode manpage.
... anonymous temporary files are available without need to 'use  filehandle' or other module via open($fh,"+>", undef) ||
you may get errors like 'undefined symbol ``perl_get_sv''' or ``can't resolve symbol 'perl_get_sv''', or the symbol may be ``perl_sv_2pv''.
this feature helps in writing internationalised  software, and in general when the order of the parameters can vary.
if, by ilya zakharevich, is a new pragma for conditional inclusion of modules.
... or on already opened handles via extended binmode: binmode($fh,':encoding(iso-8859-7)'); the built-in layers are: unix (low level read/write), stdio (as in previous perls), perlio (re-implementation of stdio buffering in a portable manner), crlf (does crlf  ``\n'' translation as on win32, but available on any platform).
starting with 5.6.1, when perl now sees an @sign in a double-quoted string, italways attempts to interpolate an array, regardless of whether or not the array has been used or declared already.
storable/t/downgrade.t 12 3072 169 12 7.10% 14-15 46-47 78-79 110-111 150 161 ../lib/extutils/t/constant.t 121 30976 48 48 100.00% 1-48 ../lib/extutils/t/embed.t 9 9 100.00% 1-9 op/pat.t 922 7 0.76% 665 776 785 832- 834 845 op/sprintf.t 224 3 1.34% 98 100 136 op/tr.t 97 5 5.15% 63 71-74 uni/fold.t 780 6 0.77% 61 169 196 661 710-711 the failures in dumper.t and downgrade.t are problems in the tests, those in io_unix and sprintf are problems in the uss (udp sockets and printf formats).
seethe perltie manpage for details.
mime::base64, by gisle aas, allows you to encode data in base64, as defined in rfc 2045 -mime
the debugger has a new dumpdepthoption to control the maximum depth to which nested structures are dumped.
this file is supposed to be used by hints file writers for  architecture-wide changes (as opposed to config.over which is for site-wide  changes).
perlretut is a regular expression tutorial.
this is caused by a bug in the awk utility of unicos/mk.
netware from novell is now supported.
lexical warnings now propagating correctly between scopes and into eval "...".
extutils::constant, by nicholas clark, is a new tool for extension writers for generating xs code to import c header constants.
if you do not like  this new behaviour, specify prefix, siteprefix, and vendorprefix explicitly.
[561] autovivification of symbolic references of special variables described inthe perlvar manpage (as in ${$num}) was accidentally disabled.
contact the macperl mailing list for details.
the obsolete chat2 library that should never have been allowed to  escape the laboratory has been decommissioned.
unicode::ucd offers a querying interface to the unicode  character database.
if you are building on a ufs partition, you will also probably see  t/op/stat.t subtest #9 fail.
the exploit attempt reporting feature has been completely removed from perl 5.8.0 (and the maintenance release 5.6.1, and it was removed also from all the perl 5.7 releases), so that particular vulnerability isn't there anymore.
after years of trying, suidperl is considered to be too complex to ever be considered truly secure.
since perl 5.8 is not binary-compatible with previous releases of  perl, configure no longer suggests including the 5.005 modules in @inc.
[561+] filter::util::call, by paul marquess, provides you with the framework to writesource filters in perl.
read the 'make test' section of install instead.
(this was a problem for example if you were mixing data from i/o and  unicode data: your output might have got magically encoded as utf-8.)
this  is now avoided.
storablegives persistence to perl data structures by allowing the storage and retrieval of perl data to and from files in a fast and compact binary format.
this has been  corrected.
[561] can now send()from all threads, not just the first one.
[561] sys::syslog ignored the log_auth constant.
in future releases of perl the forms will become fatal errors so consider starting laundering now.
the tests are now reported in a different order than in earlier perls.
see the perlce manpage.
self-tying of scalars and io thingies works.
(redhat linux/alpha with gcc 3.1 reported no problems, as did linux 2.4.18 with  gcc 2.95.4.)
if you are building on a ufs partition, you will also probably see t/op/stat.t subtest #9 fail.
fcntl, socket, and sys::syslog have been rewritten by nicholas clark  to use the new-style constant dispatch section (seethe extutils::constant  manpage).
in versions 5.004_01 through 5.6.0, the error was in string, @example now must be written as \@example the idea here was to get people into the habit of writing "fred\@example.com" when they wanted a literal "give me back my \$5" when they wanted a literal @sign, just as they have always written $sign.
in other taint news, the exec listand system listhave now been considered too risky (think exec @argv: it can start any program with any arguments), and now the said forms cause a warning under lexical warnings.
bad switch yylook 79bad switch yylook 79bad switch yylook 79bad switch  yylook 79#ifdef
with ithreads, when a new thread is created, all perl data is cloned,  however non-perl data cannot be cloned automatically.
pl are now  checked for sanity much more carefully than before.
allow compiling with gcc (previously explicitly forbidden).
mergesort has worst case o(n log n) behaviour, the best value attainable.
tie::file, by mark-jason dominus, associates a perl  array with the lines of a file.
this has  been corrected.
trying to use unicode characters on an i/o stream without marking  the stream's encoding (usingopen() or binmode()) will  cause ``wide character'' warnings.
new tests several new tests have been added, especially for the lib and ext subsections.
perl 5.8 is not binary compatible with earlier releases of perl.
(y with diaeresis) and \xbe (y with diaeresis)  not behaving correctly when being matched case-insensitively.
the following tests are known to fail due to fundamental problems in the 5.005 threading implementation.
finally, other applications than perl (such  as mod_perl) tend to prefer the system malloc.
the_quicksort and _mergesort subpragmas are heavy-handed ways to select the underlying  implementation.
but this may be upgraded to a fatal error in a future release.
3 a semicolon is expected at this  point.
although ``you shouldn't do that'', it was possible to write code that depends on perl's hashed key order (data::dumper does this).
other future possibilities include perlio::array and perlio::code.
quicksort was rescued by implementing a sort pragma to control aspects of the sort.
see the  perldgux manpage.
seethe scalar::util  manpage.
unicos/mk guessing which symbols your c compiler and preprocessor define... will probably fail with error messages like cc-20 cc:
use perlcc -binstead.)
at the moment onlylength() has been  implemented.
in addition to extract_delimited(), there are also extract_bracketed(),  extract_quotelike(), extract_codeblock(), extract_variable(), extract_tagged(),
in case you are still using solaris 2.5 (aka sunos 5.5), you may experience  failures (the test core dumping) in lib/locale.t.
this has been corrected.
thefields pragma  interface will remain available.
finally, other applications than perl (such as mod_perl) tend to prefer the system malloc.
i18n::langinfo can be used to query locale information.
ourcan now have an experimental optional attribute uniquethat affects how global variables are shared among multiple interpreters, seeour in the perlfunc manpage.
apparently this  problem has been fixed in the latest freebsd releases.
a potential security vulnerability in the optional suidperl component of  perl was identified in august 2000.
because of the unpredictability of tie-breaking order, and the quadratic worst-case behaviour, quicksort wasalmost replaced completely with a stable mergesort.
but that means if you sort the same large array twice,  ties may be broken in different ways.
perlnewmod tells about writing and submitting a new module.
the change was  made to make perl more compliant with other applications like mod_perl which  are using the aix native interface.
seethe text::balanced  manpage.
(for space  considerations, the largest chinese encodings have been separated into their  own cpan module, encode::hanextra, which encode will use if available).
this is admittedly not a clean solution, and the solution may not even work at all.
pack() / unpack() can now process the perl internal  numeric types: ivs, uvs, nvs-- and also long doubles, if supported by the  platform.
chdir() now works better despite a crt bug; now works with multiplicity (see install); now works with perl's malloc.
not only is the current interface rather ugly, but the current implementation slows down normal array and hash use quite noticeably.
1;localised hash elements (and %env) are correctly unlocalised to not exist, if they didn't before they were localised.
this change will probably break backward compatibility with compiled modules.
the (\&) prototype now works properly.
there is a new kill implementation based on sys$sigprc that allows older vms systems (pre-7.0) to use kill to send signals rather than simply force exit.
on a really fast machine you can hope  to finish the suite in about 6-8 minutes (wallclock time).
tie::memoize, by ilya zakharevich, provides on-demand  loaded hashes.
io::socket::inet failed to open the specified port if the service name was not known.
perlio is the default configuration because without it many new  features of perl 5.8 cannot be used.
you can now install coderef handlers, 'default', and 'ignore' handlers, installing new handlers was not atomic.
this change leads to often slightly faster and always less lossy arithmetics.
(this broke the tk extension with 5.6.0.)
the original files are left unaffected.
threads::shared, by arthur bergman, allows data sharing  for interpreter threads.
because of the above error, parts of the converted  headers will be invisible.
each unquoted argument will be automatically quoted to  protect whitespace, and any existing whitespace in the arguments will be  preserved.
(in tru64, it is preferable to use the bundled c compiler.)
seethe threads manpage and the threads::shared manpage, and the perlthrtut manpage.
the quicksort divide and conquer strategy works well on platforms with relatively small, very fast, caches.
with ithreads, when a new thread is created, all perl data is cloned, however non-perl data cannot be cloned automatically.
use of the gprof tool to profile perl has been documented in the perlhack manpage.
[561] dprofpp -r didn't work.
error file = try.c, line = 3
if after installing perl 5.8.0 you are getting warnings about missing  symbols, for example dyld: perl undefined symbols _perl_sv_2pv _perl_get_sv you probably have an old pre-perl-5.8.0 installation (or parts of one) in  /library/perl (the undefined symbols used to exist in pre-5.8.0 perls).
it is still a useful module, though, and is available from the  cpan.
safe signals perl used to be fragile in that signals arriving at inopportune moments  could corrupt perl's internal state.
instead, if you explicitly choose not to use perlio (configure command line  option -uuseperlio), you will get ``-stdio'' appended.
for(..) for (1..5) { $_++ } works without complaint.
the win32::setchildshowwindow() builtin can be used to control the visibility of windows created by child processes.
as of november 2001 the only known vulnerable platform is linux, most likely all linux distributions.
no new syntax is involved:  the hash::util module is the interface.
for example, system("nmake /nologo", @args) will now attempt to run the file nmake /nologo and will fail when such a file isn't found.
unadorned dump()will now give a warning suggesting to use explicit core::dump() if that's what really is meant.
[561] changed the posix character class
g_float is still available as a configuration option.
attributes for my variables now handled at run-time
keep in mind the possible non-preemptability of the underlying thread  implementation.
the glibc release 2.2.2 is known to have fixed the modfl() bug.
most importantly, anonymous subs used to leak quite a bit.
there is no need to  escape any of the\w characters.
see the switch manpage.
stable means that ties are broken to preserve the original order of appearance in the input array.
in other words: you just have to recompile your modules containing xs code, sorry about that.
(to be exact, the use64bitall is ignored.)
[561] prototype(\[$@%&])is now available to implicitly create references (useful for example if you want to emulate the tie()interface).
h2xs now produces a template readme.
the artistic and copying files for copyright information.
threads::shared, by arthur bergman, allows data sharing for interpreter threads.
for  example, while the scriptlatin includes all the latin characters  and their various diacritic-adorned versions, it does not include the various  punctuation or digits (since they are not solelylatin).
the warnings issued by file::find now belong to their own category.
doesn't get appended to the $config{archname} (also known as $^o) anymore.
the tr///c and tr///u features have been removed and will not  return; the interface was a mistake.
the module is contained within tie::refhash.
for very small lists this may  result in slightly slower sorting times, but in general the speedup should be  at least 20%.
chomp() and chop() are now overridable.
reg_expand_sz keys are now allowed in registry settings used by perl.
in future releases of perl, non-perlio aware xs modules may become  completely unsupported.
in case you are still using solaris 2.5 (aka sunos 5.5), you may experience failures (the test core dumping) in lib/locale.t.
seethe tie::refhash manpage.
the method is also exportable as a sockatmark()function.
self-tying of arrays and hashes is broken in rather deep and hard-to-fix ways.
note, however, that their prototype (as given by prototype("core::chomp") is undefined, because it cannot be  expressed and therefore one cannot really write replacements to override these  builtins.
this shouldn't be too difficult for module authors,  however: perlio has been designed as a drop-in replacement (at the source code  level) for the stdio interface.
data::dumper now has an option to dump code references using  b::deparse.
this behaviour may be fixed at a later date.
starting with 5.6.1, when perl now sees an @ sign in a  double-quoted string, italways attempts to interpolate an array,  regardless of whether or not the array has been used or declared already.
see http://www.cpan.org/src/5.0/sperl-2000-08-05/sperl-2000-08-05.txt for more  information.
also individual keys can be restricted so that the key cannot be deleted and the value cannot be changed.
the change was made to make perl more compliant with other applications like mod_perl which are using the aix native interface.
in versions 5.000 through 5.003, the error was literal @example now requires backslash
file::find is now (again) reentrant.
the magic constants (e.g. 'p') have been macrofied (e.g. perl_magic_tied) for better source code readability and maintainability.
the prototypes are now checked better at compile-time for invalid syntax.
extutils::constant, by nicholas clark, is a new tool  for extension writers for generating xs code to import c header constants.
this is harmless; it is caused by the getnetbyaddr() and getnetbyaddr_r() having slightly different types for their first argument.
in newer aix  releases, this has been solved by linking perl with the libc_r library, but  unfortunately in aix 4.2 the said library has an obscure bug where the various  functions related to time (such astime() and gettimeofday()) return broken values, and therefore in aix 4.2 perl is not linked  against libc_r.
chdir()and cwd::cwd() have also been fixed.
hash::util is the interface to the new restricted  hashes feature.
if that  doesn't help, you may have to try removing all the .bundle files from beneath  /library/perl, and again ``make install''-ing.
localised tied variables no longer leak memory use tie::hash; tie my %tied_hash => 'tie::stdhash'; ... # used to leak memory every time local() was called; # in a loop, this added up.
use xml::parser 2.31 or later.
such platforms include alpha and 64-bit hppa, mips, ppc, and sparc.
layers to be applied by default may be specified via the 'open' pragma.
the only exception to this is sunos 4.x, which  needs them.
chdir(``'') and chdir(undef) now give a  deprecation warning because they cause a possible unintentional chdir to the  home directory.
seethe perlio::scalar manpage.
the compiler suite is slowly getting better but it continues to be highly  experimental.
you can now  install coderef handlers, 'default', and 'ignore' handlers, installing new  handlers was not atomic.
compilation of the standard perl distribution in mac os classic should now work if you have the metrowerks development environment and the missing mac-specific toolkit bits.
in double-quoted strings, arrays now interpolate, no matter what.
use locale::country; $country = code2country('jp'); # $country gets 'japan' $code =
if your pointers are 64 bits wide, the perl malloc is no longer being used because it does not work well with 8-byte pointers.
you can move the old perl shared library out of the way like this: cd /library/perl/darwin/core mv libperl.dylib libperlold.dylib and then reissue ``make install''.
if tr/// is just counting characters, it doesn't attempt to modify  its target.
(it is in  fact a full implementation of sed in perl: you can use the sed functionality by  using thepsed utility.)
turning off ``clrfness'' is no longer enough to make a stream truly binary.
xsubpp now understands pod documentation embedded in  the *.xs files.
[561] perltodo has been updated.
however, further security vulnerabilities are, unfortunately, always possible.
glob() now returns filenames in alphabetical order the list of filenames from glob() (or ) is now by  default sorted alphabetically to be csh-compliant (which is what happened  before in most unix platforms).
it can  now deparse almost all of the standard test suite (so that the tests still  succeed).
pod2htmlnow produces xhtml 1.0.
allow a read-only string on the left-hand side of a non-modifying  tr///.
note that the 5.005 threads are unsupported and deprecated: if you have code written for the old threads you should migrate it to the new ithreads model.
malformed unicode encodings (utf-8 and utf-16) cause a lot of  warnings, ad doestrying to use utf-16 surrogates (which are unimplemented).
the command-line options -s and -f are now recognized on the shebang (#!) line.
[561] all the netbsd specific patches (except for the installation  specific ones) have been merged back to the main distribution.
many of these changes have been further developed since 5.6.1 was released, those are marked [561+].
make -f makefile.microshould be enough.
more details  are inperformance enhancements.
see the perlmod manpage modules and pragmata new modules and pragmata attribute::handlers, originally by damian conway and  now maintained by arthur bergman, allows a class to define attribute handlers.
io::socket::inet failed to open the specified port if the service  name was not known.
in aix 4.2, perl extensions that use c++ functions that use statics  may have problems in that the statics are not getting initialized.
[561] xsubppnow supports the out keyword.
lstat(filehandle) now gives a warning because the  operation makes no sense.
devel::peek now has an interface for the perl memory statistics (this works only if you are using perl's malloc, and if you have compiled with debugging).
at the moment only length()has been implemented.
if you see op/pack, op/pat, op/regexp, or ext/storable tests failing in a linux/alpha or *bsd/alpha, it's probably time to upgrade your gcc.
localising tied arrays and hashes is broken local %tied_array; doesn't work as one would expect: the old value is restored incorrectly.
windows fork()emulation is now more robust, but still continues to have a few esoteric bugs and caveats.
note that the above of course is extremely disruptive for anything using the /usr/local/bin/perl.
the only remaining use of ``use utf8'' is when the perl script itself has been written in the utf-8 encoding of unicode.
several debugger fixes: exit code now reflects the script exit code, condition "0"now treated correctly, the dcommand now checks line number, $.no longer gets corrupted, and all debugger output now goes correctly to the socket if remoteport is set.
this is not a substitute  for -t.
[561] warnings::enabled() now reports the state of $^w correctly if the caller isn't using lexical warnings.
perl now uses ieee format (t_float) as the default internal floating point format on openvms alpha, potentially breaking binary compatibility with external libraries or existing data.
use mod_perl 1.27 or higher.
perl 5.6.0 parsed m/\x{ab}/ incorrectly, leading to spurious warnings.
if perl is configured with -duse64bitall, the successful result of the  subtest 10 of lib/posix may arrive before the successful result of the subtest  9, which confuses the test harness so much that it thinks the subtest 9 failed.
the builtin dump() now gives an optional warning dump() better written as core::dump(), meaning that by default dump(...) is resolved as the builtin dump() which dumps  core and aborts, not as (possibly) user-definedsub dump.
the new interpreter threads (``ithreads'' for short) implementation of multithreading, by arthur bergman, replaces the old ``5.005 threads'' implementation.
modulus of unsigned numbers now works (4063328477 % 65535 used to  return 27406, instead of 27047).
it can be used to prepend site-specific directories to perl's default search path (@inc); see install for information.
cert and various vendors and distributors have been alerted about the vulnerability.
new or improved platforms for the list of platforms known to support perl, see supported platforms in  the perlport manpage.
seethe extutils::makemaker manpage for more  details.
perl (the undefined symbols used to exist in pre-5.8.0 perls).
the waitpid emulation has been improved.
if your environment variables (lc_all, lc_ctype, lang) look like you  want to use utf-8 (any of the the variables match/utf-?8/i), your  stdin, stdout, stderr handles and the default open layer (seethe open manpage)
this results  hopefully in more accurate numbers.
$autoload, sort(), lock(), and spawning subprocesses in multiple  threads simultaneously are now thread-safe.
the constant and embed are probably problems in the tests (since they test perl's ability to build extensions, and that seems to be working reasonably well.)
scripts are similar to (and superior to) unicodeblocks.
the  constant and embed are probably problems in the tests (since they test perl's  ability to build extensions, and that seems to be working reasonably well.)
new unicode semantics (no more use utf8, almost) previously in perl 5.6 to use unicode one would say ``use utf8'' and then  the operations (like string concatenation) were unicode-aware in that lexical  scope.
local %tied_array; doesn't work as one would expect: the old value is restored incorrectly.
your bug report, along with the output of perl -v, will be sent off to perlbug@perl.org to be analysed by the perl  porting team.
the following tests are known to fail due to fundamental problems in the  5.005 threading implementation.
sort is a new pragma for controlling the behaviour of  sort().
it is primarily used by h2xsto enhance portability of xs modules between different versions of perl.
in cloneyou can do whatever you need to do, like for example handle the cloning of non-perl data, if necessary.
its semantics were never that clear and its implementation even less so.
sort()arguments are now compiled in the right wantarray context (they were accidentally using the context of the sort()itself).
(previously only $prefix changed.)
[561] nec super-ux is now supported.
you can move the old perl shared library out of the  way like this: cd /library/perl/darwin/core mv libperl.dylib libperlold.dylib and then reissue ``make install''.
aix dynaloading the aix dynaloading now uses in aix releases 4.3 and newer the native  dlopen interface of aix instead of the old emulated interface.
[561+] perldebtut is a perl debugging tutorial.
the information is attached to the new offsetsmember of the struct regexp.
[561] ``our'' variables of the same name declared in two sibling blocks resulted in bogus warnings about ``redeclaration'' of the variables.
a new optional location for perl libraries, otherlibdirs, is  available.
these are now handled better.
the install file for how to build perl.
hash::utilis the interface to the new restricted hashes feature.
(still 16m per thread.)
the gconvert macro ($config{d_gconvert}) used by perl for stringifying floating-point numbers is now more picky about using sprintf %.*g rules for the conversion.
the pat, tr, and fold failures are genuine perl problems caused by  ebcdic (and in the pat and fold cases, combining that with unicode).
see the extutils::constant manpage.
it also has been made more  portable.
mac os x dyld undefined symbols
autoloader can now be disabled with no autoloader;.
i18n::langtags, by sean burke, has functions for  dealing with rfc3066-style language tags.
[561] html files will now be installed in c:\perl\html instead of  c:\perl\lib\pod\html reg_expand_sz keys are now allowed in registry settings used by  perl.
(5.7.0  came out before 5.6.1: the development branch 5.7 released earlier than the  maintenance branch 5.6)
cygwin ``unable to remap'' for example when building the tk extension for cygwin, you may get an error  message saying ``unable to remap''.
while some limited functionality towards this does exist as  of perl 5.8.0, that is more accidental than designed; use of unicode for the  said purposes is unsupported.
the order of destroys has been made more predictable.
note that support for 5.005-style threading is deprecated, experimental and practically unsupported.
libnet, by graham barr, is a collection of perl5 modules  related to network programming.
[561] line renumbering with eval and #line now works.
it points at some problems with the  signedness handling of the c compiler, as do the 64bitint, arith, and pow  failures.
thestable subpragma forces stable behaviour, regardless of algorithm.
the very dusty examples in the eg/ directory have been removed.
this affects builds  with-duselongdouble.
( http://www.freebsd.org/cgi/query-pr.cgi?pr=34308 ) irix fails ext/list/util/t/shuffle.t or digest::md5 irix with mipspro 7.3.1.2m or 7.3.1.3m compiler may fail the list::util  test ext/list/util/t/shuffle.t by dumping core.
in addition to extract_delimited(), there are also extract_bracketed(), extract_quotelike(), extract_codeblock(), extract_variable(), extract_tagged(), extract_multiple(), gen_delimited_pat(), and gen_extract_tagged().
seethe perluniintro manpage for more information about utf-8.if your environment variables (lc_all, lc_ctype, lang) look like you want to use utf-8 (any of the the variables match /utf-?8/i), your stdin, stdout, stderr handles and the default open layer (seethe open manpage) are marked as utf-8.
the story in more detail: suppose you want to serve yourself a little slice of pi.
configure -s can now run non-interactively.
(utf-8 has not been made the default since  there are many perl scripts out there that are using various national eight-bit  character sets, which would be illegal in utf-8.)
perl -d:module=arg,arg,arg now works (previously one  couldn't pass in multiple arguments.)
h2xsnow produces a template readme.
this is only meant as a temporary debugging aid  while securing the code of old legacy applications.
building  microperl does not require even running configure;make -f makefile.micro should be enough.
since in many systems the standard number parsing functions like strtoul() and atof() seem to have bugs, perl tries to work around their deficiencies.
( http://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=65612 )
if, by ilya zakharevich, is a new pragma for  conditional inclusion of modules.
if your existing programs depends on the underlying implementation, consider usingthe class::pseudohash manpage from cpan.
in general, scripts are more inclusive, but not universally so.
a restricted hash is restricted to a certain set of keys, no keys outside the set can be added.
[561] some ``not a number'' warnings introduced in 5.6.0 eliminated to be  more compatible with 5.005.
it is primarily used byh2xs to enhance portability of xs modules between different versions of  perl.
time::hires, by douglas e. wegscheid, provides high resolution timing (ualarm, usleep, and gettimeofday).
printf() no longer resets the numeric locale to ``c''.
security vulnerability closed [561] (this change was already made in 5.7.0 but bears repeating here.)
the cure is to drop optimization level (configure -doptimize=-o2).
with these,  you can implement rather advanced parsing algorithms.
on the other hand, perl will now execute code such as system("c:/program files/myapp/foo.exe", @args) correctly.
known problems the compiler suite is still very experimental
devel::peek now has an interface for the perl memory statistics  (this works only if you are using perl's malloc, and if you have compiled with  debugging).
fork() emulation is now more robust, but still  continues to have a few esoteric bugs and caveats.
[561] readline()on files opened in ``slurp'' mode could return an extra ``'' (blank line) at the end in certain situations.
these are not new failures--perl 5.005_0x has the same bugs, but didn't have these tests.
piconvis an implementation of the character conversion utility iconv, demonstrating the new encode module.
the rules for allowing underscores (underbars) in numeric constants have been relaxed and simplified: now you can have an underscore simply between digits.
you won't notice this for small arrays, but you will notice it with larger arrays, and you may not live long enough  for the sort to complete on arrays of a million elements.
[561] the numerical comparison operators return undefif either operand is a nan. previously the behaviour was unspecified.
netbsd/sparc perl now works on netbsd/sparc.
qw(a\\b) now parses correctly as 'a\\b':  that is, as three characters, not four.
$autoload, sort(), lock(), and spawning subprocesses in multiple threads simultaneously are now thread-safe.
some platforms that used to use gcvt may now resort to the slower sprintf.
non-blocking waits for child processes (or pseudo-processes) are supported via waitpid($pid, &posix::wnohang).
the $config{byteorder} (and corresponding byteorder in config.h) was  previously wrong in platforms ifsizeof(long) was 4, but sizeof(iv) was 8.
not  only is the current interface rather ugly, but the current implementation slows  down normal array and hash use quite noticeably.
mergesort has worst  case o(n log n) behaviour, the best value attainable.
odbm_file/odbm.t 255 65280 ?? ??
[561+] perlebcdic contains considerations for running perl on ebcdic  platforms.
perlpodspec is a more formal specification of the pod format, mainly  of interest for writers of pod applications, not to people writing in pod.
locale::constants, locale::country, locale::currency locale::language, and the locale::script manpage, by neil bowers, have been added.
[561] earlier perls treated ``sub foo (@bar)'' as equivalent to ``sub foo (@)''.
fix password routines which in some shadow password platforms (e.g. hp-ux) caused getpwent()to return every other entry.
locale::maketext, by sean burke, is a localization  framework.
perl  5.6.1 still works for amigaos (as does the the 5.7.2 development release).
numerous compilation flag and hint enhancements; accidental mixing of 32-bit and 64-bit libraries (a doomed attempt) made much harder.
the  output is highly customisable.
so,  as you add more and more digits of pi, the order in which the sorted even and  odd digits appear will change.
linux recvfrom()(in perl: recv()), getpeername(), and getsockname().
see installation and configuration improvements for the effects of perlio  on your architecture name.
in afs installations, one can configure the root of the afs to be  somewhere else than the default/afs by using the configure parameter
vac 5.0.0.0 may produce buggy code for perl the aix c compiler vac version 5.0.0.0 may produce buggy code, resulting in  a few random tests failing when run as part of ``make test'', but when the  failing tests are run by hand, they succeed.
when perl is built using the native build process on vos release 14.5.0 and gnu c++/gnu tools 2.0.1, all attempted tests either pass or result in todo (ignored) failures.
win32 in multi-cpu boxes, there are some problems with the i/o buffering: some  output may appear twice.
an optional warning is generated (``illegal character in prototype...'')
therestricted hashes interface is expected to be the replacement interface (seethe hash::util manpage).
xs::apitest, by tim jenness, is a test extension that  exercises xs apis.
[561+] perlpacktut is a pack() tutorial.
the previous behaviour of ignoring them by default and warning if requested was unacceptable since it, in a way, falsely promised that the features could be used.
note for code authors: if you want to enable your users to use utf-8 as  their default encoding but in your code still have eight-bit i/o streams (such  as images or zip files), you need to explicitlyopen() or binmode() with :bytes (see open in the perlfunc manpage and  binmode in the perlfunc manpage), or you can just use binmode(fh) (nice for pre-5.8.0 backward compatibility).
this is harmless; it is caused by the getnetbyaddr() and getnetbyaddr_r() having slightly different types for their first  argument.
see  the threads manpage, the threads::shared manpage, and the perlthrtut manpage.
seethe devel::ppport manpage.
(previously perl always  preferred floating point numbers in its math.)
aka dec osf/1) the operating system version letter now recorded in $config{osvers}.
[561] new %env entries now propagate to subprocesses.
in addition to config.over, a new override file, config.arch, is  available.
unicode in package/class and subroutine names does not work
see the perluniintro manpage for the explanation of the current model, and  the utf8 manpage for the current use of the utf8 pragma.
the reuse option now has an alias, reuseaddr.
also, usually the system  mallocs on such platforms are much better optimized for such large memory  models than the perl malloc.
[561+] the following platform-specific documents are available before the installation as readme.platform, and after the installation as perl platform: perlaix perlamiga perlapollo perlbeos perlbs2000 perlce perlcygwin perldgux perldos perlepoc perlfreebsd perlhpux perlhurd perlirix perlmachten perlmacos perlmint perlmpeix perlnetware perlos2 perlos390 perlplan9 perlqnx perlsolaris perltru64 perluts perlvmesa perlvms perlvos perlwin32
this was found to be an inconvenient interface, and in perl 5.8 the unicode model has completely changed: now the ``unicodeness'' is bound to the data itself, and for most of the time ``use utf8'' is not needed at all.
the magic constants (e.g. 'p') have been macrofied (e.g. perl_magic_tied) for better source code readability and  maintainability.
the following tests may fail intermittently because of timing problems, for example if the system is heavily loaded.
case 1 { print "number 1" } case "a" { print  "string a" } case [1..10,42] { print "number in list" }  case (@array) { print "number in list" } case /\w+/ { print  "pattern" } case qr/\w+/ { print "pattern" } case (%hash) {  print "entry in hash" } case (\%hash) { print "entry in  hash" } case (\&sub) { print "arg to subroutine" } else {  print "previous case not true" } }
perluniintro is an introduction to using unicode in perl.
perl 5.6.0 could emit spurious warnings about redefinition of dl_error()when statically building extensions into perl.
caller() could cause core dumps in certain situations.
windows signal handling now works better than it used to.
perl will now first finish whatever it was doing, like finishing an internal operation (like sort()) or an external operation (like an i/o operation), and only then look at any arrived signals (and before starting the next operation).
hashes now use bob jenkins ``one-at-a-time'' hashing key algorithm (  http://burtleburtle.net/bob/hash/doobs.html ).
if after installing perl 5.8.0 you are getting warnings about missing symbols, for example dyld: perl undefined symbols _perl_sv_2pv _perl_get_sv you probably have an old pre-perl-5.8.0 installation (or parts of one) in /library/
on linux platforms the /bin/mail program had an undocumented feature which when combined with suidperl gave access to a root shell, resulting in a serious compromise instead of reporting the exploit attempt.
note that the above of course is  extremely disruptive for anything using the /usr/local/bin/perl.
see ``new unicode properties'' earlier in this document for additional information on changes with unicode properties.
pod2html now allows specifying a cache directory.
[561+] scalar::utilis a selection of general-utility scalar subroutines, such as blessed(), reftype(), and tainted().
[561+] a lost warning ``can't declare ... dereference in my'' has been  restored (perl had it earlier but it became lost in later releases.)
seethe perlfork manpage for  details.
some memory-hungry perl applications like the pdl  don't work well with perl's malloc.
so you really might prefer native  builds and long filenames.
handlers can be  specific to type (scalar, array, hash, or code), or specific to the exact  compilation phase (begin, check, init, or end).
the fieldspragma interface will remain available.
the difference between scripts and blocks  is that scripts are the glyphs used by a language or a group of languages,  while the blocks are more artificial groupings of (mostly) 256 characters based  on the unicode numbering.
[561] file::find now has pre- and post-processing callbacks.
this change may have surprising side effects because signals no longer  interrupt perl instantly.
[[.cc.]] and [[=c=]] are still recognised but now cause fatal errors.
(the perlbc tools has been removed.
[561+] right-hand side magic (gmagic) could in many cases such as string concatenation be invoked too many times.
(basically what happens is that competing threads can corrupt shared global state, one good example being regular expression engine's state.)
solaris x86 fails tests with -duse64bitint the following tests are known to fail in solaris x86 with perl configured  to use 64 bit integers: ext/data/dumper/t/dumper.............failed at test 268  ext/devel/peek/peek..................failed at test 7 super-ux (nec sx)
this probably means that you are trying to use an older shared perl library (or extensions linked with such) with perl 5.8.0 executable.
in other taint news, the exec list and system list have now been considered too risky (think exec @argv: it  can start any program with any arguments), and now the said forms cause a  warning under lexical warnings.
this is not a substitute for -t.
[561] the numerical comparison operators return undef if  either operand is a nan. previously the behaviour was unspecified.
the story in more detail: suppose you want to serve yourself a little slice  of pi.
tie::refhash::nestable, by edward avis, allows storing  hash references (unlike the standard tie::refhash)
ambiguous range in the transliteration operator (like a-z-9) now  gives a warning.
the compiler suite is slowly getting better but it continues to be highly experimental.
clonewill be executed once for every package that has it defined or inherited.
see the perldebug manpage.
allow  compiling with gcc (previously explicitly forbidden).
the documentation for the wince platform is called perlce (readme.ce  in the source code kit), to avoid confusion with the perlwin32 documentation on  8.3-restricted filesystems.
no new syntax is involved: the hash::util module is the interface.
infinity is now recognized as a number.
(this change was already made in 5.7.0 but bears repeating here.)
unicode::normalize, by sadahiro tomoyuki, implements  the various unicode normalization forms.
similarly, building the digest::md5 extension has been known to fail with ``*** termination code 139 (bu21)''.
b::concise, by stephen mccamant, is a new compiler backend for walking the perl syntax tree, printing concise info about ops.
[561] xsubpp now supports the out keyword.
open is a new pragma for setting the default i/o layers  for open().
the re engine found in perl 5.6.0 accidentally pessimised certain  kinds of simple pattern matches.
[561] autovivification of symbolic references of special variables  described inthe perlvar manpage (as in ${$num}) was accidentally  disabled.
perlmodstyle is a style guide for writing modules.
the worst bug (now  fixed) was that a pid of -1 would cause a wildcard search of all processes on  the system.
tie::memoize, by ilya zakharevich, provides on-demand loaded hashes.
chop(@list)in list context returned the characters chopped in reverse order.
some platforms that used to use gcvt may now resort  to the slower sprintf.
splice @_, 0, 2) {  s/$from/$to/g; } }; 1; # in user's code: use myfilter qr/red/ => 'green'; print "red\n"; # this code is filtered, will print  "green\n" print "bored\n"; # this code is filtered, will  print "bogreen\n" no myfilter; print "red\n"; # this code is not filtered, will print  "red\n" file::temp, by tim jenness, allows one to create  temporary files and directories in an easy, portable, and secure way.
two new debugging options have been added: if you have compiled your  perl with debugging, you can use the -dt
it also  correctly changes directories when chasing symbolic links.
use switch; switch ($val) {
file::glob::glob() has been renamed to file::glob::bsd_glob() because the name clashes with the builtin glob().
a version of net::ping::external is available in cpan.
the  only exception is that ain prefix is required to signify a unicode  block when a block name conflicts with a script name.
use libwww-perl 5.65 or later.
myvariables now handled at run-time the my expr : attrs syntax now applies variable attributes at run-time.
this may or may not be a problem with ancient tcp/ip stacks of vms: we do not know since we weren't able to test perl in such configurations.
the following builtin functions are now overridable: each(), keys(), pop(), push(), shift(), splice(), unshift().
the warnings are  being worked on.
the worst bug (now fixed) was that a pid of -1 would cause a wildcard search of all processes on the system.
they are now magnitudes faster, and they support various bignum libraries  such as gmp and pari as their backends.
this means that they will be more robust and hopefully faster.
cwd now has a split personality: if possible, an xs  extension is used, (this will hopefully be faster, more secure, and more  robust) but if not possible, the familiar perl implementation is used.
the syntaxes @a->[...]
= 1; localised hash elements (and %env) are correctly unlocalised to not  exist, if they didn't before they were localised.
one can have unicode in identifier names, but not in package/class or  subroutine names.
(subroutine andour variables still get attributes
carp now has better interface documentation, and the @carp_not  interface has been added to get optional control over where errors are reported  independently of @isa, by ben tilly.
seethe storable manpage.
ref(...)instead of scalar(...) a reference to a reference now stringifies as ``ref(0x81485ec)'' instead of ``scalar(0x81485ec)''
it can now deparse almost all of the standard test suite (so that the tests still succeed).
if you intend to run only on fat (or if using anydbm_file on fat), run  configure with the -ui_ndbm and -ui_dbm options to prevent ndbm_file and  odbm_file being built.
if your file system supports symbolic links, you can build perl  outside of the source directory by mkdir perl/build/directory cd perl/build/directory sh  /path/to/perl/source/configure -dmksymlinks ...
the system function and backticks operator have improved  functionality and better error handling.
self-tying problems self-tying of arrays and hashes is broken in rather deep and hard-to-fix  ways.
# in myfilter.pm: package myfilter; use filter::simple sub { while (my ($from, $to) =
this behaviour may be  fixed at a later date.
a number of other properties are now supported, including \p{l&} , \p{any} \p{assigned}, \p{unassigned} , \p{blank} [561] and \p{spaceperl} [561]  (along with their\p{...} versions, of course).
../ext/b/t/xref.t 255 65280 14 12 85.71% 3-14 ../ext/list/util/t/first.t  255 65280 7 4 57.14% 2 5-7 ../lib/
mime::quotedprint, by gisle aas, allows you to encode  data in quoted-printable encoding, as defined in rfc 2045 -mime
the new algorithm ``one-at-a-time'' produces a different hashed key order.
it also sends the bug report to perl.org, not perl.com.
[561] multi-line matches like "a\nxb\n" =~ /(?!\a)x/mwere flawed.
[561] file access tests now use current process privileges rather than the user's default privileges, which could sometimes result in a mismatch between reported access and actual access.
see  http://www.plover.com/~mjd/perl/at-error.html for more details about the  history here.
[561] and -dr options to trace tokenising and to add reference counts to displaying variables, respectively.
[561] file::glob now supports glob_limitconstant to limit the size of the returned list of filenames.
if you see op/pack, op/pat, op/regexp, or ext/storable tests failing in a  linux/alpha or *bsd/alpha, it's probably time to upgrade your gcc.
the builtin dump()now gives an optional warning dump() better written as core::dump(), meaning that by default dump(...)is resolved as the builtin dump()which dumps core and aborts, not as (possibly) user-defined sub dump.
[561] netbsd/threads: try installing the gnu pth (should be in the  packages collection, orhttp://www.gnu.org/software/pth/), and configure with  -duseithreads.
test 91 is known to fail on qnx6 (nto), because sprintf '%e',0 incorrectly produces 0.000000e+0 instead of 0.000000e+00 .
the new  algorithm ``one-at-a-time'' produces a different hashed key order.
now perl postpones handling of signals  until it's safe (between opcodes).
callbacks  (naughtily) exiting with ``next;'' instead of ``return;'' now work.
(you should be able to modify only lvalue elements inside the loops.)
it points at some problems with the signedness handling of the c compiler, as do the 64bitint, arith, and pow failures.
this particular test stress tests the localtime() call to find out whether it is threadsafe.
djgpp failures t/op/stat............................failed at test 29  lib/file/find/t/find.................failed at test 1  lib/file/find/t/taint................failed at test 1  lib/h2xs.............................failed at test 15  lib/pod/t/eol........................
this is a known bug in freebsd 4.5's readdir_r(), it has been fixed in freebsd 4.6 (seethe perlfreebsd manpage (readme.freebsd)).
a new special regular expression variable has been introduced: $^n, which contains the most-recently closed group (submatch).
support for the clone special subroutine had been  added.
if this test fails, it indicates that your libc (c library) is not  threadsafe.
when there is no name conflict, you can omit the in from the block name (e.g. \p{braillepatterns}), but to be safe, it's probably best to always use the in).
the *glob{filehandle} is deprecated, use *glob{io} instead.
\$bar[1] will assign undef to $bar[1] (assuming that it didn't exist before), but for  tied/magical arrays and hashes such autovivification does not happen because  there is currently no way to catch the reference creation.
this will be changed in a future release, but we don't know yet what the new  semantics will exactly be.
since there are not that many amiga developers available, we could not get this fixed and tested in time for 5.8.0.
perlclib documents the internal replacements for standard c library  functions.
irix numerous compilation flag and hint enhancements; accidental mixing of  32-bit and 64-bit libraries (a doomed attempt) made much harder.
the unicode character database coming with perl has been upgraded to  unicode 3.2.0.
if this seems to be the case  and 'cc' does not seem to be the gnu c compiler 'gcc', an automatic attempt is  made to find and use 'gcc' instead.
instead of scalar(...) a reference to a reference now stringifies as ``ref(0x81485ec)'' instead of  ``scalar(0x81485ec)''
/lib/math/bigint/t/with_sub.t 1628 4 0.25% 9 12 1627-1628 ../lib
[561] pack() / unpack() can now group template letters with () and then apply repetition/count modifiers on the groups.
the  quicksort divide and conquer strategy works well on platforms with relatively  small, very fast, caches.
it will be called in the context of the new  thread, so all modifications are made in the new area.
other bugs inchdir() and cwd::cwd() have also been  fixed.
many of the bug fixes in 5.8.0 were already seen in the 5.6.1 maintenance release since the two releases were kept closely coordinated (while 5.8.0 was still called 5.7.something).
use of v-strings in use/require causes a (backward) portability  warning.
time()and gettimeofday())return broken values, and therefore in aix 4.2 perl is not linked against libc_r.
warnings relating to the use of the new restricted hashes feature  have been added.
failed tests 128-130  op/pack...............................failed tests 25-5625  op/pow................................ op/taint..............................#  msgsnd failed ../ext/io/lib/io/t/io_poll............failed tests 3-4  ../ext/ipc/sysv/ipcsysv...............failed tests 2, 5-6  ../ext/ipc/sysv/t/msg.................failed tests 2, 4-6  ../ext/
the english module can now be used without the infamous performance hit by saying use english '-no_match_vars'; (assuming, of course, that you don't need the troublesome variables @last_match_start and @last_match_end english aliases for $`, $&, or $'.)
also, $config{byteorder} is now computed dynamically--this is more robust with ``fat binaries'' where an executable image contains binaries for more than one binary platform, and when cross-compiling.
this is admittedly not a clean solution, and the solution may  not even work at all.
in sys::syslog there is now a failover mechanism that will go  through alternative connection mechanisms until the message is successfully  logged.
the dynix/ptx platform (also known as dynixptx) is supported at or  near osvers 4.5.2.
(this feature, like other new features that combine  unicode and i/o, work only if you are using perlio, but that's the default.)
the socketpair tests are known to be unhappy in sco 3.2v5.0.4: ext/socket/socketpair.t...............failed tests 15-45 solaris 2.5
lexicals ii: lexicals leaked at file scope into subroutines that were declared before the lexicals.
[561] file::spec->tmpdir() now prefers c:/temp over /tmp  (works better when perl is running as service).
the information is attached to the newoffsets member of the struct regexp.
also individual keys can be restricted so that the key  cannot be deleted and the value cannot be changed.
installperl now outputs everything to stderr.
the following builtin functions are now overridable: each(), keys(),  pop(), push(), shift(), splice(), unshift().
[561+] a lost warning ``can't declare ... dereference in my'' has been restored (perl had it earlier but it became lost in later releases.)
thex command  has been extended so thatx n
this change may have surprising side effects because signals no longer interrupt perl instantly.
pl are now checked for sanity much more carefully than before.
if perl is configured with -duse64bitall, the successful result of the subtest 10 of lib/posix may arrive before the successful result of the subtest 9, which confuses the test harness so much that it thinks the subtest 9 failed.
seethe perlfork manpage for details.
10 1 10.00% 4 op/flip.t 15 1 6.67% 15 these failures are unlikely to get fixed as 5.005-style threads are  considered fundamentally broken.
previously dynix/ptx had problems in its configure probe for  non-blocking i/o. epoc epoc now better supported.
for tests 129 and 130, the failing platforms do not comply with the ansi c standard: lines 19ff on page 134 of ansi x3.159 1989, to be exact.
another change related to the architecture name is that ``-64all'' (-duse64bitall, or ``maximally 64-bit'') is appended only if your pointers are 64 bits wide.
the rules for allowing underscores (underbars) in numeric constants  have been relaxed and simplified: now you can have an underscore simply between digits.
it is still a useful module, though, and is available from the cpan.
the same problem affects slicing over non-existent indices/keys of a tied/magical array/hash.
our()variables will not cause bogus ``variable will not stay shared'' warnings.
t/op/alarm.t ext/time/hires/hires.t lib/benchmark.t  lib/memoize/t/expmod_t.t lib/memoize/t/speed.t
db-recno.t 149 3  2.01% 61 63 65
this improvement is only available on vms v6.0 and  later.
the obsolete method of making a special (e.g., debugging) flavor of perl by saying make libperl=libperld.a has been removed.
(bsd_glob() does still sort platform natively, ascii or ebcdic, unless glob_alphasort is specified.)
libnetcfg has been added to configure libnet.
[561] ``our'' variables of the same name declared in two sibling blocks  resulted in bogus warnings about ``redeclaration'' of the variables.
the following tests fail on 5.8.0 perl in beos personal 5.03: t/op/lfs............................failed at test 17  t/op/magic..........................failed at test 24  ext/fcntl/t/syslfs..................failed at test 17  ext/file/glob/t/basic...............failed at test 3  ext/posix/t/sigaction...............failed at test 13  ext/posix/t/waitpid.................failed at test 1
boms (byte order marks) at the beginning of perl files (scripts,  modules) should now be transparently skipped.
[561+] scalar::util is a selection of general-utility scalar  subroutines, such as blessed(), reftype(), and tainted().
(y with diaeresis) and \xbe (y with diaeresis) not behaving correctly when being matched case-insensitively.
[561] mac os classic is now supported in the mainstream source package  (macperl has of course been available since perl 5.004 but now the source code  bases of standard perl and macperl have been synchronised)
the arguments of writemakefile() in makefile.
perl -d:module=arg,arg,argnow works (previously one couldn't pass in multiple arguments.)
perlio::via, by nick ing-simmons, acts as a perlio layer and wraps perlio layer functionality provided by a class (typically implemented in perl code).
the perlio::scalar and perlio::via (capitalised)  were renamed asperlio::scalar and perlio::via (all  lowercase) just before 5.8.0.
[561] sort()has been changed to use primarily mergesort internally as opposed to the earlier quicksort.
[561] utime now supports utime undef, undef, @filesto change the file timestamps to the current time.
seethe pod::text::overstrike  manpage.
in versions 5.000  through 5.003, the error was literal @example now requires backslash
(utf-8 has not been made the default since there are many perl scripts out there that are using various national eight-bit character sets, which would be illegal in utf-8.)
* perl now works on post-3.0 freebsds.
(they used to be aliases for d/f, but  you never knew that.)
[[:space:]] to  include the (very rarely used) vertical tab character.
the exploit attempt reporting feature has been completely removed from perl  5.8.0 (and the maintenance release 5.6.1, and it was removed also from all the  perl 5.7 releases), so that particular vulnerability isn't there anymore.
similarly, building the digest::md5 extension has been known to fail with  ``*** termination code 139 (bu21)''.
[561] win32::getcwd() correctly returns c:\ instead of c: when at the  drive root.
note that this means that some scripts that may have relied on earlier buggy behavior may no longer work correctly.
math::bigfloat and math::bigint have undergone a full rewrite by  tels.
xml::parser not working use xml::parser 2.31 or later.
also, introduced @-and @+.
[561] pack ``z'' now correctly terminates the string with ``\0''.
seethe  test::more manpage.
added rsignal(), whichsig(), do_join(), op_clear, op_null, ptr_table_clear(), ptr_table_free(), sv_setref_uv(), and several utf-8 interfaces to the publicised api.
the ``plugins'' are named as usual, for example perlio::via::quotedprint.
this means that additional warnings may now show  up when compiling xs code.
in other words: you just have to recompile  your modules containing xs code, sorry about that.
net::ping has been considerably enhanced by rob brown: multihoming  is now supported, win32 functionality is better, there is now time measuring  functionality (optionally high-resolution using time::hires), and there is now  ``external'' protocol which uses net::ping::external module which runs your  external ping utility and parses the output.
these documents usually detail one or more of the following subjects: configuring, building, testing, installing, and sometimes also using perl on the said platform.
numerous updates; currently synchronised with cygwin 1.3.10.previously dynix/ptx had problems in its configure probe for non-blocking i/o. epoc epoc now better supported.
unicode can be used in hash keys, unicode in regular expressions should work now, unicode in tr/// should work now, unicode in i/o should work now.
this is  caused by the characters \xff
the byteorder was only sizeof(long)bytes long (1234 or 4321), but now it is correctly sizeof(iv)bytes long, (12345678 or 87654321).
the pat, tr, and fold failures are genuine perl problems caused by ebcdic (and in the pat and fold cases, combining that with unicode).
currently only printf()is tested: how to output various basic data types from xs.
pod2htmlnow understands pod written using different line endings (pc-like crlf versus unix-like lf versus macclassic-like cr).
in particular, caller()now returns a subroutine name of (unknown)for subroutines that have been removed from the symbol table.
ndbm_file/ndbm.t 13 3328 71 59 83.10% 1-2 4 16-71 ../ext/
iterative logical name translations are now limited to 10 iterations in  imitation of show logical and other openvms facilities.
data::dumper now has an option to sort hashes.
[561] duping socket handles with open(f, ``>&mysock'') now works  under windows 9x.
in the ithreads model any data sharing between threads must be  explicit, as opposed to the model where data sharing was implicit.
vos (stratus) when perl is built using the native build process on vos release 14.5.0 and  gnu c++/gnu tools 2.0.1, all attempted tests either pass or result in todo  (ignored) failures.
also the ext/posix/t/posix.t subtest #10 fails
english.t 2 512 54 2 3.70% 2-3 ../lib/filecache.t 5 1 20.00% 5 ../lib/filter/simple/t/data.t 6 3 50.00% 1-3 ../lib/filter/simple/t/filter_only.
[561+] perlintro is a gentle introduction to perl.
now xsubs can have attributes just like subs.
there may also be information at http://www.perl.com/ ,  the perl home page.
one potential failure is whether one can (or, if one can,  whether it's a good idea to) link together at all binaries with different ideas  about file offsets; all this is platform-dependent.
if you are on irix or tru64 platforms, new profiling/debugging  options have been added; seethe perlhack manpage for more information about  pixie and third degree.
[561] the regular expression captured submatches ($1, $2, ...) are now  more consistently unset if the match fails, instead of leaving false data lying  around in them.
seethe perlvos manpage.
seethe perlaix manpage.
the major reason for the discontinuity is the new io architecture called  perlio.
seelocalising tied arrays and hashes is broken.
this works again now.
the suggested cure is to  upgrade your solaris.
math::bigrat for big rational numbers, to accompany  math::bigint and math::bigfloat, from tels.
note, however, that their prototype (as given by prototype("core::chomp")is undefined, because it cannot be expressed and therefore one cannot really write replacements to override these builtins.
in future releases this naming may change.
note that some of the net::ping tests are disabled when running under the perl distribution since one cannot assume one or more of the following: enabled echo port at localhost, full internet connectivity, or sympathetic firewalls.
beos has been reclaimed.
appllib_exp, a lesser-known configuration-time definition, has been  documented.
\$bar[1] will assign undef to $bar[1] (assuming that it didn't exist before), but for tied/magical arrays and hashes such autovivification does not happen because there is currently no way to catch the reference creation.
in future releases, non-perlio aware xs modules may become  completely unsupported.
[561] numeric conversions did not recognize changes in the string value properly in certain circumstances.
note that the  new semantics doesn't work with the attribute::handlers module (as of version  0.76).
the rationale is that neither does localtime(), andtimelocal() and localtime() are supposed to be inverses of each other.
list::util, by graham barr, is a selection of  general-utility list subroutines, such as sum(), min(), first(), and shuffle().
guessing which symbols your c compiler and preprocessor define... will probably fail with error messages like cc-20 cc:
(the  perlbc tools has been removed.
(5.7.0 came out before 5.6.1: the development branch 5.7 released earlier than the maintenance branch 5.6)
be sure to trim your bug down to a tiny but sufficient test case.
seethe class::isa manpage.
the tr///operator now works.
the perl5opt environment variable (for passing command line  arguments to perl) didn't work for more than a single group of options.
better chdir() return value for a non-existent  directory.
(\p{space} isn't, since that  includes the vertical tabulator character, whereas\s doesn't.)
[561] the following modules now work on windows: extutils::embed
the shell module now has an oo interface.
check your shared library path, and  any shared perl libraries in those directories.
the my expr : attrs syntax now applies variable attributes at  run-time.
because in effect storable does serialisation of perl data structures, with it you can also clone deep, hierarchical datastructures.
quicksort has a worst case run time that can grow like  n**2, so-calledquadratic behaviour, and it can happen on patterns that  may well arise in normal use.
the current user-visible implementation of pseudo-hashes (the weird use of the first array element) is deprecated starting from perl 5.8.0 and will be removed in perl 5.10.0, and the feature will be implemented differently.
extutils::makemaker now uses file::spec internally, which hopefully  leads to better portability.
yes, much quicker than perlretut.
as a part of the ithreads implementation perl will also use any necessary and detectable reentrant libc interfaces.
however, the lvalue subroutine feature still remains experimental.
documentation on how to use the perl source repository has been added toporting/repository.pod.
chdir() now works better despite a crt bug; now works with  multiplicity (see install); now works with perl's malloc.
storable was originally created by raphael manfredi, but it is now maintained  by abhijit menon-sen. storable has been enhanced to understand the two new hash  features, unicode keys and restricted hashes.
failure of thread (5.005-style) tests note that support for 5.005-style threading is deprecated,  experimental and practically unsupported.
the debugger can now show lexical variables if you have the cpan module padwalker installed.
(they produce something other than ``1'' and ``-1'' when formatting 0.6 and -0.6 using the printf format ``%.0f''; most often, they produce ``0'' and ``-0''.)
chop(@list) in list context returned the characters  chopped in reverse order.
alpha systems with old gccs fail several tests
use in production environments is discouraged.
s2phas been completely rewritten in perl.
this enables the new behaviour for perl embedders.
and %h->{...} have now been deprecated.
warnings relating to the use of the new restricted hashes feature have been added.
[561] html files will now be installed in c:\perl\html instead of c:\perl\lib\pod\html
extract_delimited("'never say never', he never said", "'", ''); $a will be ``'never say never''', $b will be ', he never said'.
sometimes this problem may also indicate a partial perl 5.8.0 installation,  seemac os x dyld undefined symbols for an example and how to deal with it.
(this problem didn't affect windows platforms.)
(multipurpose internet mail extensions).
[561]for perl developers, several new make targets for profiling and debugging have been added; seethe perlhack manpage.
the prototypes are now checked better at compile-time for invalid  syntax.
note  that perlcc is still considered very experimental and unsupported.
the regex compiler now maintains a structure that identifies nodes  in the compiled bytecode with the corresponding syntactic features of the  original regex expression.
luckily, these days the need for h2ph is rare.
nonstop-ux is now supported.
these will get installed as perljp perlko perlcn perltw map()could get pathologically slow when the result list it generates is larger than the source list.
for example, if you reallydon't care about the order of even and odd digits, quicksort will run in o(n) time; it's very good at sorting many repetitions of a small number of distinct elements.
more appropriate mechanisms for selecting the  implementation exist, but they wouldn't have arrived in time to save quicksort.
seethe  file::temp manpage.
switch, by damian conway, has been added.
several unicode fixes.
the tainting behaviour of sprintf()has been rationalized.
seethe locale::maketext manpage, and the locale::maketext::tpj13 manpage.
understanding of numbers in general a lot of fixing has happened in the area of perl's understanding  of numbers, both integer and floating point.
these will get installed as perljp perlko perlcn perltw
the exact numbers depend on the platform and perl  configuration used.
for example, \p{tibetan} refers to the script, while \p{intibetan} refers to the block.
this is caused by darwin's ufs not supporting inode change time.
[561] sort()is also fully reentrant, in the sense that the sort function can itself call sort().
quicksort was rescued by implementing a sort pragma to control aspects of  the sort.
untie() will now call an untie() hook if  it exists.
perlpod has been rewritten to be clearer and to record the best  practices gathered over the years.
note that the tr///cufunctionality has been removed (but see pack('u0', ...)).
[561+] perlrequick is a regular expressions quick-start guide.
thestable subpragma forces stable behaviour,  regardless of algorithm.
[561] the autouse pragma didn't work for multi::part::function::names.
the perl pack function now maps overflowed values to +infinity and underflowed values to -infinity.
in versions 5.004_01 through 5.6.0, the error was in string, @example now must be written as \@example the idea here was to get people into the habit of writing "fred\@example.com" when they wanted a literal @ sign, just as they have always written"give me back my \$5" when they wanted a literal $ sign.
nothing gets installed, but the code is worth studying  for extension writers.
xs::typemap, by tim jenness, is a test extension that exercises xs typemaps.
it broke at some point during the ithreads work and we could not find amiga experts to unbreak the problems.
attributes::reftype() now works on tied arguments.
on a really fast machine you can hope to finish the suite in about 6-8 minutes (wallclock time).
the following tests are known to fail in solaris x86 with perl configured to use 64 bit integers: ext/data/dumper/t/dumper.............failed at test 268 ext/devel/peek/peek..................failed at test 7
most of the rest point at problems with sysv ipc.
you should carefully launder the arguments to guarantee their validity.
now perl postpones handling of signals until it's safe (between opcodes).
use locale::country; $country = code2country('jp'); # $country gets 'japan' $code = country2code('norway'); # $code gets 'no' see the locale::constants manpage, the locale::country manpage, the locale::currency manpage, and the locale::language manpage.
the perl header files no longer suppress common warnings from the  microsoft visual c++ compiler.
the following tests are known to fail in mac os x 10.1.5 because of buggy  (old) implementations of berkeley db included in mac os x: failed test stat wstat total fail failed list of failed  -------------------------------------------------------------------------  ../ext/db_file/t/db-btree.t 0 11 ?? ??
perlio::via::quotedprint, by elizabeth mattijsen, is an  example of aperlio::via class: use perlio::via::quotedprint;  open($fh,">:via(quotedprint)",$path); this will automatically convert everything output to $fh to  quoted-printable.
the same problem  affects slicing over non-existent indices/keys of a tied/magical array/hash.
there is no need to \-escape any \wcharacter.
the template letters are j, j, f, and d. pack('u0a*', ...)can now be used to force a string to utf-8.
country2code('norway'); # $code gets 'no' see the locale::constants manpage, the locale::country manpage, the  locale::currency manpage, and the locale::language manpage.
[561] numeric conversions did not recognize changes in the string value  properly in certain circumstances.
... that is a literal undef, not an undefined value.
if you have cpan access (either network or a local copy such as a  cd-rom) you can during specify extra modules to configure to build and install  with perl using the -dextras=... option.
spurious syntax errors generated in certain situations, when glob() caused file::glob to be loaded for the first time, have been  fixed.
use utf8, almost) previously in perl 5.6 to use unicode one would say ``use utf8'' and then the operations (like string concatenation) were unicode-aware in that lexical scope.
use of the /c match modifier without an accompanying /g modifier elicits a new warning: use of /c modifier is  meaningless without /g.
[561] perlivpis a new installation verification procedure utility for running any time after installing perl.
seethe scalar::util manpage.
the leading _ is a reminder that these subpragmas may not survive beyond 5.8.
the test module has been significantly enhanced.
[561] posix::sleep() now returns the number of unslept seconds (as the posix standard says), as opposed to core::sleep() which returns the number of slept seconds.
for developers interested in enhancing perl's unicode capabilities:  almost all the ucd files are included with the perl distribution in the lib/unicore subdirectory.
again, this is not perl's fault-- the libc of mac os x is not threadsafe (in this particular test, the localtime() call is found to be threadunsafe.)
[561] a socket handle leak in accept()has been fixed.
another change related to the architecture name is that ``-64all''  (-duse64bitall, or ``maximally 64-bit'') is appended only if your pointers are  64 bits wide.
the template letters arej, j, f , andd. pack('u0a*', ...) can now be used to force a string to  utf-8.
this means that for example instead  ofdo format() you must write do &format().
instead, if you explicitly choose not to use perlio (configure command line option -uuseperlio), you will get ``-stdio'' appended.
perl 5.8 unfortunately does not build anymore on amigaos; this broke accidentally at some point.
test::more, by michael schwern, is yet another framework for writing test scripts, more extensive than test::simple.
perl now tries internally to use integer values in numeric conversions and  basic arithmetics (+ - * /) if the arguments are integers, and tries also to  keep the results stored internally as integers.
math::bigratfor big rational numbers, to accompany math::bigint and math::bigfloat, from tels.
db-recno.t 149 3 2.01% 61
a29k ^ cc-65 cc: error file =
hash  values output from the algorithm on a hash of all 3-char printable ascii keys  comes much closer to passing the diehard random number generation tests.
the  fatal error has been downgraded to an optional warning: possible unintended interpolation of @example in string this warns you that "fred@example.com" is going to  turn intofred.com if you don't backslash the @.
many of the new tests are of course introduced by the new  modules, but still in general perl is now more thoroughly tested.
there are now several profiling make targets.
the tr///c and tr///u features have been removed and will not return; the interface was a mistake.
class::isa, by sean burke, is a module for reporting  the search path for a class's isa tree.
the system function and backticks operator have improved functionality and better error handling.
in any case, suidperl should only be used by security experts who know exactly what they are doing and why they are using suidperl instead of some other solution such as sudo ( seehttp://www.courtesan.com/sudo/ ).
b::concise, by stephen mccamant, is a new compiler  backend for walking the perl syntax tree, printing concise info about ops.
(something thatour() does not and will not support.)
(subroutine and our variables still get attributes applied at compile-time.)
next, by damian conway, is a pseudo-class for method redispatch.
the documentation for the posix-bc platform is called ``bs2000'', to  avoid confusion with the perl posix module.
several other encodings (like the rest of the iso-8859, cp*/win*, mac, koi8-r, three variants ebcdic, chinese, japanese, and korean encodings) are included and can be loaded at runtime.
[561] configure.gnu now works with options with whitespace in them.
additional bonuses are that the worst case behaviour of sort() is now better (in computer science terms it now runs in time o(n  log n), as opposed to quicksort'stheta(n**2) worst-case run time  behaviour), and thatsort() is now stable (meaning that elements  with identical keys will stay ordered as they were before the sort).
a new command-line option, -tis available.
[561+] a failed (pseudo)fork now returns undef and sets errno to eagain.
as a stop-gap measure to avoid people from getting frustrated at the mysterious results (core dumps, most often), it is forbidden for now (you will get a fatal error even from an attempt).
so the perlio:raw layer (or ``discipline'',  to use the camel book's older terminology) is now formally defined as being  equivalent tobinmode(fh) - which is in turn defined as doing  whatever is necessary to pass each byte as-is without any translation.
use digest::md5 'md5_hex'; $digest = md5_hex("thirsty camel"); print $digest, "\n"; # 01d19d9d2045e005c3f1b80e8b164de1 note: the md5 backward compatibility module is deliberately  not included since its further use is discouraged.
extutils::makemaker has been significantly cleaned up and fixed.
you will now need an explicit untie to destroy a self-tied glob.
perlbug is now much more robust.
if you find what you think is a bug, you might check the articles recently  posted to the comp.lang.perl.misc newsgroup and the perl bug database at http://bugs.perl.org/ .
seethe  unicode::collate manpage.
see the perlmod manpage attribute::handlers, originally by damian conway and now maintained by arthur bergman, allows a class to define attribute handlers.
libnet, by graham barr, is a collection of perl5 modules related to network programming.
the core-dumping functionality will remain in future  available as an explicit call tocore::dump(), but in future  releases the behaviour of an unqualifieddump() call may change.
seethe net::ftp manpage, the net::nntp manpage, the net::ping manpage (not part of libnet, but related), the net::pop3 manpage, the net::smtp manpage, and the net::time manpage.
perl_object has been completely removed.
modules may fail to compile at all, or they may compile and  work incorrectly.
internally, the execution of end blocks is now controlled by pl_exit_flags & perl_exit_destruct_end.
[561] configure support for pdp11-style memory models has been removed due to obsolescence.
834 845 op/sprintf.t 224 3 1.34% 98 100 136 op/tr.t 97 5 5.15% 63 71-74  uni/fold.t 780 6 0.77% 61 169 196 661 710-711 the failures in dumper.t and downgrade.t are problems in the tests, those  in io_unix and sprintf are problems in the uss (udp sockets and printf  formats).
use -ddebugging instead.
memoizecan make your functions faster by trading space for time, from mark-jason dominus.
eval "v200" now works.
previous versions of perl and some readings of some sections of camel iii implied that the :raw``discipline'' was the inverse of :crlf.
this results hopefully in more accurate numbers.
but how about the odd numbers, which all compare equal?
malformed unicode encodings (utf-8 and utf-16) cause a lot of warnings, ad doestrying to use utf-16 surrogates (which are unimplemented).
seethe filter::util::call manpage.
this parallels the behavior of use vis-a-vis import.
perlutil explains the command line utilities packaged with the perl  distribution.
for clarity, you may want to prefer reuseaddr.
perl 5.8 unfortunately does not build anymore on amigaos; this broke  accidentally at some point.
the performance has been  improved for common scenarios.
[561+] the new bignum, bigint, and bigrat pragmas, by tels, implement transparent bignum support (using the math::bigint, math::bigfloat, and math::bigrat backends).
mkdir() now ignores trailing slashes in the directory  name, as mandated by posix.
on linux platforms the  /bin/mail program had an undocumented feature which when combined with suidperl  gave access to a root shell, resulting in a serious compromise instead of  reporting the exploit attempt.
(basically what happens is that competing  threads can corrupt shared global state, one good example being regular  expression engine's state.)
also, $config{byteorder} is now computed dynamically--this is more robust  with ``fat binaries'' where an executable image contains binaries for more than  one binary platform, and when cross-compiling.
perlpodspec is a more formal specification of the pod format, mainly of interest for writers of pod applications, not to people writing in pod.
extract_delimited("'never say never', he never  said", "'", ''); $a will be ``'never say never''', $b will be ', he never said'.
[561+], pod::parser, storable, term::ansicolor, test,  text-tabs+wrap.
if you run sort { $a  $b } ( 1 .. $n , 1 .. $n ); (something you might approximate if you wanted to merge two sorted arrays using sort), doubling $n doesn't just double the quicksort time, it quadruples it.
the even and odd numbers appear in the output in the same order they appeared in the input.
it is the  little brother of-t: instead of dying on taint violations, lexical  warnings are given.
\s(\p{space} isn't, since that includes the vertical tabulator character, whereas \sdoesn't.)
seethe attribute::handlers manpage.
also, introduced @last_match_start and @last_match_end english aliases for @- and @+.
with these, you can implement rather advanced parsing algorithms.
[561] the makefiles now default to the features enabled in activestate  activeperl (a popular win32 binary distribution).
some versions of glibc have a broken modfl().
for normal arrays $foo =
in safe, %incis now localised in a safe compartment so that use/require work.
pod2html now produces xhtml 1.0.
and, ironically, this  mergesort does particularly well where quicksort goes quadratic: mergesort  sorts (1..$n, 1..$n) ino(n) time.
no more corrupt internal state since the current operation is always finished first, but the signal may take more time to get heard.
file::glob::glob() has been renamed to file::glob::bsd_glob()  because the name clashes with the builtin glob().
the perl pack function now maps overflowed values  to +infinity and underflowed values to -infinity.
added rsignal(), whichsig(), do_join(), op_clear, op_null,  ptr_table_clear(), ptr_table_free(), sv_setref_uv(), and several utf-8  interfaces to the publicised api.
all regular expression compilation error messages are now hopefully  easier to understand both because the error message now comes before the failed  regex and because the point of failure is now clearly marked by a{bar} has been deprecated for a while.
callbacks (naughtily) exiting with ``next;'' instead of ``return;'' now work.
io::socket now has an atmark() method, which returns  true if the socket is positioned at the out-of-band mark.
you can enable/disable them with use/no warnings 'file::find';.
with split elicits use of /g modifier is meaningless in split.
[561+] right-hand side magic (gmagic) could in many cases such as string  concatenation be invoked too many times.
end blocks are now run even if you exit/die in a begin block.
this feature helps in writing internationalised software, and in general when the order of the parameters can vary.
in some setups the former has been known to spuriously also try  to run ``make install''.
there are now about 69 000 individual tests (spread over  about 700 test scripts), in the regression suite (5.6.1 has about 11 700 tests,  in 258 test scripts)
utility changes emacs perl mode (emacs/cperl-mode.el) has been updated to version  4.31.
since the new code is  more correct (if you have two constants where the first one is a prefix of the  second one, the first constantnever got defined), less lossy  (it uses integers for integer constant, as opposed to the old code that used  floating point numbers even for integer constants), and slightly faster, you  might want to consider regenerating your extension code (the new scheme makes  regenerating easy).h2xs now also supports c trigraphs.
several other encodings (like the rest of the iso-8859,  cp*/win*, mac, koi8-r, three variants ebcdic, chinese, japanese, and korean  encodings) are included and can be loaded at runtime.
you can ignore the error, but it does cause a slight problem: you cannot fully benefit from the h2ph utility (seeh2ph) that can be used to convert c headers to perl libraries, mainly used to be able to access from perl the constants defined using c preprocessor, cpp.
if building threaded perl, you may get compilation warning from pp_sys.c: "pp_sys.c", line 4651.39: 1506-280 (w) function argument assignment between types "unsigned char*" and "const void*" is not allowed.
support for unicode, iso-8859-1, and ascii are compiled in  to the module.
this will create in perl/build/directory a tree of symbolic links pointing to files in /path/to/perl/source.
since the new code is more correct (if you have two constants where the first one is a prefix of the second one, the first constantnever got defined), less lossy (it uses integers for integer constant, as opposed to the old code that used floating point numbers even for integer constants), and slightly faster, you might want to consider regenerating your extension code (the new scheme makes regenerating easy).h2xs now also supports c trigraphs.
failed at test 3 t/op/inccode.........................(crash) and a few lib/extutils tests, and several hundred encode/t/aliases.t failures that work fine with long filenames.
if your  existing programs depends on the underlying implementation, consider usingthe  class::pseudohash manpage from cpan.
this version of perl detects this brokenness and has a workaround for it.
there should be no reported test failures with a default configuration, though there are a number of tests marked todo that point to areas needing further debugging and/or porting work.
if tr/// is just counting characters, it doesn't attempt to modify its target.
you can enable/disable them withuse/no warnings 'file::find';.
unshift() should now be noticeably faster.
perl58delta - what is new for perl v5.8.0
this is now handled correctly.
memoize/t/errors.t 0 139 11 5 45.45% 7-11  ../lib/memoize/t/tie_ndbm.t 13 3328 4 4 100.00% 1-4 run/fresh_perl.t 97 1 1.03%  91 ndbm_file fails
the existing behaviour when localising tied arrays and hashes is wrong, and will be changed in a future release, so do not rely on the existing behaviour.
math::complex handles inf, nan etc., better.
our() variables will not cause bogus ``variable will  not stay shared'' warnings.
a number of other properties are now supported, including \p{l&} , \p{any} \p{assigned}, \p{unassigned} , \p{blank} [561] and \p{spaceperl} [561] (along with their \p{...} versions, of course).
failing locale test 117 for iso 8859-15 locales the iso 8859-15 locales may fail the locale test 117 in freebsd.
perl 5.6.0 could emit spurious warnings about redefinition of dl_error() when statically building extensions into perl.
generating illegal unicode code points such as u+fffe, or the utf-16  surrogates, now also generates an optional warning.
mime::quotedprint, by gisle aas, allows you to encode data in quoted-printable encoding, as defined in rfc 2045 -mime
it seems that for some reason ``make install'' doesn't always completely overwrite the files in /library/perl.
use of /c in substitutions, even with /g, elicits use of /c modifier is meaningless in s///. use of /g with split elicits use of /g  modifier is meaningless in split.
if this test fails, it indicates that your libc (c library) is not threadsafe.
linux with glibc 2.2.5 fails t/op/int subtest #6 with -duse64bitint
the lexical warnings category ``deprecated'' is no longer a  sub-category of the ``syntax'' category.
if building threaded perl, you may get compilation warning from  pp_sys.c: "pp_sys.c", line 4651.39: 1506-280 (w) function argument  assignment between types "unsigned char*" and "const void*"  is not allowed.
now works (as much as possible; see the perlvar manpage for details).
in  particular, however, this allows variable attributes to be useful fortie interfaces, which was a deficiency of earlier releases.
our can now have an experimental optional attribute unique that affects how global variables are shared among multiple  interpreters, seeour in the perlfunc manpage.
the perl5opt environment variable (for passing command line arguments to perl) didn't work for more than a single group of options.
spurious syntax errors generated in certain situations, when glob()caused file::glob to be loaded for the first time, have been fixed.
unicode::normalize, by sadahiro tomoyuki, implements the various unicode normalization forms.
the major reason for the discontinuity is the new io architecture called perlio.
3 a semicolon is expected at this point.
the method is also  exportable as asockatmark() function.
use warnings qw(fatal all) did not work as intended.
mac os x please remember to set your environment variable lc_all to ``c'' (setenv  lc_all c) before running ``make test'' to avoid a lot of warnings about the  broken locales of mac os x.
bad switch yylook 79bad switch yylook 79bad switch yylook 79bad switch yylook 79#ifdef
the syntaxes @a->[...]and %h->{...}have now been deprecated.
the latter is an article about software localization, originally  published in the perl journal #13, and republished here with kind permission.
localised tied variables no longer leak memory use tie::hash; tie my %tied_hash => 'tie::stdhash'; ... # used to leak memory every time local() was called; # in a loop, this  added up.
it  converts pod data to formatted overstrike text.
untie()will now call an untie()hook if it exists.
the behavior of system() with multiple arguments has  been rationalized.
for example when building the tk extension for cygwin, you may get an error message saying ``unable to remap''.
seethe perlthrtut manpage for more  information.
one such known spot are the\p{} and \p{} regular expression constructs for code points less than 256: thepp are testing for unicode code points, not knowing about ebcdic.
in 5.10, it is expected to be removed.
if you intend to run only on fat (or if using anydbm_file on fat), run configure with the -ui_ndbm and -ui_dbm options to prevent ndbm_file and odbm_file being built.
however, the generated binaries continue to be incompatible with those  generated by the other supported compilers (gcc and visual c++).
this will default in 5.10.
interpreter threads (ithreads) is the new thread model introduced in perl 5.6 but only available as an internal interface for extension writers (and for win32 perl for fork()emulation).
an optional warning is generated (``illegal character in  prototype...'')
what this means is that in list context the functions will return only three values, not four.
suidperl is neither built nor installed by  default.
seethe b::concise manpage.
they provide the codes for various locale standards, such as ``fr'' for france, ``usd'' for us dollar, and ``ja'' for japanese.
the 5.005 threads model (module thread) is deprecated and expected to be removed in perl 5.10.
[561] changed the posix character class [[:space:]]to include the (very rarely used) vertical tab character.
t/op/alarm.t ext/time/hires/hires.t lib/
( http://www.freebsd.org/cgi/query-pr.cgi?pr=34308 ) irix with mipspro 7.3.1.2m or 7.3.1.3m compiler may fail the list::util test ext/list/util/t/shuffle.t by dumping core.
seethe i18n::langinfo manpage.
the re engine found in perl 5.6.0 accidentally pessimised certain kinds of simple pattern matches.
the leading_ is a reminder that these subpragmas  may not survive beyond 5.8.
all bsds setting $0 now works (as much as possible; see the perlvar  manpage for details).
mpe/ix mpe/ix update after perl 5.6.0.
policy.sh policy change: if you are reusing a policy.sh file (see  install) and you use configure -dprefix=/foo/bar and in the old policy $prefix  eq $siteprefix and $prefix eq $vendorprefix, all of them will now be changed to  the new prefix, /foo/bar.
such platforms include alpha and  64-bit hppa, mips, ppc, and sparc.
unicode can be used in hash keys, unicode in regular  expressions should work now, unicode in tr/// should work now, unicode in i/o  should work now.
compiling with gcc still  not recommended because buggy code results, even with gcc 2.95.2.
my __package__ $obj now works.
using splice()past the end of an array now causes a warning.
this was caused by perl's using the operating system libraries in a situation where the result of the string to number conversion is undefined: now perl consistently handles such strings as zero in numeric contexts.
note that breaking out from potentially blocking operations should still work, though.
pdl failing some tests use pdl 2.3.4 or later.
[561] io::socket::inet has support for the reuseport option (if your  platform supports it).
and, for sufficiently large slices of pi, the quicksort algorithm in perl 5.8 won't return the same results even if reinvoked with the same input.
memoize/t/tie_ndbm.t 13 3328 4 4 100.00% 1-4 run/fresh_perl.t 97 1 1.03% 91 ndbm_file fails and odbm_file just coredumps.
time::piece (previously known as time::object) was removed because it was felt that it didn't have enough value in it to be a core module.
perlio::via, by nick ing-simmons, acts as a perlio  layer and wraps perlio layer functionality provided by a class (typically  implemented in perl code).
[[.cc.]] and [[=c=]] are  still recognised but now cause fatal errors.
so you really might prefer native builds and long filenames.
isalnum, isalpha, and iswordnow match titlecase.
h2xs uses the new extutils::constant module which will  affect newly created extensions that define constants.
it will be called in the context of the new thread, so all modifications are made in the new area.
in order to be more consistent with the return value of ref().
beware: microperl makes many assumptions, some of  which may be too bold; the resulting executable may crash or otherwise  misbehave in wondrous ways.
perlio::scalar, by nick ing-simmons, provides the  implementation of io to ``in memory'' perl scalars as discussed above.
s/$from/$to/g; } }; 1; # in user's code: use myfilter qr/red/ => 'green'; print "red\n"; # this code is filtered, will print "green\n" print "bored\n"; # this code is filtered, will print "bogreen\n" no myfilter; print "red\n"; # this code is not filtered, will print "red\n" file::temp, by tim jenness, allows one to create temporary files and directories in an easy, portable, and secure way.
perlio allows ``layers'' to be ``pushed'' onto a file handle to alter the  handle's behaviour.
[561] for perl developers, several new make targets for profiling and  debugging have been added; seethe perlhack manpage.
failed test stat wstat total fail failed list of failed --------------------------------------------------------------------------- ../ext/data/dumper/t/dumper.t 357 8 2.24% 311 314 325 327 331 333 337 339 ../ext/io/lib/io/t/io_unix.t 5 4 80.00% 2-5 ../ext/
[561] perlivp is a new installation verification procedure  utility for running any time after installing perl.
there is a make target ``test.deparse'' for trying this out.
all thread tests of perl now work,  but not without adding some yield()s to the tests, so while pth (and other  userlevel thread implementations) can be considered to be ``working'' with perl  ithreads,
use digest::md5 'md5_hex'; $digest = md5_hex("thirsty camel"); print $digest, "\n"; # 01d19d9d2045e005c3f1b80e8b164de1 note: the md5 backward compatibility module is deliberately not included since its further use is discouraged.
this did not work reliably in previous releases.
if you believe you have an unreported bug, please run the perlbug program included with your release.
in future  releases this naming may change.
added a new posix-ish character class [[:blank:]]which stands for horizontal whitespace (currently, the space and the tab).
cwdnow has a split personality: if possible, an xs extension is used, (this will hopefully be faster, more secure, and more robust) but if not possible, the familiar perl implementation is used.
since any old eight-bit data is not legal utf-8.
writemakefile()in makefile.
seethe attribute::handlers  manpage.
a version of net::ping::external  is available in cpan.
but that means if you sort the same large array twice, ties may be broken in different ways.
the properties \p{blank} and \p{spaceperl} have been added.
encode_base64('aladdin:open sesame'); $decoded = decode_base64($encoded); print $encoded, "\n"; # "qwxhzgrpbjpvcgvuihnlc2ftzq==" see the mime::base64 manpage.
this algorithm is reasonably  fast while producing a much better spread of values than the old hashing  algorithm (originally by chris torek, later tweaked by ilya zakharevich).
in addition to config.over, a new override file, config.arch, is available.
[561] the makefiles now default to the features enabled in activestate activeperl (a popular win32 binary distribution).
but it is skipped for now  because the failure is apple's fault, not perl's (blocked signals are lost).
suggestions for new shiny examples welcome but the main issue is that the  examples need to be documented, tested and (most importantly) maintained.
be sure to trim your bug down to  a tiny but sufficient test case.
lexicals ii: lexicals leaked at file scope into subroutines that  were declared before the lexicals.
it now correctly uses the supplied port number as is.
the version of berkeley db used when the perl (and, presumably, the db_file extension) was built is now available as @config{qw(db_version_major db_version_minor db_version_patch)}from perl and as db_version_major_cfg db_version_minor_cfg db_version_patch_cfgfrom c. building berkeley db3 for compatibility modes for db, ndbm, and odbm has been documented in install.
in afs installations, one can configure the root of the afs to be somewhere else than the default/afs by using the configure parameter -dafsroot=/some/where/else.
also  the long doubles support in aix should be better now.
no module;does not produce an error even if module does not have an unimport()method.
tie::file, by mark-jason dominus, associates a perl array with the lines of a file.
piconv is an implementation of the character conversion  utilityiconv, demonstrating the new encode module.
it is now a top-level category in its  own right.
[561+] (5.6.1  has ucd 3.0.1.)
this improves the portability of system(@args)by avoiding the need for windows cmdshell specific quoting in perl programs.
filter::simple, by damian conway, is an easy-to-use  frontend to filter::util::call.
(this broke the  tk extension with 5.6.0.)
for careful hackers only.
see the perlunicode manpage, the utf8 manpage, and  http://www.unicode.org/unicode/reports/tr16/ for more information.
this improves the portability ofsystem(@args) by  avoiding the need for windowscmd shell specific quoting in perl  programs.
seethe filter::simple manpage.
pod2htmlnow allows specifying a cache directory.
for the list of platforms known to support perl, see supported platforms in the perlport manpage.
failed at test 3  t/op/inccode.........................(crash) and a few lib/extutils tests, and several hundred encode/t/aliases.t  failures that work fine with long filenames.
( 3,1,4,1,5,9 ); a numerical sort of the digits will yield (1,1,3,4,5,9), as expected.
[561] io::pipe io::poll net::pingio::file::new_tmpfile() is no longer limited to 32767 invocations per-process.
(the whole dump() feature is to considered deprecated, and possibly removed/changed  in future releases.)
[561] readline() on files opened in ``slurp'' mode could  return an extra ``'' (blank line) at the end in certain situations.
you can set the environment variable perl_test_net_ping to ``1'' (one) before running the perl test suite to enable all the net::ping tests.
the current user-visible implementation of pseudo-hashes (the weird  use of the first array element) is deprecated starting from perl 5.8.0 and will  be removed in perl 5.10.0, and the feature will be implemented differently.
standard: lines 19ff on page 134 of ansi x3.159 1989, to be exact.
locale::maketext, by sean burke, is a localization framework.
if your file system supports symbolic links, you can build perl outside of the source directory by mkdir perl/build/directory cd perl/build/directory sh /path/to/perl/source/configure -dmksymlinks ...
for most uses, the frontend filter::simple is to be preferred.
the behavior of system()with multiple arguments has been rationalized.
internally, the execution of end blocks is now controlled by pl_exit_flags  & perl_exit_destruct_end.
-scan now run non-interactively.
the long deprecated uppercase aliases for the string comparison  operators (eq, ne, lt, le, ge, gt) have now been removed.
the bug has been fixed.
posix-style signals are now emulated much better on vms versions prior to 7.0.
appllib_exp, a lesser-known configuration-time definition, has been documented.
suggestions for new shiny examples welcome but the main issue is that the examples need to be documented, tested and (most importantly) maintained.
seethe i18n::langtags manpage.
[561] file::glob now supports glob_limit constant to limit  the size of the returned list of filenames.
vms there should be no reported test failures with a default configuration,  though there are a number of tests marked todo that point to areas needing  further debugging and/or porting work.
(implemented by jeffrey friedl, nick ing-simmons, and  michael schwern.)
test::simple, by michael schwern, has basic utilities  for writing tests.
modifying $_ inside for(..) for (1..5) { $_++ } works without complaint.
digest, frontend module for calculating digests  (checksums), from gisle aas, has been added.
you can ignore the  error, but it does cause a slight problem: you cannot fully benefit from the  h2ph utility (seeh2ph) that can be used to convert c headers to perl  libraries, mainly used to be able to access from perl the constants defined  using c preprocessor, cpp.
perl used to have such a subroutine, but that is no more the case.
the following tests are known to fail on super-ux: op/64bitint...........................failed tests 29-30, 32-33, 35-36 op/arith..............................
inclone you  can do whatever you need to do, like for example handle the cloning of non-perl  data, if necessary.
platform specific problems aix if using the aix native make command, instead of just ``make'' issue  ``make all''.
although ``you shouldn't do that'', it was possible to write code  that depends on perl's hashed key order (data::dumper does this).
borland c++ v5.5 is now a supported compiler that can build perl.
compiling perl using the 64-bit platform sdk tools is now supported.
perliol documents the internals of perlio with layers.
[561] wait(), waitpid(), and backticks now return the correct exit status under windows 9x.
[561] lvalue subroutines can now return undefin list context.
mac os classic compilation of the standard perl distribution in mac os classic should now  work if you have the metrowerks development environment and the missing  mac-specific toolkit bits.
as a part of the ithreads implementation perl will also use any necessary  and detectable reentrant libc interfaces.
[561] selected bug fixes numerous memory leaks and uninitialized memory accesses have been hunted  down.
[561] wince is now supported.
cygwin numerous updates; currently synchronised with cygwin 1.3.10.
[561] file::spec->tmpdir()now prefers c:/temp over /tmp (works better when perl is running as service).
if you don't have /bin/mail, or if you have 'safe setuid scripts', or if suidperl is not installed, you are safe.
for example: open kid_ps, "-|", "ps", "aux" or die $!; forks the ps(1) command (without spawning a shell, as there are more than three arguments to open()), and reads its standard output via the kid_ps filehandle.
ipc::open3 now allows the use of numeric file descriptors.
the suggested cure is to upgrade your solaris.
since perlio is a drop-in replacement for stdio at the  source code level, this shouldn't be that drastic a change.
to call  the latter, qualify the call as&dump(...).
the unimplemented posix regex features
libwww-perl (lwp) fails base/date #51 use libwww-perl 5.65 or later.
there are now about 69 000 individual tests (spread over about 700 test scripts), in the regression suite (5.6.1 has about 11 700 tests, in 258 test scripts)
the builtin dump()function has probably outlived most of its usefulness.
[561] extutils::makemaker now uses $env{lib} to search for libraries.
the tr/// operator now works.
other future possibilities  include perlio::array and perlio::code.
the problem was caused by perl trying to report a suspected security  exploit attempt using an external program, /bin/mail.
in any case, suidperl should only be used by security experts who know exactly  what they are doing and why they are using suidperl instead of some other  solution such as sudo ( seehttp://www.courtesan.com/sudo/ ).
for  clarity, you may want to prefer reuseaddr.
file handles can translate character encodings from/to perl's  internal unicode form on read/write via the ``:encoding()'' layer.
devel::ppport, originally by kenneth albanowski and now  maintained by paul marquess, has been added.
[561] and -dr options to trace  tokenising and to add reference counts to displaying variables, respectively.
in any case, the change will break existing code  that relies on the current (ill-defined) semantics, so just avoid doing this in  general.
/lib/math/bigint/t/sub_mbf.t 1633 4 0.24% 8 11 1632-1633 ..
(you should be able to modify only  lvalue elements inside the loops.)
seethe file::temp manpage.
hp-ux lib/posix subtest 9 fails when lp64-configured
(implemented by jeffrey friedl, nick ing-simmons, and michael schwern.)
gcc needs to closely track the operating system release to avoid  build problems.
iterative logical name translations are now limited to 10 iterations in imitation of show logical and other openvms facilities.
[561] some cases of inconsistent taint propagation (such as within hash values) have been fixed.
formats now support zero-padded decimal fields.
depending on your platform, there are also other reasons why we decided to  break binary compatibility, please read on.
h2ph now supports c trigraphs.
perl installation leaves libnet unconfigured; use libnetcfg to configure it.
[561] lvalue subroutines can now return undef in list  context.
text::balanced, by damian conway, has been added, for  extracting delimited text sequences from strings.
[561]netbsd/threads: try installing the gnu pth (should be in the packages collection, orhttp://www.gnu.org/software/pth/), and configure with -duseithreads.
perlpod has been rewritten to be clearer and to record the best practices gathered over the years.
allow a read-only string on the left-hand side of a non-modifying tr///. if stderris tied, warnings caused by warnand dienow correctly pass to it.
the suidperl functionality is most probably going to be removed in perl 5.10.
the builtin dump() function has probably outlived most  of its usefulness.
the justification for this rests with quicksort's worst case behavior.
the package; syntax ( package without an  argument) has been deprecated.
say chdir()if you really mean that.
[561] attributes (such as :shared) didn't work with our().
several debugger fixes: exit code now reflects the script exit code,  condition"0" now treated correctly, the d command now checks line number,$. no longer gets corrupted, and  all debugger output now goes correctly to the socket if remoteport is set.
math::bigfloat and math::bigint have undergone a full rewrite by tels.
seethe perluniintro manpage for more  information about utf-8.
the socket extension is now dynamically loaded instead of being statically built in.
the main rationale was to have all core perlio  layers to have all lowercase names.
because of the unpredictability of tie-breaking order, and the quadratic  worst-case behaviour, quicksort wasalmost replaced completely with a  stable mergesort.
is serious but as of yet unsolved.
[561] utime now supports utime undef, undef, @files to change  the file timestamps to the current time.
the default on vax (d_float) has not changed.
building perl with -duseithreads or -duse5005threads now works under  hp-ux 10.20 (previously it only worked under 10.30 or later).
it can be used to prepend site-specific directories to perl's  default search path (@inc); see install for information.
the xcommand has been extended so that x n exprdumps out the value of expr to a depth of at most n levels.
storable/t/downgrade.t 12  3072 169 12 7.10% 14-15 46-47 78-79 110-111 150 161  ../lib/extutils/t/constant.t 121 30976 48 48 100.00% 1-48  ../lib/extutils/t/embed.t 9 9 100.00% 1-9 op/pat.t 922 7 0.76% 665 776 785 832-
encode_base64('aladdin:open sesame'); $decoded =  decode_base64($encoded); print $encoded, "\n"; #  "qwxhzgrpbjpvcgvuihnlc2ftzq==" see the mime::base64 manpage.
[561] earlier perls treated ``sub foo (@bar)'' as equivalent to ``sub foo  (@)''.
memoize/t/errors.t 0 139 11 5 45.45% 7-11 ../lib/
this implementation also allows  later systems to callkill from within a signal handler.
depending on your platform, there are also other reasons why we decided to break binary compatibility, please read on.
/anydbm_file.t 2 512 12 2 16.67% 1 4 ../lib/
if you find what you think is a bug, you might check the articles recently posted to the comp.lang.perl.misc newsgroup and the perl bug database at http://bugs.perl.org/ .
no more corrupt internal state since  the current operation is always finished first, but the signal may take more  time to get heard.
``blank'' is like c isblank(), that is, it contains only ``horizontal  whitespace'' (the space character is, the newline isn't), and the ``spaceperl''  is the unicode equivalent of\s
[561] current directory entries in %env are now correctly propagated to  child processes.
os/2 test failures the following tests are known to fail on os/2 (for clarity only the  failures are shown, not the full error messages): ../lib/extutils/t/mkbootstrap.t 1 256 18 1 5.56% 8  ../lib/extutils/t/packlist.t 1 256 34 1 2.94% 17 ../lib/extutils/t/basic.t 1  256 17 1 5.88% 14 lib/os2_process.t 2 512 227 2 0.88% 174 209  lib/os2_process_kid.t 227 2 0.88% 174 209 lib/rx_cmprt.t 255 65280 18 3 16.67%  16-18 op/sprintf tests 91, 129, and 130 the op/sprintf tests 91, 129, and 130 are known to fail on some platforms.
(this happens because the test scripts from under t/lib have been moved to be  closer to the library/extension they are testing.)
seethe memoize manpage.
and, ironically, this mergesort does particularly well where quicksort goes quadratic: mergesort sorts (1..$n, 1..$n) in o(n) time.
if stderr is tied, warnings caused by warn anddie now correctly pass to it.
[561] mac os x (or darwin) should now be able to build perl even on hfs+  filesystems.
the following tests are known to fail on os/2 (for clarity only the failures are shown, not the full error messages): ../lib/extutils/t/mkbootstrap.t 1 256 18 1 5.56% 8 ../lib/extutils/t/packlist.t 1 256 34 1 2.94% 17 ../lib/extutils/t/basic.t 1 256 17 1 5.88% 14 lib/os2_process.t 2 512 227 2 0.88% 174 209 lib/os2_process_kid.t 227 2 0.88% 174 209 lib/rx_cmprt.t 255 65280 18 3 16.67% 16-18 the op/sprintf tests 91, 129, and 130 are known to fail on some platforms.
the comparison block is now run in scalar context, and the arguments to be sorted are always provided list context.
[561] chdir(``'')or chdir(undef)instead of explicit chdir()is doubtful.
two new debugging options have been added: if you have compiled your perl with debugging, you can use the -dt
nothing gets installed, but the code is worth studying for extension writers.
performance enhancements map() could get pathologically slow when the result  list it generates is larger than the source list.
better chdir()return value for a non-existent directory.
seethe tie::memoize manpage.
[561] pack() / unpack()can now group template letters with ()and then apply repetition/count modifiers on the groups.
carp was sometimes affected by this problem.
rather than relying on c's argv[0] (which may not contain a full pathname) where possible $^x is now set by asking the operating system.
(well, at least the built-in attributes.) dthr and djsp have been obsoleted; the former removed (because it's a no-op) and the latter replaced with dsp.
you won't notice this for small arrays, but you will notice it with larger arrays, and you may not live long enough for the sort to complete on arrays of a million elements.
seethe win32 manpage for  details.
perly.c, sv.c, and sv.h have now been  extensively commented.
perl 5.6.1  still works for amigaos (as does the the 5.7.2 development release).
the socketpair tests are known to be unhappy in sco 3.2v5.0.4: ext/socket/socketpair.t...............failed tests 15-45
[561] fixed numerous memory leaks, especially in eval ``''.
[561] printing quads (64-bit integers) with printf/sprintf now works without the q l ll prefixes (assuming you are on a quad-capable platform).
[561] regular expression debug output (whether through use re 'debug' or via -dr) now looks better.
so sort { ($a % 2)  ($b % 2) } (3,1,4,1,5,9); will yield (4,3,1,1,5,9), guaranteed.
english.t 2 512 54 2 3.70% 2-3  ../lib/filecache.t 5 1 20.00% 5 ../lib/filter/simple/t/data.t 6 3 50.00% 1-3  ../lib/filter/simple/t/filter_only.
it is now  implemented using a windows message loop, and is therefore less prone to random  crashes.
openis a new pragma for setting the default i/o layers for open().
'use lib' now works identically to @inc.
crlf (does crlf  ``\n'' translation as on win32, but available on any  platform).
the thread extension is now not built at all under ithreads ( configure -duseithreads) because it wouldn't work anyway (the thread  extension requires being configured with-duse5005threads).
timing problems the following tests may fail intermittently because of timing problems, for  example if the system is heavily loaded.
the performance has been improved for common scenarios.
all the openbsd specific patches (except for the installation  specific ones) have been merged back to the main distribution.
the regex compiler now maintains a structure that identifies nodes in the compiled bytecode with the corresponding syntactic features of the original regex expression.
may produce buggy code for perl the aix c compiler vac version 5.0.0.0 may produce buggy code, resulting in a few random tests failing when run as part of ``make test'', but when the failing tests are run by hand, they succeed.
this will create in perl/build/directory a tree of symbolic links pointing  to files in /path/to/perl/source.
see the perlunicode manpage, the utf8 manpage, and http://www.unicode.org/unicode/reports/tr16/ for more information.
for most uses, the  frontend filter::simple is to be preferred.
quicksort has a worst case run time that can grow like n**2, so-calledquadratic behaviour, and it can happen on patterns that may well arise in normal use.
but how about  the odd numbers, which all compare equal?
enc2xs is a tool for people adding their own encodings  to the encode module.
stable means that ties are broken to preserve the  original order of appearance in the input array.
(this feature, like other new features that combine unicode and i/o, work only if you are using perlio, but that's the default.)
sortis a new pragma for controlling the behaviour of sort().
there are a few known test failures, see the perluts manpage (readme.uts).
class::struct now assigns the array/hash element if the accessor is  called with an array/hash element as thesole argument.
perlio::via::quotedprint, by elizabeth mattijsen, is an example of a perlio::viaclass: use perlio::via::quotedprint; open($fh,">:via(quotedprint)",$path); this will automatically convert everything output to $fh to quoted-printable.
seethe threads::shared manpage.
in multi-cpu boxes, there are some problems with the i/o buffering: some output may appear twice.
(bsd_glob() does still sort platform natively,  ascii or ebcdic, unless glob_alphasort is specified.)
[561+] the new bignum, bigint, and bigrat pragmas, by tels, implement  transparent bignum support (using the math::bigint, math::bigfloat, and  math::bigrat backends).
socket extension dynamic in vms
perlcc has been rewritten and its user interface (that  is, command line) is much more like that of the unix c compiler, cc.
perl5db.t was also added  to test the changes, and as a placeholder for further tests.
[561] new or changed diagnostics please see the perldiag manpage for more details.
some extensions like mod_perl are known to have issues with `largefiles', a change brought by perl 5.6.0 in which file offsets default to 64 bits wide, where supported.
you will  now need an explicit untie to destroy a self-tied glob.
class::struct can now define the classes in compile time.
use mime::quotedprint; $encoded = encode_qp("\xde\xad\xbe\xef"); $decoded = decode_qp($encoded); print $encoded, "\n";
in future releases of perl, non-perlio aware xs modules may become completely unsupported.
scalar() now forces scalar context even when used in  void context.
if you have used that feature to disallow all but  fully qualified variables,use strict; instead.
seethe perluniintro manpage for introduction and the perlunicode manpage for details.
in particular,caller() now returns a subroutine name of(unknown) for subroutines that  have been removed from the symbol table.
perltootc has been renamed as perltooc (to not to conflict with  perltoot in filesystems restricted to ``8.3'' names).
printf()no longer resets the numeric locale to ``c''.
seethe perlos390 manpage, the perlbs2000 manpage (for posix-bc),  andthe perlvmesa manpage for more information.
perltootc has been renamed as perltooc (to not to conflict with perltoot in filesystems restricted to ``8.3'' names).
(eg by  reading/proc/self/exe on linux, /proc/curproc/file on freebsd) a new variable, ${^taint}, indicates whether taint mode  is enabled.
it also correctly changes directories when chasing symbolic links.
isalnum, isalpha, and isword now match titlecase.
seethe text::balanced manpage.
(pure perl modules should continue to work.)
extract_multiple(), gen_delimited_pat(), and gen_extract_tagged().
the  problem has been corrected.
we suggest upgrading to at least  vac version 5.0.1.0, that has been known to compile perl correctly.
restricted hashes a restricted hash is restricted to a certain set of keys, no keys outside  the set can be added.
guidelines of how to construct minimal perl installations have been  added to install.
you will need a  thread library package installed.
h2phnow supports c trigraphs.
self-ties of arrays and hashes are not supported and fatal errors  will happen even at an attempt to do so.
sometimes this problem may also indicate a partial perl 5.8.0 installation, seemac os x dyld undefined symbols for an example and how to deal with it.
since there are not that many amiga developers  available, we could not get this fixed and tested in time for 5.8.0.
a change to self-tying of globs has caused them to be recursively referenced (see:two-phased garbage collection in the perlobj manpage).
i18n::langtags, by sean burke, has functions for dealing with rfc3066-style language tags.
if configure finds that gcc was built for a different operating  system release than is running, it now gives a clearly visible warning that  there may be trouble ahead.
seethe  threads manpage and the threads::shared manpage, and the perlthrtut manpage.
the byteorder was only sizeof(long) bytes  long (1234 or 4321), but now it is correctlysizeof(iv) bytes long,  (12345678 or 87654321).
written by jarkko hietaniemi .perl58delta - what is new for perl v5.8.0
digest::md5 for calculating md5 digests (checksums) as  defined in rfc 1321, from gisle aas, has been added.
the problem has been corrected.
[561] some ``not a number'' warnings introduced in 5.6.0 eliminated to be more compatible with 5.005.
aix should now work better with gcc, threads, and 64-bitness.
see the perlnetware manpage.
the exec listand system listoperations now produce warnings on tainted data and in some future release they will produce fatal errors.
perl 5.6.0 parsed m/\x{ab}/ incorrectly, leading to spurious  warnings.
in sdbm_file on dosish platforms, some keys went missing because of lack of support for files with ``holes''.
this will be changed in a future release, but we don't know yet what the new semantics will exactly be.
use text::balanced 'extract_delimited'; ($a, $b) =
it also  serves as an example of a loadable perlio layer.
perlio::scalar, by nick ing-simmons, provides the implementation of io to ``in memory'' perl scalars as discussed above.
see the sortpragma for information.
test::more, by michael schwern, is yet another  framework for writing test scripts, more extensive than test::simple.
since any old eight-bit  data is not legal utf-8.
case 1 { print "number 1" } case "a" { print "string a" } case [1..10,42] { print "number in list" } case (@array) { print "number in list" } case /\w+/ { print "pattern" } case qr/\w+/ { print "pattern" } case (%hash) { print "entry in hash" } case (\%hash) { print "entry in hash" } case (\&sub) { print "arg to subroutine" } else { print "previous case not true" } }
concatenation with the .operator or via variable interpolation, eq, substr, reverse, quotemeta, the xoperator, substitution with s///, single-quoted utf-8, should now work.
os/2 now works with usethreads (see install).
previous versions of perl and some readings of some sections of  camel iii implied that the:raw ``discipline'' was the inverse of :crlf.
the obsolete method of making a special (e.g., debugging) flavor of  perl by saying make libperl=libperld.a has been removed.
[561] sort() is also fully reentrant, in the sense that the  sort function can itself call sort().
the warnings are being worked on.
it converts pod data to formatted overstrike text.
removing directories with  'no lib' now works.
[561]solaris 64-bitness using the sun workshop compiler now works.
libnetcfghas been added to configure libnet.
storable was originally created by raphael manfredi, but it is now maintained by abhijit menon-sen. storable has been enhanced to understand the two new hash features, unicode keys and restricted hashes.
see http://www.cpan.org/src/5.0/sperl-2000-08-05/sperl-2000-08-05.txt for more information.
[561] posix::sleep() now returns the number of unslept seconds  (as the posix standard says), as opposed to core::sleep() which returns the  number of slept seconds.
beware: microperl makes many assumptions, some of which may be too bold; the resulting executable may crash or otherwise misbehave in wondrous ways.
test 91 is known to fail on qnx6 (nto), because sprintf '%e',0 incorrectly produces0.000000e+0 instead of 0.000000e+00 .
modulus of unsigned numbers now works (4063328477 % 65535 used to return 27406, instead of 27047).
note that the tr///cu functionality has been removed (but see pack('u0', ...)).
[561] configure no longer includes the dbm libraries (dbm, gdbm, db, ndbm)  when building the perl binary.
clonespecial subroutine had been added.
compiling with gcc still not recommended because buggy code results, even with gcc 2.95.2.unicos fixed various alignment problems that lead into core dumps either during build or later; no longer dies on math errors at runtime; now using full quad integers (64 bits), previously was using only 46 bit integers for speed.
concatenation with the . operator or via variable  interpolation,eq, substr, reverse, quotemeta, the x operator, substitution with s/// , single-quoted utf-8, should now work.
unicode::ucdoffers a querying interface to the unicode character database.
glob()now returns filenames in alphabetical order for(..) perl58delta - what is new for perl v5.8.0 this document describes differences between the 5.6.0 release and the 5.8.0 release.
you can see the correct behaviour by replacing the 1..5 with 1, 2, 3, 4, 5.
this may or may not be a problem with ancient tcp/ip stacks of vms:  we do not know since we weren't able to test perl in such configurations.
note that this means that some scripts that may have relied on earlier  buggy behavior may no longer work correctly.
this did not work reliably in previous  releases.
see the sort pragma for information.
lstat(filehandle)now gives a warning because the operation makes no sense.
(previously perl always preferred floating point numbers in its math.)
the tainting of %env elements via keys or values was previously unimplemented.
the aix dynaloading now uses in aix releases 4.3 and newer the native dlopen interface of aix instead of the old emulated interface.
expr dumps out the value of expr to a depth of at most n levels.
as of november 2001 the only known vulnerable platform is linux, most  likely all linux distributions.
[561] lexicals i: lexicals outside an eval ``'' weren't resolved correctly inside a subroutine definition inside the eval ``'' if they were not already referenced in the top level of the eval``''ed code.
comparing with utf8 data does not magically upgrade non-utf8 data  into utf8.
eastern asian perl users are now welcomed in their own languages: readme.jp (japanese), readme.ko (korean), readme.cn (simplified chinese) and readme.tw (traditional chinese), which are written in normal pod but encoded in euc-jp, euc-kr, euc-cn and big5.
if one attempts the test on a fat install (or build) the following failures are expected: ../ext/
they provide the codes for various  locale standards, such as ``fr'' for france, ``usd'' for us dollar, and ``ja''  for japanese.
because perlio is now the default on most platforms, ``-perlio'' doesn't get appended to the $config{archname} (also known as $^o) anymore.
pod2html now understands pod written using different  line endings (pc-like crlf versus unix-like lf versus macclassic-like cr).
though mostly working, unicode support still has problem spots on ebcdic platforms.
seethe locale::maketext manpage, and the locale::maketext::tpj13  manpage.
clone will be executed once for every package  that has it defined or inherited.
9 3 33.33% 1-2 5  ../lib/math/bigint/t/bare_mbf.t 1627 4 0.25% 8 11 1626-1627  ../lib/math/bigint/t/bigfltpm.t 1629 4 0.25% 10 13 1628- 1629  ../lib/math/bigint/t/sub_mbf.t 1633 4 0.24% 8 11 1632-1633  ../lib/math/bigint/t/with_sub.t 1628 4 0.25% 9 12 1627-1628  ../lib/
the fatal error has been downgraded to an optional warning: possible unintended interpolation of @example in string this warns you that "fred@example.com" is going to turn into fred.com if you don't backslash the @. see http://www.plover.com/~mjd/perl/at-error.html for more details about the history here.
pod::text::overstrike, by joe smith, has been added.
mod_perl 1.26 doesn't build with threaded perl use mod_perl 1.27 or higher.
note that the new semantics doesn't work with the attribute::handlers module (as of version 0.76).
it also has been made more portable.
updated and improved modules and pragmata the following independently supported modules have been updated to  the newest versions from cpan: cgi, cpan, db_file, file::spec, file::temp,  getopt::long, math::bigfloat, math::bigint, the podlators bundle (pod::man,  pod::text), pod::latex
perl 5.8.0 doesn't build in amigaos.
currently onlyprintf() is tested: how to output  various basic data types from xs.
when there is no name conflict, you can omit thein from the block name (e.g. \p{braillepatterns}), but to be  safe, it's probably best to always use thein).
see install for more details.
# in myfilter.pm: use filter::simple sub { while (my ($from, $to) =
perl 5.6.1 still works for amigaos (as does the the 5.7.2 development release).
note that perlcc is still considered very experimental and unsupported.
[561] the behaviour of non-decimal but numeric string constants such as ``0x23'' was platform-dependent: in some platforms that was seen as 35, in some as 0, in some as a floating point number (don't ask).
seethe pod::text::overstrike manpage.
this improvement is only available on vms v6.0 and later.
you should migrate your code to ithreads.
but it is skipped for now because the failure is apple's fault, not perl's (blocked signals are lost).
class::isa, by sean burke, is a module for reporting the search path for a class's isa tree.
the ``plugins'' are named as usual, for  exampleperlio::via::quotedprint.
file::find now chdir()s correctly when chasing symbolic links.
the only exception is that a in prefix is required to signify a unicode block when a block name conflicts with a script name.
so the perlio :rawlayer (or ``discipline'', to use the camel book's older terminology) is now formally defined as being equivalent to binmode(fh)- which is in turn defined as doing whatever is necessary to pass each byte as-is without any translation.
(nice for pre-5.8.0 backward compatibility).
package mypack; use attribute::handlers; sub wolf :attr(scalar) { print  "howl!\n" } # later, in some package using or inheriting from mypack... my mypack $fluffy : wolf; # the attribute handler wolf will be called both variables and routines can have attribute handlers.
seethe attributes manpage for additional details.
alternatively, you may want to use gnu make.
changed internals perlio is now the default.
check your shared library path, and any shared perl libraries in those directories.
the latter is an article about software localization, originally published in the perl journal #13, and republished here with kind permission.
after  configure has finished, you can just say make all test and perl will be built and tested, all in perl/build/directory.
seethe perlio::via manpage and the perlio::via::quotedprint manpage.
seethe list::util manpage.
in particular, however, this allows variable attributes to be useful for tie interfaces, which was a deficiency of earlier releases.
# msgsnd failed ../ext/io/lib/io/t/io_poll............failed tests 3-4 ../ext/ipc/sysv/ipcsysv...............failed tests 2, 5-6 ../ext/ipc/sysv/t/msg.................failed tests 2, 4-6 ../ext/
note that the 5.005 threads are unsupported and deprecated: if you  have code written for the old threads you should migrate it to the new ithreads  model.
posix-style signals are now emulated much better on vms versions prior to  7.0.
in future releases this may become a fatal error.
a failure (think chdir(some_function())can lead into unintended chdir()to the home directory, therefore this behaviour is deprecated.
do followed by a bareword now ensures that this  bareword isn't a keyword (to avoid a bug wheredo q(foo.pl) tried  to call a subroutine calledq).
t/op/stat............................failed at test 29 lib/file/find/t/find.................failed at test 1 lib/file/find/t/taint................failed at test 1 lib/h2xs.............................failed at test 15 lib/pod/t/eol........................failed at test 1 lib/test/harness/t/strap-analyze.....failed at test 8 lib/test/harness/t/test-harness......failed at test 23 lib/test/simple/t/exit...............failed at test 1 the above failures are known as of 5.8.0 with native builds with long filenames, but there are a few more if running under dosemu because of limitations (and maybe bugs) of dosemu: t/comp/cpp...........................
changes that were integrated into the 5.6.1 release are marked [561] .
cert and various vendors and distributors have  been alerted about the vulnerability.
chomp()and chop()are now overridable.
[561] less stack reserved per thread so that more threads can run concurrently.
see the perldebguts manpage for more complete information.
you can regard this as totally trivial, or somewhat  profound.
ieee-format floating point default on openvms alpha perl now uses ieee format (t_float) as the default internal floating point  format on openvms alpha, potentially breaking binary compatibility with  external libraries or existing data.
the tainting behaviour of sprintf() has been  rationalized.
seethe perlio::via manpage and the perlio::via::quotedprint  manpage.
unadorned dump() will now give a warning suggesting to  use explicit core::dump() if that's what really is meant.
printf()and sprintf()now support parameter reordering using the %\d+\$and *\d+\$syntaxes.
filter::simple, by damian conway, is an easy-to-use frontend to filter::util::call.
the problem was caused by perl trying to report a suspected security exploit attempt using an external program, /bin/mail.
a new command-line option, -t is available.
seethe time::hires manpage .
with the quicksort algorithm used to implement perl 5.6 and earlier, the order of ties is left up to the sort.
turning off ``clrfness'' is no longer enough to make a  stream truly binary.
perl_get_sv you may get errors like 'undefined symbol ``perl_get_sv''' or ``can't  resolve symbol 'perl_get_sv''', or the symbol may be ``perl_sv_2pv''.
installation (or build) on ntfs works fine.
seethe math::bigrat manpage.
io::socket::inet now supports a value of zero for localport (usually meaning that the operating system will make one up.)
this is a known bug in the glibc 2.2.5 with long long integers.
the character tables have been updated to unicode 3.2.0.
the vars pragma now supports declaring fully qualified variables.
this is not selected by default, however, you must  specify -dusedl in the arguments of configure.
(it is in fact a full implementation of sed in perl: you can use the sed functionality by using the psedutility.)
using sortin scalar context now issues an optional warning.
db_file now supports newer berkeley db versions, among other improvements.
this seems to be a compiler  error since if compiled with gcc no core dump ensues, and no failures have been  seen on the said test on any other platform.
the perlio::scalar and perlio::via (capitalised) were renamed as perlio::scalar and perlio::via (all lowercase) just before 5.8.0.
one reason of this unfinishedness is its (currently) inherent  unportability: since both package names and subroutine names may need to be  mapped to file and directory names, the unicode capability of the filesystem  becomes important-- and there unfortunately aren't portable answers.
9 3 33.33% 1-2 5 ../lib/math/bigint/t/bare_mbf.t 1627 4 0.25% 8 11 1626-1627 ../lib/math/bigint/t/bigfltpm.t 1629 4 0.25% 10 13 1628- 1629 ..
however, if you just want to sort the even digits ahead of the odd ones, then what will sort { ($a % 2)  ($b % 2) } @digits; yield?
no module; does not produce an error even if module  does not have anunimport() method.
[561] multi-line matches like "a\nxb\n" =~ /(?!\a)x/m were flawed.
freebsd built with ithreads coredumps reading large directories this is a known bug in freebsd 4.5's readdir_r(), it has been fixed in  freebsd 4.6 (seethe perlfreebsd manpage (readme.freebsd)).
unshift()should now be noticeably faster.
because of the large number of tests, running the regression suite will take considerably longer time than it used to: expect the suite to take up to 4-5 times longer to run than in perl 5.6.
a new variable, ${^taint}, indicates whether taint mode is enabled.
c'' will tell you the vac version.
unicode::collate, by sadahiro tomoyuki, implements the uca (unicode collation algorithm) for sorting unicode strings.
handlers can be specific to type (scalar, array, hash, or code), or specific to the exact compilation phase (begin, check, init, or end).
tru64 (aka digital unix,
there may also be information at http://www.perl.com/ , the perl home page.
[561] io::pipe io::poll net::ping io::file::new_tmpfile() is no longer limited to 32767 invocations  per-process.
the exact numbers depend on the platform and perl configuration used.
in particular binmode(fh)- and hence :raw- will now turn off both crlf and utf-8 translation and remove other layers (e.g. :encoding()) which would modify byte stream.
the  behavior in earlier versions of perl 5 was that arrays would interpolate into  strings if the array had been mentioned before the string was compiled, and  otherwise perl would raise a fatal compile-time error.
class::struct now assigns the array/hash element if the accessor is called with an array/hash element as thesole argument.
there is no need to \-escape any \w character.