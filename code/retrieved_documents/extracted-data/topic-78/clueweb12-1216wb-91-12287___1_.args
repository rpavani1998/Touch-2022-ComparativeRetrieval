merge sort is good for data that's too big to have in memory at once, because its pattern of storage access is very regular.it also uses even fewer comparisons than heapsort, and is especially suited for data stored as linked lists.like heapsort it can sort "in place" by moving data in an array.different methods work better in different applications.<= 2 n log n. note that this is worse than either merge sort or heap sort, and requires random number generator to avoid being really bad.to start with, we can set up a binary tree of the right size and shape, and put the objects into the tree in any old order.heapsort uses close to the right number of comparisons but needs to move data around quite a bit.it's probably good when memory is tight, and you are sorting many small items that come stored in an array.it can be done in a way that uses very little extra memory.to make the whole thing a heap, we merely have to percolate that value down to a lower level in the tree.