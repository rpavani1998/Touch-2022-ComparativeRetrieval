the only even digit, 4, will come first.
djgpp failures t/op/stat............................failed at test 29 lib/file/find/t/find.................failed at test 1 lib/file/find/t/taint................failed at test 1 lib/h2xs.............................failed at test 15 lib/pod/t/eol........................failed at test 1 lib/test/harness/t/strap-analyze.....failed at test 8 lib/test/harness/t/test-harness......failed at test 23 lib/test/simple/t/exit...............failed at test 1
· "eval "v200"" now works.
this may cause new warn- ings when modules are being installed.
stratus vos is now supported using perl’s native build method (con- figure).
this shouldn’t be too difficult for module authors, however: perlio has been designed as a drop-in replacement (at the source code level) for the stdio interface.
you will need a thread library package  installed.
for the full list of the avail- able apis see  perlapi.
[561] · extutils::makemaker now uses $env{lib} to search for libraries.
eventually, the problem gets whittled down to one that fits in the cache, from which point it benefits from the increased memory speed.
· io::socket::inet failed to open the specified port if the service name was not known.
(the case-insensitivity used to confuse the perl build process.)
new documentation · perl56delta details the changes between the 5.005 release and  the 5.6.0 release.
new or improved platforms for the list of platforms known to support perl, see "supported plat- forms" in perlport.
the only exception is that a "in" pre- fix is required to signify a unicode block when a block name conflicts with a script name.
# this used to print, but not now.
this file is supposed to be used by hints file writers for architecture-wide changes (as opposed to config.over which is for site-wide changes).
according to perl- bench, this change has not affected the overall speed of perl.
the identifier "bad" is undefined.
· several debugger fixes: exit code now reflects the  script exit code, condition "0" now treated correctly, the  "d" command now checks line number, $.
· "next", by damian conway, is a pseudo-class for method redispatch.
·time::local::timelocal() does not handle fractional seconds any- more.
the changes file for exhaustive details on what changed.
in future releases of perl the forms will become  fatal errors so consider starting laundering now.
tie/file/t/31_autodefer.t 255 65280 65 32 49.23% 34-65 ../lib/autouse.t
[561] · a socket handle  leak inaccept() has been fixed.
· chdir("") and chdir(undef) now give a deprecation warning because they cause a possible unintentional chdir to the home directory.
what this means is that in list context the  func- tions will return only three values, not four.
it does not taint the result of floating point formats anymore, making the behaviour consistent with that of string interpolation.
·  "use warnings qw(fatal all)" did not work as intended.
alpha systems with old gccs fail several tests if you see op/pack, op/pat, op/regexp, or ext/storable tests failing in a linux/alpha or *bsd/alpha, it’s probably time to upgrade your gcc.
it can be used to prepend site-specific directories to perl’s default  search path (@inc); see install for information. ·
[561]  · "our" variables of the same name declared in two sibling  blocks resulted in bogus warnings about "redeclaration" of the  variables.
in versions 5.000 through 5.003, the error was literal @example now requires backslash in versions 5.004_01 through 5.6.0, the error was in string, @example now must be written as \@example the idea here was to get people into the habit of writing "fred\@exam- ple.com" when they wanted a literal "@" sign, just as they have always written "give me back my \$5" when they wanted a literal "$" sign.
(for space considerations, the largest chinese encodings  have been separated into their own cpan module, encode::hanextra, which encode  will use if available).
there is a make target  "test.deparse" for trying this out.
( 3,1,4,1,5,9 ); a numerical sort of the digits will yield  (1,1,3,4,5,9), as expected.
as a stop-gap  measure to avoid people from getting frus- trated at the mysterious results  (core dumps, most often), it is for- bidden for now (you will get a fatal error  even from an attempt).
· "b::concise", by stephen mccamant, is a new compiler backend for walking the perl syntax tree, printing concise info about ops.
· "xsubpp" now understands pod documentation embedded in the *.xs files.
[561] · "file::spec->tmpdir()" now prefers c:/temp over /tmp (works better when perl is running as service).
now has a split personality: if possible, an xs extension is used, (this will hopefully be faster, more secure, and more robust) but if not possible, the familiar perl implementation is used.
in  "clone" you can do whatever you need to do, like for example handle  the cloning of non-perl data, if necessary.
also, introduced @last_match_start and @last_match_end english aliases for "@-" and "@+".
· the c code has been made much more "gcc -wall" clean.
comparing with utf8 data  does not magically upgrade non-utf8 data into utf8.
the main rationale was to have all core perlio layers to have all  low- ercase names.
(they produce something other than "1" and "-1" when formatting 0.6 and -0.6 using the printf format "%.0f"; most often, they produce "0" and "-0".)
[561] ·win32::getcwd() correctly returns c:\ instead of c: when at the drive root.
see test::more. · "test::simple", by michael schwern, has basic utilities for writing tests.
[561] · the regular expression captured submatches ($1, $2, ...) are now more consistently unset if the match fails, instead of leaving false data lying around in them.
[561+] · perlebcdic contains considerations for running perl on ebcdic plat- forms.
· ambiguous range in the  transliteration operator (like a-z-9) now gives a warning.
since perlio is a drop-in replacement for stdio at the source code level, this shouldn’t be that drastic a change.
in any case, the change will break existing code that relies on the current (ill-defined) semantics, so just avoid doing this in general.
also, introduced @last_match_start and @last_match_end english  aliases for "@-" and "@+".
the  order of destroys has been made more predictable.
see net::ftp, net::nntp, net::ping (not part of libnet, but related), net::pop3, net::smtp, and net::time.
· in afs installations, one can configure the root of the afs to be somewhere else than the default/afs by using the configure parame- ter "-dafsroot=/some/where/else".
modules may fail to  compile at all, or they may compile and work incorrectly.
[561] · printing quads (64-bit integers) with printf/sprintf now works without the q l ll prefixes (assuming you are on a quad-capable platform).
in future releases of perl,  non-perlio aware xs modules may become com- pletely unsupported.
· windows · signal handling now  works better than it used to.
use -ddebugging  instead.
one potential  failure is whether one can (or, if one can, whether it’s a good idea to)  link together at all binaries with differ- ent ideas about file offsets; all  this is platform-dependent.
· the unicode character database coming with perl has been upgraded to unicode 3.2.0.
luckily, these days  the need for h2ph is rare.
support for  unicode, iso-8859-1, and ascii are com- piled in to the module.
an optional warning is generated ("illegal charac- ter in prototype...")
local($tied_hash{foo})
there is no need to \-escape any "\w"  character.
tained by arthur bergman, allows a class to define attribute han- dlers.
call- backs  (naughtily) exiting with "next;" instead of "return;" now  work.
the new interpreter threads ("ithreads" for short) implementation of multithreading, by arthur bergman, replaces the old "5.005 threads" implementation.
(basically,  ’cc’ doesn’t do ansi c).
[561] ·  the autouse pragma didn’t work for multi::part::function::names. · caller() could cause core dumps in certain situations.
· the perl5opt environment  variable (for passing command line argu- ments to perl) didn’t work for  more than a single group of options.
the identifier  "bad" is undefined.
· perlnewmod tells about writing and submitting a new module.
its semantics were never that clear and its  implementation even less so.
the older name is still available for compatibility, but is deprecated.
if perl is configured with -duse64bitall, the successful  result of the subtest 10 of lib/posix may arrive before the successful result  of the subtest 9, which confuses the test harness so much that it thinks the  subtest 9 failed.
splice method was broken.
each unquoted argument will be automatically quoted to protect whitespace, and any existing whitespace in the arguments will be preserved.
[561] · perltodo  has been updated.
· the unicode character database coming  with perl has been upgraded to unicode 3.2.0.
while some limited functionality towards this does exist as of perl 5.8.0, that is more accidental than designed; use of unicode for the said purposes is unsupported.
· "digest::md5" for  calculating md5 digests (checksums) as defined in rfc 1321, from gisle aas, has  been added.
[561] · the following  modules now work on windows: extutils::embed [561] io::pipe io::poll net::ping  ·io::file::new_tmpfile() is no longer limited to  32767 invo- cations per-process.
"our" can now  have an experimental optional attribute "unique" that affects how  global variables are shared among multiple interpreters, see "our" in  perlfunc.
in search::dict one can now have a pre-processing hook for the lines  being searched.
failed test stat wstat  total fail failed list of failed  ---------------------------------------------------------------------------  ../ext/data/dumper/t/dumper.t 357 8 2.24% 311 314 325 327 331 333 337 339  ../ext/io/lib/io/t/io_unix.t 5 4 80.00% 2-5 ../ext/storable/t/downgrade.t 12  3072 169 12 7.10% 14-15 46-47 78-79 110-111 150 161  ../lib/extutils/t/constant.t 121 30976 48 48 100.00% 1-48  ../lib/extutils/t/embed.t 9 9 100.00% 1-9 op/pat.t 922 7 0.76% 665 776 785 832-  834 845 op/sprintf.t 224 3 1.34% 98 100 136 op/tr.t 97 5 5.15% 63 71-74  uni/fold.t 780 6 0.77% 61 169 196 661 710-711 the failures in dumper.t and  downgrade.t are problems in the tests, those in io_unix and sprintf are  problems in the uss (udp sockets and printf formats).
iterative logical name translations are now limited to 10 itera- tions in imitation of show logical and other openvms facilities.
· using the /g modifier insplit() is meaningless and will cause a warning.
[561] · changed the posix character class  "[[:space:]]" to include the (very rarely used) vertical tab  character.
also the ext/posix/t/posix.t subtest #10 fails but  it is skipped for now because the failure is apple’s fault, not  perl’s (blocked signals are lost).
[561+] · perlintro is a gentle introduction to perl.
[561] · autovivification of symbolic references of special variables described in perlvar (as in "${$num}") was accidentally disabled.
one reason of this unfinishedness  is its (currently) inherent unporta- bility: since both package names and  subroutine names may need to be mapped to file and directory names, the unicode  capability of the filesystem becomes important-- and there unfortunately  aren’t portable answers.
safe signals perl used to be fragile in that signals arriving at inopportune moments could corrupt perl’s internal state.
this  will create in perl/build/directory a tree of symbolic links pointing to files  in /path/to/perl/source.
scripts are similar to (and superior  to) unicodeblocks.
· "sort" is a new pragma for controlling the behaviour ofsort().
[561] · the autouse pragma didn’t work for multi::part::function::names.
modulus of unsigned  numbers now works (4063328477 % 65535 used to return 27406, instead of 27047).
each unquoted argument will be  automatically quoted to protect whitespace, and any existing whitespace in the  arguments will be preserved.
· large unsigned  numbers (those above 2**31) could sometimes lose their unsignedness, causing  bogus results in arithmetic operations.
because of the above  error, parts of the converted headers will be invisible.
uts there are a few  known test failures, see perluts (readme.uts).vos (stratus) when  perl is built using the native build process on vos release 14.5.0 and gnu  c++/gnu tools 2.0.1, all attempted tests either pass or result in todo  (ignored) failures.
"test::more", by michael schwern, is yet another  framework for writing test scripts, more extensive than test::simple.
vms there should be no reported test failures with a  default configuration, though there are a number of tests marked todo that  point to areas needing further debugging and/or porting work.
[561] ·  line renumbering with eval and "#line" now works.
[561] · autovivification of symbolic  references of special variables described in perlvar (as in  "${$num}") was accidentally disabled.
s/$from/$to/g; } }; 1; # in user’s code: use  myfilter qr/red/ => ’green’; print "red\n"; # this  code is filtered, will print "green\n" print "bored\n"; #  this code is filtered, will print "bogreen\n" no myfilter; print  "red\n"; # this code is not filtered, will print "red\n"  · "file::temp", by tim jenness, allows one to create temporary  files and directories in an easy, portable, and secure way.
finally, other applications than perl (such as mod_perl) tend to prefer the  sys- tem malloc.
the "system" function and backticks operator have improved  func- tionality and better error handling.
installation and configuration improvements generic improvements · install now explains how you  can configure perl to use 64-bit inte- gers even on non-64-bit platforms.
the pat, tr, and fold  failures are genuine perl prob- lems caused by ebcdic (and in the pat and fold  cases, combining that with unicode).
(this feature, like other new features that combine unicode and i/o, work only if you are using perlio, but that’s the default.)
· "no module;" does not produce an error even if module does not have anunimport() method.
building extensions can fail because of largefiles some extensions like mod_perl are known to have issues with âlarge- files’, a change brought by perl 5.6.0 in which file offsets default to 64 bits wide, where supported.
the story in more detail: suppose you want to serve yourself a lit- tle slice  of pi.
hash elements do not autovivify for normal arrays "$foo =
these are not new failures--perl 5.005_0x has the  same bugs, but didn’t have these tests.
in any case, suidperl should only be used by security experts who know exactly what they are doing and why they are using suidperl instead of some other solution such as sudo ( see http://www.courtesan.com/sudo/ ).
layers to be applied by default may be specified via the  ’open’ pragma.
for example, if you really donâ€™t care about the order of even and odd digits,  quicksort will run in o(n) time; it’s very good at sorting many  repetitions of a small number of distinct elements.
infinity is now recognised as a  num- ber.
· the lexical warnings category "deprecated" is no longer a sub-cate- gory of the "syntax" category.
[561] · use of $& could trigger  a core dump under some situations.
(multipur- pose internet mail extensions).
this has been reversed to be in the right order.
this is the recommended method to build perl on vos.
· for developers interested in enhancing perl’s unicode capabilities: almost all the ucd files are included with the perl distribution in thelib/unicore subdirectory.
the perl header files no longer suppress common warnings  from the microsoft visual c++ compiler.
a number of other properties are now supported, including  "\p{l&}", "\p{any}" "\p{assigned}",  "\p{unassigned}", "\p{blank}"
see perlos390, perlbs2000 (for  posix-bc), and perlvmesa for more information.
but quicksort was rescued at the last moment because it is faster than mergesort on certain inputs and platforms.
(for space considerations, the largest chinese encodings have been separated into their own cpan module, encode::hanextra, which encode will use if available).
· "encode", originally by nick ing-simmons and now maintained by dan kogai, provides a mechanism to translate between different charac- ter encodings.
[561] · numeric conversions did not recognize changes in the  string value properly in certain circumstances.
new unicode semantics (no more "use utf8", almost) previously in perl 5.6 to use unicode one would say "use utf8" and then the operations (like string concatenation) were unicode-aware in that lexical scope.
building microperl does not require  even running configure; "make -f make- file.micro" should be enough.
· the very dusty examples in the eg/ directory have been removed.
this is admittedly not a  clean solution, and the solution may not even work at all.
(utf-8 has not  been made the default since there are many perl scripts out there that are  using various national eight-bit character sets, which would be illegal in  utf-8.)
[561] · for perl developers,  several new make targets for profiling and debugging have been added; see  perlhack.
· class::struct now assigns the array/hash element if the accessor is called with an array/hash element as thesole argument.
this was found to be an inconvenient interface, and in perl 5.8 the unicode model has completely changed: now the "unicodeness" is bound to the data itself, and for most of the time "use utf8" is not needed at all.
installation and configuration improvements generic improvements · install now explains how you can configure perl to use 64-bit inte- gers even on non-64-bit platforms.
· building perl with -duseithreads or -duse5005threads now works under hp-ux 10.20 (previously it only worked under 10.30 or later).
the operating system version letter now recorded in $con- fig{osvers}.
this improve- ment is only available on vms v6.0 and later.
you won’t notice this for small arrays, but youwill notice it with larger arrays, and you may not live long enough for the sort to  complete on arrays of a million elements.
the "waitpid" emulation has been improved.
splice  method was broken.
which 1 comes first is hard to know, since one 1 looks pretty much like any other.
however, the generated binaries  continue to be incompatible with those generated by the other supported  compilers (gcc and visual c++).
/anydbm_file.t 2 512 12 2  16.67% 1 4 ../lib/
a change to self-tying of globs has caused them to be recursively ref- erenced (see: "two-phased garbage collection" in perlobj).
· formats  now support zero-padded decimal fields.
see perlunicode,  utf8, and http://www.uni- code.org/unicode/reports/tr16/ for more information.
[561] · the following modules now work on windows: extutils::embed [561] io::pipe io::poll net::ping ·io::file::new_tmpfile() is no longer limited to 32767 invo- cations per-process.
· unicos fixed various alignment problems that lead into core dumps  either during build or later; no longer dies on math errors at runtime; now  using full quad integers (64 bits), previously was using only 46 bit integers  for speed.
· "h2xs" now  uses "devel::ppport" for better portability between dif- ferent  versions of perl. ·
· the current  user-visible implementation of pseudo-hashes (the weird use of the first array  element) is deprecated starting from perl 5.8.0 and will be removed in perl  5.10.0, and the feature will be implemented differently.
these documents usually detail one or more of the following subjects:  configuring, building, testing, installing, and sometimes also using perl on  the said platform.
· perlapi.pod (a companion to  perlguts) now attempts to document the internal api.
unicos/mk · during configure, the test guessing which  symbols your c compiler and preprocessor define... will probably fail with  error messages like cc-20 cc: error file =
· end blocks are now run even if you exit/die in a begin block.
[561] · the behaviour of non-decimal but numeric string constants such as "0x23" was platform-dependent: in some platforms that was seen as 35, in some as 0, in some as a floating point number (don’t ask).
perlio allows "layers" to be "pushed" onto a file handle to alter the handle’s behaviour.
· ambiguous range in the transliteration operator (like a-z-9) now gives a warning.
· vac 5.0.0.0  may produce buggy code for perl
beware: microperl makes many assump- tions, some of which may be too bold; the  resulting executable may crash or otherwise misbehave in wondrous ways.
(this was a problem for  example if you were mixing data from i/o and unicode data: your output might  have got magically encoded as utf-8.)
perl (the undefined symbols used to  exist in pre-5.8.0 perls).
in case of failure please try running them manually, for example ./perl
socket/socketpair..............failed tests 12  ../lib/ipc/sysv.......................failed tests 2, 5-6  ../lib/warnings.......................failed tests 115-116, 118-119
the older methods, which build  miniperl, are still available.
· perl_object has been completely removed.
for simi- lar functionality, see pack(’u0’, ...)
now you will get an  optional warning.
· libnet, by graham barr, is a collection of perl5 modules related to network programming.
see extutils::makemaker for more details.
infinity is now recognised as a num- ber.
benchmark.t lib/memoize/t/expmod_t.t lib/memoize/t/speed.t
the justification for this rests with quicksort’s worst case behavior.
· "pod2html" now produces xhtml  1.0.
if this seems to be the case and ’cc’ does not seem to be the gnu c compiler ’gcc’, an automatic attempt is made to find and use ’gcc’ instead.
[561+] the following platform-specific documents are available before the installation as readme.platform, and after the installation as perlplatform: perlaix perlamiga perlapollo perlbeos perlbs2000 perlce perlcygwin perldgux perldos perlepoc perlfreebsd
"pod2html" now produces xhtml 1.0. · "pod2html" now understands pod written using different line endings (pc-like crlf versus unix-like lf versus macclassic-like cr).
· in future releases, non-perlio aware  xs modules may become com- pletely unsupported.
use  mime::quotedprint; $encoded = encode_qp("\xde\xad\xbe\xef"); $decoded  = decode_qp($encoded); print $encoded, "\n"; #  "=de=ad=be=ef\n" print $decoded, "\n"; #  "\xde\xad\xbe\xef\n" see also perlio::via::quotedprint.
so sort  { ($a % 2)  ($b % 2) } (3,1,4,1,5,9); will yield (4,3,1,1,5,9),  guaranteed.
you can now install coderef handlers, ’default’, and ’ignore’ handlers, installing new handlers was not atomic.
any encoding supported by encode module is  also available to the ":encoding()" layer if perlio is used.
perl now tries internally to use integer values in numeric conversions and basic arithmetics (+ - * /) if the arguments are integers, and tries also to keep the results stored internally as integers.
there is a make target "test.deparse" for trying this out.
·mkdir() now ignores trailing slashes in the directory name, as man- dated by posix.
the "x" command  has been extended so that "x n expr" dumps out the value ofexpr to a depth of at mostn levels.
· although "you shouldn’t do that", it was possible to write code that depends on perl’s hashed key order (data::dumper does this).
· use of v-strings in use/require causes a (backward) portability warning.
[561] · linux previously had  problems related to sockaddrlen when usingaccept(), recvfrom() (in perl:recv()), getpeer- name(), and getsockname() .
since  the new code is more correct (if you have two constants where the first one is  a prefix of the second one, the first constantnever got defined), less  lossy (it uses integers for integer constant, as opposed to the old code that  used floating point numbers even for integer con- stants), and slightly faster,  you might want to consider regenerat- ing your extension code (the new scheme  makes regenerating easy).
since in many systems the standard number parsing functions like "strtoul()" and "atof()" seem to have bugs, perl tries to work around their deficien- cies.
it now works as documented.
if you configure with ithreads,  ext/threads/t/libc.t will fail.
if you are building on a ufs partition, you will also probably  see t/op/stat.t subtest #9 fail.
for  example printf "%2\$s %1\$s\n", "foo", "bar";  will print "bar foo\n".
but the signal may take more time to get heard.
perlio is the default configuration because without it many new features of perl 5.8 cannot be used.
· math::complex handles inf, nan etc., better.
for example: open kid_ps,  "-â”‚", "ps", "aux" or die $!;  forks theps(1) command (without spawning a shell, as there are more than  three arguments toopen()), and reads its standard output via the  "kid_ps" filehandle.
· *foo{format} now works.
also, $config{byteorder} is now computed  dynamically--this is more robust with "fat binaries" where an  executable image contains bina- ries for more than one binary platform, and  when cross-compiling.
the readme file for general stuff.
# in myfilter.pm: package myfilter; use filter::simple sub { while (my ($from, $to)
· using chdir("") or chdir(undef) instead of explicitchdir() is doubtful.
not only is the  current interface rather ugly, but the current implementation slows down normal  array and hash use quite noticeably.
note that this means that some scripts that may have relied on  earlier buggy behavior may no longer work correctly.
·emacs/e2ctags.pl is now much faster.
· perltootc has been renamed as perltooc (to not to  conflict with perltoot in filesystems restricted to "8.3" names).
· a new  command-line option, "-t" is available.
in other taint news, the "exec list" and "system  list" have now been considered too risky (think "exec @argv": it  can start any program with any arguments), and now the said forms cause a  warning under lexical warnings.
· the "tr///" operator now works.
(redhat linux/alpha with gcc 3.1 reported no problems, as did linux 2.4.18 with gcc 2.95.4.)
this  shouldn’t be too difficult for module authors, however: perlio has been  designed as a drop-in replacement (at the source code level) for the stdio  interface.
so the 5.8 quicksort scrambles large arrays before sorting them, as a statistical defence against quadratic behaviour.
mac os x please remember to set your environment variable lc_all to "c" (setenv lc_all c) before running "make test" to avoid a lot of warnings about the broken locales of mac os x.
[561+] · a lost warning "can’t  declare ... dereference in my" has been restored (perl had it earlier but  it became lost in later releases.)
eight- bit i/o streams (such as images or  zip files), you need to explic- itlyopen() or binmode() with  ":bytes" (see "open" in perlfunc and "binmode" in  perlfunc), or you can just use "binmode(fh)" (nice for pre-5.8.0  backward compatibility).
constructs for code points less than 256: the "pp" are testing for  unicode code points, not knowing about ebcdic.seen in perl 5.7 but gone now "time::piece"  (previously known as "time::object") was removed because it was felt  that it didn’t have enough value in it to be a core module.
· perliol documents the internals of perlio with layers.
the output is highly customisable.
(this feature, like other new features  that combine unicode and i/o, work only if you are using perlio, but  that’s the default.)
· "qw(a\\b)" now parses correctly as ’a\\b’: that is, as three char- acters, not four.
the regex  compiler now maintains a structure that identifies nodes in the compiled  bytecode with the corresponding syntactic features of the original regex  expression.
· "i18n::langtags", by sean burke, has functions for dealing with rfc3066-style language tags.
after configure has finished, you can just say make all test and perl will be built and tested, all in perl/build/directory.
[561] · some cases of inconsistent taint propagation (such as within hash values) have been fixed.
"blank" is like cisblank(), that is, it contains only  "horizontal whites- pace" (the space character is, the newline  isn’t), and the "spaceperl" is the unicode equivalent of  "\s" (\p{space} isn’t, since that includes the vertical  tabulator character, whereas "\s" doesn’t.)
the "in" or "is" prefix to names used with the "\p{...}" and "\p{...}" are now almost always optional.
because of the unpredictability of tie-breaking  order, and the quadratic worst-case behaviour, quicksort wasalmost replaced com- pletely with a stable mergesort.
· unadorned dump() will now give a warning suggesting to use explicit core::dump() if that’s what really is meant. ·
currently, there is  no good solution for the problem, but configure now provides appropriate non-  largefile ccflags, ldflags, libswanted, and libs in the %config hash (e.g.,  $config{ccflags_nolargefiles}) so the extensions that are having problems can  try configuring themselves without the largefileness.
this enables the new behaviour for  perl embedders.
because in effect storable does serial- isation of perl data structures, with it you can also clone deep, hierarchical datastructures.
· the *glob{filehandle} is deprecated, use *glob{io} instead.
· "xsubpp" now  understands pod documentation embedded in the *.xs files.
(interesting only for extension writers and perl  core hackers.)
this is known problem with cygwin,  and a workaround is detailed in here: http://sources.red-  hat.com/ml/cygwin/2001-12/msg00894.htmlcygwin ndbm tests fail on fat one can build but not install (or test the  build of) the ndbm_file on fat filesystems.
stratus  vos is now supported using perl’s native build method (con- figure).
if building perl with interpreter threads  (ithreads), theget- grent(), getgrnam(), and getgrgid() functions cannot return the list of the group members due to a bug in the  multithreaded support of unicos/mk.
depending on your platform, there are also other reasons why we decided to break binary compatibility, please read on.64-bit platforms and malloc if your pointers are 64 bits wide, the perl malloc is no longer being used because it does not work well with 8-byte pointers.
use tie::hash; tie my %tied_hash => ’tie::stdhash’; ...
· all the openbsd specific patches (except for the installation spe- cific ones) have been merged back to the main distribution.
theartistic and copying files for copyright information.
·fork() emulation is now more robust, but still continues to have a few esoteric bugs and caveats.
in future releases this  may become a fatal error.
however, the generated binaries continue to be incompatible with those generated by the other supported compilers (gcc and visual c++).
the compiler suite is slowly getting better but it  continues to be highly experimental.
an optional warning is  generated ("illegal charac- ter in prototype...")
[561] · configure.gnu now  works with options with whitespace in them. ·
· spurious syntax errors generated in certain  situations, whenglob() caused file::glob to be loaded for the first  time, have been fixed.
· hashes now use bob jenkins  "one-at-a-time" hashing key algorithm (  http://burtleburtle.net/bob/hash/doobs.html ).
you can set  the environment variable perl_test_net_ping to "1" (one) before  running the perl test suite to enable all the net::ping tests.
· "list::util", by graham barr, is a selection  of general-utility list subroutines, such assum(), min(), first(), and shuffle().
[561+] · perlrequick is a regular expressions quick-start guide.
one can have unicode in identifier names, but not in package/class or subroutine names.
[561] · file::find now has pre- and post-processing callbacks.
· the thread extension is now not built at all under ithreads ("con- figure -duseithreads") because it wouldn’t work anyway (the thread extension requires being configured with "-duse5005threads").note that the 5.005 threads are unsupported and deprecated: if you have code written for the old threads you should migrate it to the new ithreads model.
the only exception to this is  sunos 4.x, which needs them.
[561] · file::glob now supports "glob_limit" constant to limit the size of the returned list of filenames.
interpreter threads  (ithreads) is the new thread model introduced in perl 5.6 but only available as  an internal interface for extension writers (and for win32 perl for  "fork()" emulation).
· "storable" gives persistence to perl data structures by allowing the storage and retrieval of perl data to and from files in a fast and compact binary format.
· fcntl, socket, and sys::syslog have been rewritten by nicholas clark to use the new-style constant dispatch section (see extu- tils::constant).
to call the  latter, qualify the call as "&dump(...)".
so, as you add more and more digits of pi, the order in which the sorted even and odd digits appear will change.
one such known spot are the "\p{}" and "\p{}" regu- lar expression constructs for code points less than 256: the "pp" are testing for unicode code points, not knowing about ebcdic.seen in perl 5.7 but gone now "time::piece" (previously known as "time::object") was removed because it was felt that it didn’t have enough value in it to be a core module.
ndbm_file/ndbm.t 13 3328 71 59 83.10% 1-2 4 16-71  ../ext/
saychdir() if you really mean that.
· math::complex  handles inf, nan etc., better.
if you configure with ithreads, ext/threads/t/libc.t will fail.
demonstrating the new encode module. · "pod2html" now allows  specifying a cache directory.
the above failures are known as of 5.8.0 with native builds with long filenames, but there are a few more if running under dosemu because of limitations (and maybe bugs) of dosemu: t/comp/cpp...........................failed at test 3 t/op/inccode.........................(crash) and a few lib/extutils tests, and several hundred encode/t/aliases.t failures that work fine with long filenames.
use of  "/g" with "split" elicits "use of /g modifier is  meaningless in split".
[561] ·  "file::spec->tmpdir()" now prefers c:/temp over /tmp (works better  when perl is running as service).
in some setups the former has  been known to spuriously also try to run "make install".
this will be changed in a future release, but we don’t know yet what the new semantics will exactly be.
· db_file now supports newer berkeley  db versions, among other improvements.
see perluniintro for introduction and perlunicode for details.
* perl now works on post-4.0 bsd/oses.
· all regular expression compilation error  messages are now hopefully easier to understand both because the error message  now comes before the failed regex and because the point of failure is now  clearly marked by a "{bar}" has been deprecated for a while.
there is no need to escape any of the  "\w" characters.
therestricted hashes interface is expected  to be the replacement interface (see hash::util).
·  "storable" gives persistence to perl data structures by allowing the  storage and retrieval of perl data to and from files in a fast and compact  binary format.
(this problem didn’t  affect windows plat- forms.)
[561] · duping socket handles with  open(f, ">&mysock") now works under windows 9x.
but that means if you sort the same large array twice, ties may be  broken in different ways.
modifying $_ inside for(..)
· better unc path handling under ithreads.
now you will get an optional warning.
· "threads",  by arthur bergman, is an interface to interpreter threads.
· the (bogus) escape  sequences \8 and \9 now give an optional warning ("unrecognized escape  passed through").
for more information, see http://www.uni- code.org/ .
· the (\&) prototype now works properly.
(5.7.0 came out before 5.6.1: the development branch 5.7 released ear- lier than the maintenance branch 5.6)
in the ithreads model any data sharing between threads must be explicit, as opposed to the model where data sharing was implicit.
rectly produces  0.000000e+0 instead of 0.000000e+00.
· "i18n::langinfo" can be used to query locale information.
platform specific problems aix · if using the aix native make command, instead of just "make" issue "make all".
the only exception to this is sunos 4.x, which needs them.
in case you are still using solaris 2.5 (aka sunos 5.5), you may expe-  rience failures (the test core dumping) in lib/locale.t.
perl 5.6.1 still works for amigaos (as does the the 5.7.2 devel- opment  release).beos
"h2xs" uses the new extutils::constant  module which will affect newly created extensions that define constants.
· end blocks are now run even if you exit/die in a begin  block.
· the builtindump() now gives an optional warning "dump()  better written as core::dump()", meaning that by default  "dump(...)" is resolved as the builtindump() which dumps core  and aborts, not as (possibly) user-defined "sub dump".
package mypack; use attribute::handlers; sub wolf :attr(scalar) { print "howl!\n" } # later, in some package using or inheriting from mypack... my mypack $fluffy : wolf; # the attribute handler wolf will be called both variables and routines can have attribute handlers.
however, further security vulnerabilities are, unfortu- nately,  always possible.
many of the bug fixes in 5.8.0 were already seen in the 5.6.1 mainte- nance release since the two releases were kept closely coordinated (while 5.8.0 was still called 5.7.something).
this will be changed in a  future release, but we don’t know yet what the new semantics will exactly  be.
this feature helps in writing internation-
see  per- lio::scalar. · "perlio::via", by nick ing-simmons, acts  as a perlio layer and wraps perlio layer functionality provided by a class  (typically implemented in perl code).
check your shared library path, and any shared perl libraries in those  directories.
·  "perlio::via::quotedprint", by elizabeth mattijsen, is an example of  a "perlio::via" class: use perlio::via::quotedprint;  open($fh,">:via(quotedprint)",$path); this will automatically  convert everything output to $fh to quoted-printable.
· all the openbsd specific  patches (except for the installation spe- cific ones) have been merged back to  the main distribution.
· non-blocking waits for child processes (or  pseudo-pro- cesses) are supported via "waitpid($pid,  &posix::wnohang)".
it also serves as an example of a loadable perlio layer.
in the  ithreads model any data sharing between threads must be explicit, as opposed to  the model where data sharing was implicit.
extension dynamic in vms the socket extension is now dynamically loaded instead of being stati- cally built in.
· the character tables have been updated to unicode 3.2.0. ·
see i18n::langinfo. ·  "i18n::langtags", by sean burke, has functions for dealing with  rfc3066-style language tags.
a mmap layer may be available if platform supports it (mostly unixes).
[561+] the following platform-specific documents are available  before the installation as readme.platform, and after the installation  as perlplatform: perlaix perlamiga perlapollo perlbeos perlbs2000 perlce  perlcygwin perldgux perldos perlepoc perlfreebsd perlhpux perlhurd perlirix  perlmachten perlmacos perlmint perlmpeix perlnetware perlos2 perlos390  perlplan9 perlqnx perlsolaris perltru64 perluts perlvmesa perlvms perlvos  perlwin32
a mmap layer may be available if platform supports it (mostly  unixes).
also, usually the system mallocs on such platforms are much better optimized for such large memory models than the perl malloc.
· "perlio::scalar", by nick  ing-simmons, provides the implementation of io to "in memory" perl  scalars as discussed above.
more appropriate mechanisms for selecting the imple- mentation exist, but they wouldn’t have arrived in time to save quicksort.
the leading "_" is a reminder that  these subpragmas may not survive beyond 5.8.
the command-line options -s  and -f are now recognized on the she- bang (#!) line.
you can see the correct behaviour by replacing the 1..5 with 1, 2, 3, 4, 5.mod_perl 1.26 doesnâât build
several other  encodings (like the rest of the iso-8859, cp*/win*, mac, koi8-r, three variants  ebcdic, chi- nese, japanese, and korean encodings) are included and can be  loaded at runtime.
· "locale::maketext", by sean burke, is a localization framework.
if you have used that feature to dis- allow all  but fully qualified variables, "use strict;" instead.
you can enable/disable them with "use/no warnings  ’file::find’;".
perl_get_sv you may get errors like ’undefined symbol "perl_get_sv"’ or "can’t resolve symbol ’perl_get_sv’", or the symbol may be "perl_sv_2pv".
· in many platforms, the  vendor-supplied ’cc’ is too stripped-down to build perl
just by saying use  switch; you have "switch" and "case" available in perl.
· "b::concise", by stephen mccamant, is a new compiler backend  for walking the perl syntax tree, printing concise info about ops.
../ext/b/t/xref.t 255 65280 14 12 85.71% 3-14 ../ext/list/util/t/first.t 255 65280 7 4 57.14% 2 5-7 ../lib/
· "perlbug" is now much more robust.
see win32 for details.
layers can be specified at open time via 3-arg form of open: open($fh,’>:crlf :utf8’, $path)
they are now magnitudes faster, and they support various bignum libraries such as gmp and pari as their backends.
· if your file system supports symbolic links, you can build perl outside of the source directory by mkdir perl/build/directory cd perl/build/directory sh /path/to/perl/source/configure -dmksymlinks ...
as a part of the ithreads implementation perl will also use any  neces- sary and detectable reentrant libc interfaces.
· "if", by ilya zakharevich, is a new pragma for conditional inclu- sion of modules.
we suggest upgrading to at least vac version 5.0.1.0, that has been known to compile perl correctly.
core enhancements unicode overhaul unicode in general should be now much  more usable than in perl 5.6.0 (or even in 5.6.1).
modules may fail to compile at all, or they may compile and work incorrectly.
that is a literal undef, not an undefined value.ithreads
suidperl is neither built nor installed by default.
platform specific problems aix · if using the aix native make command, instead of  just "make" issue "make all".
· the syntaxes "@a->[...]" and "%h->{...}" have now been deprecated.
· cygwin numerous updates; currently synchronised  with cygwin 1.3.10.
at the moment onlylength() has been implemented.
· windows · signal handling now works better than it used to.
perl5db.t was also added to test the changes, and as a placeholder for further tests.
apparently this problem has been fixed in the latest freebsd releases.
for example: open kid_ps, "-â", "ps", "aux" or die $!; forks theps(1) command (without spawning a shell, as there are more than three arguments toopen()), and reads its standard output via the "kid_ps" filehandle.
( http://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=65612 )linux with sfio fails op/misc test 48
utf-16 and  ucs-2 encoded perl files should now be read cor- rectly.
the reuse option now has an alias, reuse- addr.
a reference to a reference now stringifies as "ref(0x81485ec)" instead of "scalar(0x81485ec)" in order to be more consistent with the return value ofref().
support for unicode, iso-8859-1, and ascii are com- piled in to the module.
this seems to be a compiler error since if compiled with gcc no core dump ensues, and no failures have been seen on the said test on any other platform.
(this happens because the test scripts from under t/lib have been moved to be closer to the library/extension they are testing.)
history written by jarkko hietaniemi .
package mypack; use attribute::handlers; sub wolf :attr(scalar) { print  "howl!\n" } # later, in some package using or inheriting from  mypack... my mypack $fluffy : wolf; # the attribute handler wolf will be called  both variables and routines can have attribute handlers.
this means that additional warnings may  now show up when compiling xs code. ·
· if your file system supports symbolic links, you can build  perl outside of the source directory by mkdir perl/build/directory cd  perl/build/directory sh /path/to/perl/source/configure -dmksymlinks ...
· file handles can be marked as accepting perl’s internal encoding of unicode (utf-8 or utf-ebcdic depending on platform) by a pseudo layer ":utf8" : open($fh,">:utf8","uni.txt")
the dg/ux platform now supports 5.005-style threads.
· several debugger fixes: exit code now reflects the script exit code, condition "0" now treated correctly, the "d" command now checks line number, $.
· beos has been reclaimed.
= 1; ·  localised hash elements (and %env) are correctly unlocalised to not exist, if  they didn’t before they were localised.
· the tr///c and tr///u features have been removed and will not return; the interface was a mistake.
[561] (along with their "\p{...}" versions, of course).
ing over non-existent  indices/keys of a tied/magical array/hash.
there is no need to \-escape any "\w" character.
for very small lists this may result in slightly slower sorting times, but in general the speedup should be at least 20%.
· addedrsignal(), whichsig(), do _join(), op_clear, op_null, ptr_ta- ble_clear(), ptr_table_free() , sv_setref_uv(), and several utf-8 interfaces to the publicised api.
in "clone" you can do whatever you need to do, like for example handle the cloning of non-perl data, if necessary.
[561] · numeric conversions did not recognize changes in the string value properly in certain circumstances.
layers to be applied by default may be specified via the ’open’ pragma.
some warning messages still remain in some platforms, so if you are compiling with gcc you may see some warnings about dubious practices.
[561] ·wait(), waitpid(), and backticks now return the correct exit status under windows 9x.
a potential security vulnerability in the optional suidperl component of perl was identified in august 2000.
the enhanced version has also been backported to earlier releases of perl and submitted to cpan so that the earlier releases can enjoy the fixes.
gccs prior to 2.95.3 are definitely not good enough, and gcc 3.1 may be even better.
· "mime::base64", by gisle aas, allows you to encode data in base64, as defined in rfc 2045 -mime
examples include any platform using  sfio, and compaq/tandem’s nonstop-ux.
· file::find is now (again) reentrant.
this probably means that you are trying to use an  older shared perl library (or extensions linked with such) with perl 5.8.0  executable.
·  "libnetcfg" has been added to configure libnet.
· in addition to config.over, a new override file, config.arch, is available.
the suidperl functionality is likely to be removed in a future release.
call- backs (naughtily) exiting with "next;" instead of "return;" now work.
as a part of the ithreads implementation perl will also use any neces- sary and detectable reentrant libc interfaces.
[561] · io::socket::inet has support for the  reuseport option (if your platform supports it).
the "system" function and backticks operator have improved func- tionality and better error handling.
self-tying of scalars and io thingies works.ext/threads/t/libc
failed tests 128-130 op/pack...............................failed tests 25-5625 op/pow................................ op/taint..............................# msgsnd failed ../ext/io/lib/io/t/io_poll............failed tests 3-4 ../ext/ipc/sysv/ipcsysv...............failed tests 2, 5-6 ../ext/ipc/sysv/t/msg.................failed tests 2, 4-6 ../ext/
· if you are on irix  or tru64 platforms, new profiling/debug- ging options have been added; see  perlhack for more infor- mation about pixie and third degree. ·
a version of net::ping::external is avail- able in cpan.
· two new debugging options have been  added: if you have compiled your perl with debugging, you can use the -dt
# nothing has set the foo element so far  { local $tied_hash{foo} = ’bar’ }
the suggested cure is  to upgrade your solaris.
the above failures are  known as of 5.8.0 with native builds with long filenames, but there are a few  more if running under dosemu because of limitations (and maybe bugs) of dosemu:  t/comp/cpp...........................failed at test 3  t/op/inccode.........................(crash) and a few lib/extutils tests, and  several hundred encode/t/aliases.t failures that work fine with long filenames.
see perlio::via and perlio::via::quotedprint. · "pod::parselink", by russ allbery, has been added, to parse l<> links in pods as described in the new perlpodspec.
· generating illegal unicode code points such as u+fffe, or the utf-16 surrogates, now also generates an optional warn- ing. · "isalnum", "isalpha", and "isword" now match titlecase.
this is not selected by  default, how- ever, you must specify -dusedl in the arguments of configure.
[561] · dprofpp -r didn’t work.
on linux plat- forms the /bin/mail program had an undocumented feature which when com- bined with suidperl gave access to a root shell, resulting in a serious compromise instead of reporting the exploit attempt.
[[:blank:]]" which  stands for horizontal whites- pace (currently, the space and the tab).
· perlretut is a regular  expression tutorial.
xml::parser not working use xml::parser  2.31 or later.z/os (os/390) z/os has rather many test failures  but the situation is actually much better than it was in 5.6.0; it’s just  that so many new modules and tests have been added.
the "x" command has been extended so that "x n expr" dumps out the value ofexpr to a depth of at mostn levels.
·  gcc needs to closely track the operating system release to avoid build  problems.
the following tests are known to fail on os/2 (for clarity only  the failures are shown, not the full error messages):  ../lib/extutils/t/mkbootstrap.t 1 256 18 1 5.56% 8 ../lib/extutils/t/packlist.t  1 256 34 1 2.94% 17 ../lib/extutils/t/basic.t 1 256 17 1 5.88% 14  lib/os2_process.t 2 512 227 2 0.88% 174 209 lib/os2_process_kid.t 227 2 0.88%  174 209 lib/rx_cmprt.t 255 65280 18 3 16.67% 16-18op/sprintf tests 91, 129, and 130 the op/sprintf tests 91, 129, and  130 are known to fail on some plat- forms.
the existing behaviour when localising tied arrays and hashes is  wrong, and will be changed in a future release, so do not rely on the existing  behaviour.
ââ ... or on already opened handles via extended "binmode": binmode($fh,’:encoding(iso-8859-7)’); the built-in layers are: unix (low level read/write), stdio (as in previous perls), perlio (re-implementation of stdio buffering in a portable manner), crlf (does crlf  "\n" translation as on win32, but available on any platform).
·printf() and sprintf() now support parameter  reordering using the "%\d+\$" and "*\d+\$" syntaxes.
[561] ·sort() has been changed to use primarily mergesort internally as opposed to the  earlier quicksort.
a new optional location for perl libraries, otherlibdirs, is avail- able.
quicksort has a worst case run time that can grow like n**2, so-called quadratic behaviour, and it can hap- pen on patterns that may well arise in normal use.
· "open" is a new pragma for setting the default i/o  layers foropen().
this  didn’t do anything useful, as the sort was not performed.
socket/socketpair..............failed tests 12 ../lib/ipc/sysv.......................failed tests 2, 5-6 ../lib/warnings.......................failed tests 115-116, 118-119
you have to recompile your xs modules.
these will get installed as perljp perlko perlcn perltw · the documentation for the posix-bc platform is called "bs2000", to avoid confusion with the perl posix module.
the following tests may fail intermittently because of timing problems,  for example if the system is heavily loaded.
· localised tied variables no longer leak memory use tie::hash; tie my %tied_hash => ’tie::stdhash’; ... # used to leak memory every time local() was called; # in a loop, this added up.
ieee-format floating point default on openvms alpha perl now uses ieee format (t_float) as the default internal floating point format on openvms alpha, potentially breaking binary compatibil- ity with external libraries or existing data.
ing over non-existent indices/keys of a tied/magical array/hash.
[561] and -dr options to trace tokenising and to add reference counts to displaying vari- ables, respectively.
see install for more  details.
[561] · multi-line matches like ""a\nxb\n" =~ /(?!\a)x/m" were flawed.
· in safe, %inc is now localised in a safe compartment so that use/require work.
this seems to be a compiler error  since if compiled with gcc no core dump ensues, and no failures have been seen  on the said test on any other platform.
· universal::isa no  longer caches methods incorrectly.
· guidelines of how to construct minimal perl installations have been added to install.
[561] · the  regular expression captured submatches ($1, $2, ...) are now more consistently  unset if the match fails, instead of leaving false data lying around in them.
· the  "utf8::" name space (as in the pragma) provides various perl-  callable functions to provide low level access to perl’s internal unicode  representation.
(basically what  happens is that com- peting threads can corrupt shared global state, one good  example being regular expression engine’s state.)timing problems
this is caused by a bug in the  awk utility of unicos/mk.
op/sprintf.t 224 3 1.34% 98 100 136 op/tr.t 97 5 5.15% 63 71-74 uni/fold.t 780 6 0.77% 61 169 196 661 710-711
which stands for horizontal whites- pace (currently, the space and the tab).
if you believe you have an unreported bug, please run theperlbug pro- gram included with your release.
many of the new tests are of course introduced by the new modules, but still in general perl is now more thoroughly tested.
[561] · the behaviour of non-decimal but  numeric string constants such as "0x23" was platform-dependent: in  some platforms that was seen as 35, in some as 0, in some as a floating point  number (don’t ask).
this is caused by darwin’s ufs not sup- porting inode change time.
and pack(’c0’, ...).
this didn’t do anything useful, as the sort was not performed.
(previously perl always  preferred floating point numbers in its math.)arrays now always interpolate into double-quoted strings [561] in double-quoted strings, arrays now interpolate, no matter what.
because of the above error, parts of the converted headers will be invisible.
(it is in fact a full implementation of sed in perl: you can use the sed functionality by using the "psed" utility.)
· ’use lib’ now works identically to @inc.
use "perlcc -b"  instead.)note that perlcc is still considered very experimental and unsupported.
this means that for example instead  of "do format()" you must write "do &format()".
· in addition to config.over, a new override file, config.arch,  is available.
in search::dict one can now have a pre-processing hook for the lines being searched.
this is only meant as a temporary debugging aid while securing the code of old legacy applications.
· if you have gcc 3, there  is a make target called "perl.gcov" for creating a gcoved perl  executable for cov- erage analysis.
the story in more detail: suppose you want to serve yourself a lit- tle slice of pi.
· several unicode fixes.
· gcc needs to closely track the operating system release to avoid build problems.
the magic constants (e.g. ’p’) have been macrofied (e.g. "perl_magic_tied") for better source code readability and maintain- ability.
you can ignore the error, but it does cause a slight problem: you cannot fully benefit from the h2ph utility (see h2ph) that can be used to convert c headers to perl libraries, mainly used to be able to access from perl the constants defined using c preprocessor, cpp.
lib/ftmp-security tests warn â€â €™system possibly insecureâ€â €™ don’t panic.
in case you are still using solaris 2.5 (aka sunos 5.5), you may expe- rience failures (the test core dumping) in lib/locale.t.
for tests 129 and 130, the failing  platforms do not comply with the ansi c standard: lines 19ff on page 134 of  ansi x3.159 1989, to be exact.
note that some  of the net::ping tests are disabled when running under the perl distribution  since one cannot assume one or more of the following: enabled echo port at  localhost, full internet con- nectivity, or sympathetic firewalls.
this document describes differences between the 5.6.0 release and the 5.8.0 release.
see also perlio::via::quotedprint.
it is now a top-level category in its own right.
[561] · configure.gnu now works with options with whitespace in them. ·
restricted hashes a restricted hash is restricted to a certain set of keys, no keys out-  side the set can be added.
see  pod::text::overstrike.
some warning messages still remain in some platforms, so if you are  compiling with gcc you may see some warnings about dubious practices.
and, ironically, this mergesort does particularly well  where quicksort goes quadratic: mergesort sorts (1..$n, 1..$n) in o(n) time.
(eg by reading/proc/self/exe on linux,/proc/curproc/file on freebsd) · a new variable, "${^taint}", indicates whether taint mode is enabled. ·
note that the "tr///cu" functionality has been removed (but see pack(’u0’, ...)).
the "fields" pragma interface  will remain available.
(this happens because the test scripts  from under t/lib have been moved to be closer to the library/extension they are  testing.)
· libnet, by graham barr, is a collection of  perl5 modules related to network programming.
· "encode",  originally by nick ing-simmons and now maintained by dan kogai, provides a  mechanism to translate between different charac- ter encodings.
also the long doubles support in aix should be better now.
· documentation on how to use the perl source repository has been added toporting/repository.pod.
[561] · configure no longer includes the dbm libraries (dbm, gdbm, db, ndbm) when building the perl binary.
you should carefully launder the arguments to  guarantee their validity.
the following tests are known to fail in mac os x 10.1.5 because of buggy (old) implementations of berkeley db included in mac os x: failed test stat wstat total fail failed list of failed ------------------------------------------------------------------------- ../ext/db_file/t/db-btree.t 0 11 ?? ??
these failures are unlikely to get fixed  as 5.005-style threads are considered fundamentally broken.
the prototypes are  now checked better at compile-time for invalid syntax.
· ncr mp-ras is now supported.
· "devel::ppport",  originally by kenneth albanowski and now main- tained by paul marquess, has  been added.
· perlpodspec is a more formal  specification of the pod format, mainly of interest for writers of pod  applications, not to people writing in pod.
the latter is an  article about software localization, originally published in the perl journal  #13, and republished here with kind permission.
( http://www.freebsd.org/cgi/query-pr.cgi?pr=34308 )irix fails ext/list/util/t/shuffle.t or digest::md5 irix with mipspro 7.3.1.2m or 7.3.1.3m compiler may fail the list::util test ext/list/util/t/shuffle.t by dumping core.
also the long  doubles support in aix should be better now.
(interesting only for extension writers and perl core hackers.)
a change to self-tying of globs has caused them to be  recursively ref- erenced (see: "two-phased garbage collection" in  perlobj).
(they produce something other than "1"  and "-1" when formatting 0.6 and -0.6 using the printf format  "%.0f"; most often, they produce "0" and "-0".)
if you have used that feature to dis- allow all but fully qualified variables, "use strict;" instead.
a reference to a reference now stringifies as  "ref(0x81485ec)" instead of "scalar(0x81485ec)" in order to  be more consistent with the return value ofref().
the reuse option now has an  alias, reuse- addr.
so the perlio ":raw" layer (or "discipline", to use the camel book’s older terminology) is now formally defined as being equivalent to binmode(fh) - which is in turn defined as doing whatever is necessary to pass each byte as-is without any translation.
nothing gets installed, but the  code is worth study- ing for extension writers.
· fix password routines which in some shadow password platforms (e.g. hp-ux) caused getpwent() to return every other entry.
on a really fast machine you can hope to finish the suite  in about 6-8 minutes (wall- clock time).
the byteorder  was only sizeof(long) bytes long (1234 or 4321), but now it is correctly  sizeof(iv) bytes long, (12345678 or 87654321).
perl_get_sv you probably have an old pre-perl-5.8.0  installation (or parts of one) in /library/
c" will tell you the vac version.
· "open" is a new pragma for setting the default i/o layers foropen().
[561] · the  numerical comparison operators return "undef" if either operand is a  nan. previously the behaviour was unspecified. ·
· spurious syntax errors generated in certain situations, whenglob() caused file::glob to be loaded for the first time, have been fixed.
this file is supposed to be used by hints file writers for  architecture-wide changes (as opposed to config.over which is for site-wide  changes).
[561]  and -dr options to trace tokenising and to add reference counts to displaying  vari- ables, respectively.
use tie::hash; tie my %tied_hash  => ’tie::stdhash’; ...
this is caused by a bug in the awk utility of unicos/mk.
see "installation and configuration  improvements" for the effects of perlio on your architecture name.
new unicode properties unicodescripts are now supported.
no more cor- rupt internal state since the current operation is always finished first,
·scalar() now forces scalar context even when used in void context.
with these, you can implement rather  advanced parsing algorithms.
use "perlcc -b" instead.)note that perlcc is still considered very experimental and unsupported.
if you do not like  this new behaviour, specify prefix, siteprefix, and vendorprefix explicitly.
· my __package__ $obj now works.
contact the macperl mailing list for details.
[561+] · "scalar::util" is a selection of general-utility scalar subrou- tines, such asblessed(), reftype() , and tainted().
[561] · lexicals i: lexicals outside an eval "" weren’t resolved correctly inside a subroutine definition inside the eval "" if they were not already referenced in the top level of the eval""ed code.
"clone" will be executed  once for every package that has it defined or inherited.
the template letters are "j", "j", "f", and "d".
another change related to the architecture name is that "-64all" (-duse64bitall, or "maximally 64-bit") is appended only if your pointers are 64 bits wide.
(subroutine and "our" variables still get attributes applied at compile-time.)
this affects builds with "-duselongdouble".
you can regard this as totally triv- ial, or  somewhat profound.
use text::balanced  ’extract_delimited’; ($a, $b) =
[561] · "pack() / unpack()" can now  group template letters with "()" and then apply repetition/count  modifiers on the groups.
·  "unicode::collate", by sadahiro tomoyuki, implements the uca (uni-  code collation algorithm) for sorting unicode strings.
it seems that for some reason "make  install" doesn’t always completely overwrite the files in  /library/perl.
[561] ·  html files will now be installed in c:\perl\html instead of  c:\perl\lib\pod\html ·
you can see the list of changes in the 5.6.1 release (both from the 5.005_03 release and the 5.6.0 release) by reading perl561delta.
· formats now support zero-padded decimal fields.
this has been  corrected.
· "digest", frontend module for calculating digests (checksums), from gisle aas, has been added.
unicode in package/class and subroutine names does not work one can have unicode in identifier names, but not in  package/class or subroutine names.
in future releases of perl the forms will become fatal errors so consider starting laundering now.
the tests are now reported in a different order than in earlier perls.
[561] ·posix::sleep() now returns the number of unslept seconds (as the posix standard says), as opposed tocore::sleep() which returns the number of slept seconds.
apparently this problem has  been fixed in the latest freebsd releases.
again, this is not perl’s fault-- the libc of mac os x is not threadsafe (in this particular test, thelocaltime() call is found to be threadun- safe.)
more details are in "performance enhancements".
see attributes for additional details.
· the "exec  list" and "system list" operations now produce warnings on  tainted data and in some future release they will produce fatal errors.
perlhpux perlhurd perlirix perlmachten perlmacos perlmint perlmpeix perlnetware perlos2 perlos390 perlplan9 perlqnx perlsolaris perltru64 perluts perlvmesa perlvms perlvos perlwin32 these documents usually detail one or more of the following subjects: configuring, building, testing, installing, and sometimes also using perl on the said platform.
if you are building on a ufs partition, you will also probably see t/op/stat.t subtest #9 fail.
the obsolete chat2 library  that should never have been allowed to escape the laboratory has been  decommissioned.
[561+] · "filter::util::call", by paul marquess, provides you  with the framework to writesource filters in perl.
· caller() could cause core dumps in certain situations.
see extutils::constant.
this  behaviour may be fixed at a later date.
· in sys::syslog there is now a failover mechanism that will go through alternative connection mechanisms until the message is suc- cessfully logged.
· the properties \p{blank} and \p{spaceperl} have been  added.
· policy.sh policy change: if you are reusing a policy.sh file (see install) and you use configure -dprefix=/foo/bar and in the old policy $prefix eq $siteprefix and $prefix eq $vendorprefix, all of them will now be changed to the new prefix, /foo/bar.
irix numerous compilation flag and hint enhancements; accidental mixing of 32-bit and 64-bit libraries (a doomed attempt) made much harder.
mergesort has worst case o(n log n) behaviour, the best value attainable.
if you find what you think is a bug, you might check the articles  recently posted to the comp.lang.perl.misc newsgroup and the perl bug database  at http://bugs.perl.org/ .
· "eval "v200"" now  works.
· generating illegal unicode code  points such as u+fffe, or the utf-16 surrogates, now also generates an optional  warn- ing. · "isalnum", "isalpha", and  "isword" now match titlecase.
in general, scripts are more inclusive, but not universally  so.
multithreaded code should be migrated to the new ithreads model (see threads, threads::shared and perlthrtut).
· two new debugging options have been added: if you have compiled your perl with debugging, you can use the -dt
many of these changes have been further developed since 5.6.1 was released, those are marked "[561+]".
·  "class::isa", by sean burke, is a module for reporting the search  path for a class’s isa tree.
it also sends the bug report to perl.org, not perl.com. · "perlcc" has been rewritten and its user interface (that is, com- mand line) is much more like that of the unix c compiler, cc.
use of "/c" in substitutions, even with "/g", elicits "use of /c modifier is meaningless in s///".
this is not selected by default, how- ever, you must specify -dusedl in the arguments of configure.
see  test::more. · "test::simple", by michael schwern, has basic  utilities for writing tests.
· "xs::apitest", by tim jenness, is a test extension that exercises xs apis.
your bug report, along with the output of "perl -v", will be sent off to perlbug@perl.org to be analysed by the perl porting team.
· "memoize"  can make your functions faster by trading space for time, from mark-jason  dominus.
the following tests are known to fail due to fundamental problems in the 5.005 threading implementation.
[561] · the debugger (perl5db.pl) has been modified to present a more  con- sistent commands interface, via (commandset=580).
but this may be upgraded to a fatal error in a future release.
perl installation leaves libnet unconfigured; uselibnetcfg to  con- figure it.
·  "do" followed by a bareword now ensures that this bareword  isn’t a keyword (to avoid a bug where "do q(foo.pl)" tried to  call a sub- routine called "q").
·  the long deprecated uppercase aliases for the string comparison operators (eq,  ne, lt, le, ge, gt) have now been removed.
quicksort was rescued by implementing a sort pragma to control aspects of the sort.
contact the macperl mailing list for  details.
the exact numbers depend on the plat- form and perl  configuration used.
· vms see "socket extension dynamic in vms" and "ieee-format floating point default on openvms alpha" for important changes not otherwise listed here.chdir() now works better despite a crt bug; now works with multi- plicity (see install); now works with perl’s malloc.
· if tr/// is just counting characters, it doesn’t attempt to modify its target.
[561] · the perl parser has been  stress tested using both random input and markov chain input and the few found  crashes and lockups have been fixed.
again, this is not perl’s fault-- the  libc of mac os x is not threadsafe (in this particular test, thelocaltime() call is found to be threadun- safe.)
· "piconv" is an implementation of the character conversion utility "iconv", demonstrating the new encode module. ·
the "package;" syntax ("package" without an argument) has been dep- recated.
· aix dynamic loading should be now better supported.
this has been corrected.
the  default on vax (d_float) has not changed.
· "mime::quotedprint", by gisle aas, allows you to encode data in quoted-printable encoding, as defined in rfc 2045 -mime
· os/2 now works with usethreads (see install).
[561+] · a failed (pseudo)fork now returns undef and sets errno to eagain.
if that doesn’t  help, you may have to try removing all the .bundle files from beneath  /library/perl, and again "make install"-ing.
·  "next", by damian conway, is a pseudo-class for method redispatch.
· "i18n::langinfo" can be  used to query locale information.
if you do not like this new behaviour, specify prefix, siteprefix, and vendorprefix explicitly.
· netware from novell is now supported.
· in safe, %inc is now  localised in a safe compartment so that use/require work.
the problem was caused by perl trying to report a suspected  security exploit attempt using an external program, /bin/mail.
the obsolete chat2 library that should never have been allowed to escape the laboratory has been decommissioned.
failure of thread (5.005-style) tests note that support for 5.005-style threading is deprecated, experimental and practically unsupported.
· file handles can be opened to  "in memory" files held in perl scalars via:  open($fh,’>’, \$variable) â”‚â”‚  ... ·
-ilib ext/time/hires/hires.ttied/magical array/
· data::dumper now has an option to dump code references using b::deparse.
while some limited functionality towards  this does exist as of perl 5.8.0, that is more accidental than designed; use of  unicode for the said purposes is unsupported.
in particular,caller() now returns a subroutine name of "(unknown)" for subroutines that have been removed from the symbol table.
see "new  unicode properties" earlier in this document for addi- tional information  on changes with unicode properties.
[561] · the numerical comparison operators return "undef" if either operand is a nan. previously the behaviour was unspecified. ·
in particular,caller() now returns a  subroutine name of "(unknown)" for subroutines that have been removed  from the symbol table.
this is admittedly not a clean solution, and the solution may not even work at all.
see threads and threads::shared, and  perlthrtut.
not only is the current interface rather ugly, but the current implementation slows down normal array and hash use quite noticeably.
extract_delimited("’never say never’, he never said",  "’", ’’); $a will be "’never say  never’", $b will be ’, he never said’.
instead, if you explicitly choose not to use perlio (con- figure command line option -uuseperlio), you will get "-stdio" appended. ·
· "libnetcfg" has been added to configure libnet.
[561] selected bug fixes numerous memory leaks and uninitialized memory accesses have been hunted down.
the main rationale was to have thread modules to obey normal naming,  "thread::" (the "threads" and "threads::shared"  themselves are more pragma-like, they affect compile-time, so they stay  lowercase).
· vac 5.0.0.0 may produce buggy code for perl
perlio is the default configuration because without it many new  features of perl 5.8 cannot be used.
in 5.8.0 · better unicode support · new io implementation · new thread implementation · better numeric accuracy · safe signals · many new modules · more extensive regression testing incompatible changes binary incompatibility perl 5.8 is not binary compatible with earlier releases of perl.
the core-dumping functionality will remain in future available as an explicit call to "core::dump()", but in future releases the behaviour of an unqualified "dump()" call may change.
· data::dumper now has an option to sort hashes.
the method is also exportable as a sockatmark() function.
(this broke the tk extension with 5.6.0.)
(subroutine and "our"  variables still get attributes applied at compile-time.)
known problems the compiler suite is still very
the original files are left unaffected.
· if you have gcc 3, there is a make target called "perl.gcov" for creating a gcoved perl executable for cov- erage analysis.
extutils::makemaker now uses file::spec internally, which hopefully leads to  better portability.
· universal::isa no longer caches methods incorrectly.
if you don’t have /bin/mail, or  if you have ’safe setuid scripts’, or if suidperl is not installed,  you are safe.
the leading "_" is a reminder that these subpragmas may not survive beyond 5.8.
this may or may not be a problem with ancient tcp/ip stacks of vms: we do not know since we weren’t able to test perl in such configurations.
the quicksort divide and conquer strategy works well on platforms with relatively small, very fast, caches.
[561] ·wait(), waitpid(), and backticks now  return the correct exit status under windows 9x.
· chop(@list) in list context returned the characters chopped in reverse order.
with ithreads, when a new thread is created, all perl data is cloned, however non-perl data cannot be cloned automatically.
· some versions of glibc have a brokenmodfl() .
localising tied arrays and hashes is broken local %tied_array; doesn’t work as one would  expect: the old value is restored incor- rectly.
· in sdbm_file  on dosish platforms, some keys went missing because of lack of support for  files with "holes".
you can set the environment variable perl_test_net_ping to "1" (one) before running the perl test suite to enable all the net::ping tests.
· "sort" is a  new pragma for controlling the behaviour ofsort().
attributes for "my" variables now handled at run-time the "my expr : attrs" syntax now applies variable attributes at run-time.
[561] · zero entries were missing  from the unicode classes such as "isdigit".
we suggest upgrading to at least vac version 5.0.1.0, that has been  known to compile perl correctly.
freebsd built with ithreads coredumps reading large directories
(this was a problem for example if you were mixing data from i/o and unicode data: your output might have got magically encoded as utf-8.)
as of november 2001 the only known vulnerable platform is linux, most likely all linux distributions.
· the  unimplemented posix regex features
in 5.8.0 · better unicode support · new io implementation ·  new thread implementation · better numeric accuracy · safe  signals · many new modules · more extensive regression testing incompatible changes binary incompatibility perl 5.8 is not binary compatible with earlier releases of perl.
new or improved platforms for the list of  platforms known to support perl, see "supported plat- forms" in  perlport.
understanding of numbers in general a lot of fixing has happened in the area of  perl’s under- standing of numbers, both integer and floating point.
· "filter::simple", by damian conway, is  an easy-to-use frontend to filter::util::call.
· math::bigfloat and math::bigint have undergone a  full rewrite by tels.
most importantly, anonymous subs used to leak quite a bit.
one reason of this unfinishedness is its (currently) inherent unporta- bility: since both package names and subroutine names may need to be mapped to file and directory names, the unicode capability of the filesystem becomes important-- and there unfortunately aren’t portable answers.
"xs::typemap", by tim jenness, is  a test extension that exercises xs typemaps.
[561] · "xsubpp" now supports the out keyword.
this improves the portability of system(@args) by  avoiding the need for win- dows "cmd" shell specific quoting in perl  programs.
·  appllib_exp, a lesser-known configuration-time definition, has been documented.
(to be exact, the use64bitall is ignored.)
stable means that ties are broken to preserve the original order of appearance in the input array.
in other words: you just have to recompile your modules containing xs code, sorry about that.
this  is a known bug in the glibc 2.2.5 with long long integers.
it points at some prob- lems with the signedness handling of the c compiler, as do the 64bitint, arith, and pow failures.
the comparison  block is now run in scalar context, and the argu- ments to be sorted are always  provided list context.
error file = try.c,  line = 3 a semicolon is expected at this point.
· appllib_exp, a lesser-known configuration-time definition, has been documented.
instead of scalar(...)
· non-blocking waits for child processes (or pseudo-pro- cesses) are supported via "waitpid($pid, &posix::wnohang)".
· "pack(’u0a*’, ...)" can now be used to force a string to utf-8.
s/$from/$to/g; } }; 1; # in user’s code: use myfilter qr/red/ => ’green’; print "red\n"; # this code is filtered, will print "green\n" print "bored\n"; # this code is filtered, will print "bogreen\n" no myfilter; print "red\n"; # this code is not filtered, will print "red\n" · "file::temp", by tim jenness, allows one to create temporary files and directories in an easy, portable, and secure way.
the warnings issued by file::find now belong to their own category.
·  using "sort" in scalar context now issues an optional warning.
[561] · nec super-ux is now supported.
· in sdbm_file on dosish platforms, some keys went missing because of lack of support for files with "holes".
[561] · perl5opt with embedded  spaces didn’t work.
the module is contained within tie::refhash.
· our() variables will not cause bogus "variable will not stay shared" warnings.
this was caused by perl’s using the operating  system libraries in a situation where the result of the string to number  conversion is undefined: now perl consistently handles such strings as zero in  numeric contexts.
reg_expand_sz keys are now allowed in registry settings used by perl.
hash values output from the algorithm on a hash of all 3-char printable ascii keys comes much closer to pass- ing the diehard random number generation tests.
for example, "system("nmake /nologo", @args)" will now attempt to run the file "nmake /nologo" and will fail when such a file isn’t found.
for (1..5) { $_++ } works without complaint.
· perl has been tested with the gnu pth userlevel  thread package ( http://www.gnu.org/software/pth/pth.html ).
allow compiling with gcc (previously explicitly for- bidden).
[561+] · perlpacktut is apack() tutorial.
this behaviour may be fixed at a later date.
[561] · netbsd/threads: try installing the gnu pth (should be in the  pack- ages collection, or http://www.gnu.org/software/pth/), and config- ure  with -duseithreads.
core enhancements unicode overhaul unicode in general should be now much more usable than in perl 5.6.0 (or even in 5.6.1).
also individual keys can be restricted so that the key cannot be deleted and the value cannot be changed.
the change was made to make perl more compliant with other applications like mod_perl which are using the aix native interface.
(multipurpose internet mail exten- sions).
the only remaining use of "use utf8" is when the perl script itself has been written in the utf-8 encoding of unicode.
the failures in dumper.t and downgrade.t are problems in the tests, those in io_unix and sprintf are problems in the uss (udp sockets and printf formats).
· perlpodspec is a more formal specification of the pod format, mainly of interest for writers of pod applications, not to people writing in pod.
the prototypes are now checked better at compile-time for invalid syntax.
· file::find nowchdir()s correctly when chasing symbolic links.
· carp now has better interface documentation, and the @carp_not interface has been added to get optional control over where errors are reported independently of @isa, by ben tilly.
the command-line options -s and -f are now recognized on the she- bang (#!) line.
such platforms include alpha and 64-bit hppa, mips, ppc, and sparc.
memoize/t/errors.t 0 139 11 5 45.45% 7-11 ../lib/memoize/t/tie_ndbm.t 13 3328 4 4 100.00% 1-4 run/fresh_perl.t 97 1 1.03% 91 ndbm_file fails and odbm_file just coredumps.
[561] · netbsd/threads: try installing the gnu pth (should be in the pack- ages collection, or http://www.gnu.org/software/pth/), and config- ure with -duseithreads.
(perlu-  nicode is more of a detailed reference and background information) ·  perlutil explains the command line utilities packaged with the perl  distribution.
(you  should be able to modify only lvalue elements inside the loops.)
no longer gets corrupted, and all debugger output now goes correctly to the socket if remoteport is set.
unicode can be used in hash  keys, unicode in regu- lar expressions should work now, unicode in tr/// should  work now, uni- code in i/o should work now.
· cygwin numerous updates; currently synchronised with cygwin 1.3.10.
[561] · "our" variables of the same name declared in two sibling blocks resulted in bogus warnings about "redeclaration" of the variables.
localtime() are supposed to be inverses of each other.
[561] · prototype(\[$@%&]) is now available to implicitly create references (useful for example if you want to emulate thetie() interface).
but now the source code bases of standard perl and macperl have been synchro- nised)
the socketpair tests are known to be unhappy in sco 3.2v5.0.4:  ext/socket/socketpair.t...............failed tests 15-45solaris 2.5
·fork() emulation is now more robust, but still continues to have a few esoteric bugs  and caveats.
see perlunicode for details, and more additions.
[561+] · the new bignum, bigint,  and bigrat pragmas, by tels, implement transparent bignum support (using the  math::bigint, math::bigfloat, and math::bigrat backends).
the difference between scripts and blocks is that scripts are the glyphs used by a language or a group of languages, while the blocks are more artificial groupings of (mostly) 256 charac- ters based on the unicode numbering.
hash  values output from the algorithm on a hash of all 3-char printable ascii keys  comes much closer to pass- ing the diehard random number generation tests.
[561] · attributes (such  as :shared) didn’t work withour().
building microperl does not require even running configure; "make -f make- file.micro" should be enough.
note that the new semantics doesn’t work with the  attribute::handlers module (as of version 0.76).socket extension dynamic in vms the socket extension is now dynamically  loaded instead of being stati- cally built in.
currently only "printf()" is tested: how to output vari- ous  basic data types from xs. ·
the same problem affects slic-
[561] · configure support for pdp11-style memory models has been removed due to obsolescence.
# nothing has set the foo element so far { local $tied_hash{foo} = ’bar’ }
there is a  new "kill" implementation based on "sys$sigprc" that allows  older vms systems (pre-7.0) to use "kill" to send signals rather than  simply force exit.
iterative logical name  translations are now limited to 10 itera- tions in imitation of show logical  and other openvms facilities.
the  following tests are known to fail due to fundamental problems in the 5.005  threading implementation.
some memory-hungry perl applications like the pdl don’t work well with perl’s malloc.
aix dynaloading the aix dynaloading now uses in aix  releases 4.3 and newer the native dlopen interface of aix instead of the old  emulated interface.
this change leads to often slightly faster and always less lossy arith- metics.
in  versions 5.004_01 through 5.6.0, the error was in string, @example now must be  written as \@example the idea here was to get people into the habit of writing  "fred\@exam- ple.com" when they wanted a literal "@" sign,  just as they have always written "give me back my \$5" when they  wanted a literal "$" sign.
·  "mime::quotedprint", by gisle aas, allows you to encode data in  quoted-printable encoding, as defined in rfc 2045 -mime
see unicode::normalize.
the module is contained within  tie::refhash.
[561]  · nec super-ux is now supported.
locales may fail the locale test 117 in freebsd.
· the dynix/ptx platform (also known as dynixptx) is supported at or  near osvers 4.5.2.
· infinity is now recognized as a number.
[561] ·  prototype(\[$@%&]) is now available to implicitly create references (useful  for example if you want to emulate thetie() interface).
perl_get_sv you may get errors like  ’undefined symbol "perl_get_sv"’ or "can’t  resolve symbol ’perl_get_sv’", or the symbol may be  "perl_sv_2pv".
most of the rest point at problems with sysv ipc.term::readkey not working on win32 use term::readkey 2.20 or  later.
[561]  ·win32::getcwd() correctly returns c:\ instead of c: when at the  drive root.
such platforms include alpha and 64-bit hppa, mips, ppc, and  sparc.
one potential failure is whether one can (or, if one can, whether it’s a good idea to) link together at all binaries with differ- ent ideas about file offsets; all this is platform-dependent.
after  configure has finished, you can just say make all test and perl will be built  and tested, all in perl/build/directory.
see locale::maketext, and locale::maketext::tpj13.
note that the above of course is extremely disruptive for anything using the /usr/local/bin/perl.
this means that for example instead of "do format()" you must write "do &format()".
gccs prior to 2.95.3 are  definitely not good enough, and gcc 3.1 may be even better.
· building perl with  -duseithreads or -duse5005threads now works under hp-ux 10.20 (previously it  only worked under 10.30 or later).
· posix::sigaction() is now much more flexible and robust.
note that some of the net::ping tests are disabled when running under the perl distribution since one cannot assume one or more of the following: enabled echo port at localhost, full internet con- nectivity, or sympathetic firewalls.
changes that were integrated into the 5.6.1 release are marked "[561]".
· hp-ux readme.hpux updated; "configure -duse64bitall" now works; now uses hp-ux malloc instead of perl malloc. ·
[561] ·  "xsubpp" now supports the out keyword.
the quicksort divide and  conquer strategy works well on platforms with relatively small, very fast,  caches.
· use of v-strings in use/require  causes a (backward) portability warning.
the perl pack function now maps overflowed values to +infinity  and underflowed values to -infinity.
it broke at some point during the  ithreads work and we could not find amiga experts to unbreak the prob- lems.
[561]deprecations · the semantics of bless(ref, ref) were unclear and until someone proves it to make some sense, it is forbidden.
"xs::typemap", by tim jenness, is a test extension that exercises xs typemaps.
· configure "-s" can now run non-interactively.
perl (the undefined symbols used to exist in pre-5.8.0 perls).
[561] file access tests now use  current process privileges rather than the user’s default privileges,  which could sometimes result in a mismatch between reported access and actual  access.
· warnings relating to the use of the new restricted hashes feature have been added.
trying to use unicode characters on an i/o stream without marking the stream’s encoding (usingopen() or binmode()) will cause "wide character" warnings.
new tests several new tests have been added, especially for the lib and ext sub- sections.
· previously dynix/ptx had problems in its configure  probe for non- blocking i/o. · epoc epoc now better supported.
·  "text::balanced", by damian conway, has been added, for extracting  delimited text sequences from strings.
it can now deparse almost all of the  standard test suite (so that the tests still succeed).
scripts are similar to (and superior to) unicodeblocks.
· all regular expression compilation error messages are now hopefully easier to understand both because the error message now comes before the failed regex and because the point of failure is now clearly marked by a "{bar}" has been deprecated for a while.
· regular expressions on references and overloaded scalars now work.
[561] · "pack() / unpack()" can now group template letters with "()" and then apply repetition/count modifiers on the groups.
the vars  pragma now supports declaring fully qualified variables.
it is primarily used by "h2xs" to enhance portability of  xs modules between different ver- sions of perl.
(well, at least the built-in attributes.) · dthr and djsp have been obsoleted; the former removed (because it’s a no-op) and the latter replaced with dsp.
the tests are now reported in a  different order than in earlier perls.
its semantics were never that clear and its implementation even less so.
(previously only $prefix changed.)
· there are now several profiling make targets.
in any case, suidperl should only be used by security  experts who know exactly what they are doing and why they are using suidperl  instead of some other solution such as sudo ( see  http://www.courtesan.com/sudo/ ).
see perlthrtut for  more informa- tion.
what this means is that in list context the func- tions will return only three values, not four.
these are now handled better.
the install file for how to build perl.
(still 16m per thread.)
the "perlio::scalar" and  "perlio::via" (capitalised) were renamed as  "perlio::scalar" and "perlio::via" (all lowercase) just  before 5.8.0.
·  "math::bigrat" for big rational numbers, to accompany math::bigint  and math::bigfloat, from tels.
· the very dusty  examples in the eg/ directory have been removed.
[561] · wince is now  supported.
· unicos fixed various alignment problems that lead into core dumps either during build or later; no longer dies on math errors at runtime; now using full quad integers (64 bits), previously was using only 46 bit integers for speed.
for example, "\p{tibetan}" refers  to the script, while "\p{intibetan}" refers to the block.
[561] ·sort() is also fully  reentrant, in the sense that the sort function can itself callsort().
·  "tie::refhash::nestable", by edward avis, allows storing hash ref-  erences (unlike the standard tie::refhash)
this is caused by the characters \xff (y with diaeresis) and \xbe (y with diaeresis) not behaving correctly when being matched case-insensi- tively.
just by saying use switch; you have "switch" and "case" available in perl.
see perlio::via and  perlio::via::quotedprint. · "pod::parselink", by russ allbery,  has been added, to parse l<> links in pods as described in the new  perlpodspec.
it also has been made more  portable.
anonymous temporary files are available without need to ’use file- handle’ or other module via open($fh,"+>", undef) ââ ...
restricted hashes a restricted hash is restricted to a certain set of keys, no keys out- side the set can be added.
sometimes this problem may also indicate a partial perl 5.8.0 installa- tion, see "mac os x dyld undefined symbols" for an example and how to deal with it.
[561+] · "scalar::util" is a selection  of general-utility scalar subrou- tines, such asblessed(), reftype() , and tainted().
the order of destroys has been made more predictable.
· the "package;" syntax ("package" without an  argument) has been dep- recated.
· the  english module can now be used without the infamous performance hit by saying  use english ’-no_match_vars’; (assuming, of course, that you  don’t need the troublesome variables $â€˜, $&, or  $’.)
mergesort has worst case o(n log n) behaviour, the  best value attainable.
· math::bigfloat and math::bigint have undergone a full rewrite by tels.
the readme file for general  stuff.
[561] · solaris  64-bitness using the sun workshop compiler now works.
eventually, the problem gets whittled down to one that fits in the  cache, from which point it benefits from the increased memory speed.
it does not  taint the result of floating point formats anymore, making the behaviour  consistent with that of string interpolation.
· perluniintro is an introduction to using unicode in perl.
[561] · fixed numerous memory leaks, especially in eval "".
· the thread extension is now not built at all under ithreads  ("con- figure -duseithreads") because it wouldn’t work anyway  (the thread extension requires being configured with  "-duse5005threads").note that the 5.005 threads are unsupported and deprecated: if you have code written for the old threads you should migrate it to the new ithreads model.
you can move the old perl shared library out of the way like this: cd /library/perl/darwin/core mv libperl.dylib libperlold.dylib and then reissue "make install".
use of "/c" in substitutions, even with "/g",  elicits "use of /c modifier is meaningless in s///".
· the "unrecognized escape" warning has been extended to include "\8", "\9", and "\_".
in any case, the change will break existing code that relies on the current  (ill-defined) semantics, so just avoid doing this in general.
the 5.005 threads model (module "thread") is deprecated and expected to be removed in perl 5.10.
(the wholedump() feature is to consid- ered deprecated, and possibly removed/changed in future releases.)
so you really might pre- fer native builds and long filenames.
· in afs installations, one can configure  the root of the afs to be somewhere else than the default/afs by using  the configure parame- ter "-dafsroot=/some/where/else".
quicksort has a worst case run time that can grow like n**2, so-called quadratic behaviour, and it can hap- pen on patterns that may well arise in  normal use.
note that the above of course is extremely  disruptive for anything using the /usr/local/bin/perl.
[561] · a socket handle leak inaccept() has been fixed.
there is a new "kill" implementation based on "sys$sigprc" that allows older vms systems (pre-7.0) to use "kill" to send signals rather than simply force exit.
this is harmless; it is caused by thegetnetbyaddr() and getnet- byaddr_r() having slightly different types for  their first argu- ment.
cygwin "unable to remap" for example when building the tk extension for cygwin, you may get an error message saying "unable to remap".
· in aix 4.2, perl extensions that use c++ functions that use statics may have problems in that the statics are not getting initialized.
note that the new semantics doesn’t work with the attribute::handlers module (as of version 0.76).socket
also, $config{byteorder} is now computed dynamically--this is more robust with "fat binaries" where an executable image contains bina- ries for more than one binary platform, and when cross-compiling.
depending on your platform, there are also other reasons why we  decided to break binary compatibility, please read on.64-bit platforms and malloc if your pointers are 64 bits wide, the perl  malloc is no longer being used because it does not work well with 8-byte  pointers.
· perlclib documents the internal replacements for standard c library functions.
because of the unpredictability of tie-breaking order, and the quadratic worst-case behaviour, quicksort wasalmost replaced com- pletely with a stable mergesort.
this was found to be an inconvenient interface, and in perl 5.8  the unicode model has completely changed: now the "unicodeness" is  bound to the data itself, and for most of the time "use utf8" is not  needed at all.
· lexicals ii: lexicals leaked at file scope into subroutines that were declared before the lexicals.
in general, scripts are more inclusive, but not universally so.
it is the little brother of  "-t": instead of dying on taint violations, lexical warnings are  given.
· chop(@list) in list context returned the  characters chopped in reverse order.
this document describes differences between the 5.6.0 release and the  5.8.0 release.
· all bsds setting $0 now works (as much as possible; see perlvar for details).
·chomp() and chop() are now overridable.
security vulnerability closed [561] (this change was already made in 5.7.0 but bears repeating here.)
the cure is to drop optimization level (configure -doptimize=-o2).
xml::parser not working use xml::parser 2.31 or later.z/os (os/390) z/os has rather many test failures but the situation is actually much better than it was in 5.6.0; it’s just that so many new modules and tests have been added.
for more information, see  http://www.uni- code.org/ .
· "perlio::scalar", by nick ing-simmons, provides the implementation of io to "in memory" perl scalars as discussed above.
[561] · zero entries were missing from the unicode classes such as "isdigit".
known problems the compiler suite is still very experimental
the exploit attempt reporting feature has been completely removed  from perl 5.8.0 (and the maintenance release 5.6.1, and it was removed also  from all the perl 5.7 releases), so that particular vulnerability isn’t  there anymore.
[561] · perltodo has been updated.
(basically, ’cc’ doesn’t do ansi c).
no new syntax is  involved: the hash::util module is the interface.
[561] · wince is now supported.
· the long deprecated uppercase aliases for the string comparison operators (eq, ne, lt, le, ge, gt) have now been removed.
·untie() will now call an untie() hook if it exists.
the information is attached to the new "offsets" member of the "struct regexp".
it also serves as an example of a loadable perlio  layer.
this is harmless; it is caused by thegetnetbyaddr() and
some memory-hungry  perl applications like the pdl don’t work well with perl’s malloc.
the version of berkeley db used when the perl (and, presumably, the db_file extension) was built is now available as @config{qw(db_ver- sion_major db_version_minor db_version_patch)} from perl and as "db_version_major_cfg db_version_minor_cfg db_version_patch_cfg" from c. · building berkeley db3 for compatibility modes for db, ndbm, and odbm has been documented in install.
some platforms that used to use gcvt may now resort to the slower sprintf.
for example, while the script "latin" includes all the latin characters and their various diacritic-adorned versions, it does not include the various punctuation or digits (since they are not solely "latin").
· if you are on irix or tru64 platforms, new profiling/debug- ging options have been added; see perlhack for more infor- mation about pixie and third degree.
odbm_file/odbm.t 255 65280 ?? ??
[561] · lvalue subroutines can now return  "undef" in list context.
this has been cor- rected.
in future releases of perl, non-perlio aware xs modules may become com- pletely unsupported.
note for code authors: if you want to enable your users to use utf-8 as their default encoding but in your code still have eight- bit
· netware from novell is now  supported.
[561]  · sys::syslog ignored the "log_auth" constant.
when perl is built using the native build process on vos release 14.5.0 and gnu c++/gnu tools 2.0.1, all attempted tests either pass or result in todo (ignored) failures.
· ebcdic platforms (z/os (also known as os/390),  posix-bc, and vm/esa) have been regained.
that is a literal undef, not an  undefined value.ithreads the new interpreter threads  ("ithreads" for short) implementation of multithreading, by arthur  bergman, replaces the old "5.005 threads" implementation.
miscellaneous changes · autoload is now  lvaluable, meaning that you can add the :lvalue attribute to autoload  subroutines and you can assign to the autoload return value.
· tied hash interfaces are now required to have the exists and delete methods (either own or inherited).
the previous behaviour of ignoring them by default and warning if requested was unacceptable since it, in a way, falsely promised that the features could be used.
· the 5.005 threads model (module "thread") is deprecated and  expected to be removed in perl 5.10.
[561] · pack "z"  now correctly terminates the string with "\0".
other bugs inchdir() and cwd::cwd() have also been fixed.
[561] · mac os classic is now supported in the mainstream source package (macperl has of course been available since perl 5.004
it can be used for example for vendor add-ons without dis- turbing  perl’s own library directories.
· betterchdir() return value for a non-existent directory.
new documentation · perl56delta details the changes between the 5.005 release and the 5.6.0 release.
· "pod::text::overstrike", by joe smith, has been added.
many test suite tests still fail and the co-existence of unicode and ebcdic isn’t quite settled, but the situation is much better than with perl 5.6.
(something that  "our()" does not and will not support.)
unicode in package/class and subroutine names does not work
· allow a read-only string on the left-hand side of a  non-modifying tr///. · if "stderr" is tied, warnings caused by  "warn" and "die" now cor- rectly pass to it. ·
· ipc::open3 now allows the use of numeric file descriptors.
[561] new or changed diagnostics please see perldiag for more details.
· file handles can be marked  as accepting perl’s internal encoding of unicode (utf-8 or utf-ebcdic  depending on platform) by a pseudo layer ":utf8" :  open($fh,">:utf8","uni.txt"); note for ebcdic users: the  pseudo layer ":utf8" is erroneously named for you since it’s  not utf-8 what you will be getting but instead utf-ebcdic.
· the regex compiler now maintains a structure that identifies nodes in the compiled bytecode with the corresponding syntactic features of the original regex expression.
[561] and  "\p{spaceperl}"
the enhanced version has also been  backported to earlier releases of perl and submitted to cpan so that the  earlier releases can enjoy the fixes.
·unshift() should now be noticeably faster.
[561] · earlier perls treated "sub  foo (@bar)" as equivalent to "sub foo (@)".
·  aix should now work better with gcc, threads, and 64-bitness.
so the perlio ":raw"  layer (or "discipline", to use the camel book’s older  terminology) is now formally defined as being equivalent to binmode(fh) - which  is in turn defined as doing whatever is necessary to pass each byte as-is  without any translation.
the  behavior in earlier versions of perl 5 was that arrays would interpo- late into  strings if the array had been mentioned before the string was compiled, and  otherwise perl would raise a fatal compile-time error.
· netbsd/sparc perl now works on netbsd/sparc.
now perl postpones handling of signals until it’s safe (between opcodes).
· the builtindump() now gives an optional warning "dump() better written as core::dump()", meaning that by default "dump(...)" is resolved as the builtindump() which dumps core and aborts, not as (possibly) user-defined "sub dump".
if you intend to run only on  fat (or if using anydbm_file on fat), run configure with the -ui_ndbm and  -ui_dbm options to prevent ndbm_file and odbm_file being built.
[561] · the makefiles now default to the features enabled in activestate activeperl (a popular win32 binary distribu- tion).
· perlclib documents the internal replacements for  standard c library functions.
·scalar() now forces scalar context even when used in void  context.
all thread tests of perl now work, but not without adding someyield()s to the tests, so while pth (and other userlevel thread implementations) can be considered to be "working" with perl ithreads, keep in mind the possible non-preemptability of the underlying thread implementa- tion.
· "use warnings qw(fatal all)" did not work as intended.
(the wholedump() feature is to consid- ered deprecated, and possibly removed/changed in future  releases.)
· perlapi.pod (a companion to perlguts) now attempts to document the internal api.
with ithreads, when a new thread is created, all  perl data is cloned, however non-perl data cannot be cloned automatically.
the information is attached to the new "offsets" member  of the "struct regexp".
handlers can be  specific to type (scalar, array, hash, or code), or specific to the exact  compilation phase (begin, check, init, or end).
as of november 2001 the only known vulnerable  platform is linux, most likely all linux distributions.
[[.cc.]] and [[=c=]] are still recognised but now cause fatal errors.
(the perlbc tools has been removed.
the main rationale was to have all core perlio layers to have all low- ercase names.
on the other hand, perl will now execute code such as "system("c:/program files/myapp/foo.exe", @args)" correctly.
[561] · extutils::makemaker now uses $env{lib}  to search for libraries.
· if building  threaded perl, you may get compilation warning from pp_sys.c:  "pp_sys.c", line 4651.39: 1506-280 (w) function argument assignment  between types "unsigned char*" and "const void*" is not  allowed.
this probably means that you are trying to use an older shared perl library (or extensions linked with such) with perl 5.8.0 executable.
there is a make target called "perl.gprof" for generating a gprofiled perl executable.
· if you have cpan access (either network or a local copy  such as a cd-rom) you can during specify extra modules to configure to build  and install with perl using the -dextras=... option.
the difference between scripts and blocks is that  scripts are the glyphs used by a language or a group of languages, while the  blocks are more artificial groupings of (mostly) 256 charac- ters based on the  unicode numbering.
[561] · linux previously had problems related to sockaddrlen when usingaccept(), recvfrom() (in perl:recv()), getpeer- name(), and getsockname() .
the compiler suite is slowly getting better but it continues to be highly experimental.
(  http://www.freebsd.org/cgi/query-pr.cgi?pr=34308 )irix fails ext/list/util/t/shuffle.t or digest::md5 irix with mipspro  7.3.1.2m or 7.3.1.3m compiler may fail the list::util test  ext/list/util/t/shuffle.t by dumping core.
[561] · all the  netbsd specific patches (except for the installation spe- cific ones) have been  merged back to the main distribution.
perl v5.8.6 2004-11-05perl58delta(1) man(1) output converted with man2html
· socks support is now much more robust.
the documentation for the wince platform is called perlce (readme.ce  in the source code kit), to avoid confusion with the perlwin32 documentation on  8.3-restricted filesystems.
see "new unicode properties" earlier in this document for addi- tional information on changes with unicode properties.
[561] · mac os classic is now supported in  the mainstream source package (macperl has of course been available since perl  5.004 but now the source code bases of standard perl and macperl have been  synchro- nised)
· because perlio is now the default on most  platforms, "-perlio" doesn’t get appended to the  $config{archname} (also known as $^o) anymore.
[561] · all the netbsd specific patches (except for the installation spe- cific ones) have been merged back to the main distribution.
unicos/mk · during configure, the test guessing which symbols your c compiler and preprocessor define... will probably fail with error messages like cc-20 cc: error file =
see  extutils::constant.
no new syntax is involved: the hash::util module is the interface.
infinity is now recognized as a number.
· malformed unicode encodings (utf-8 and utf-16) cause a lot of warn-  ings, as does trying to use utf-16 surrogates (which are unimple- mented).
the re engine found in perl 5.6.0 accidentally pessimised certain  kinds of simple pattern matches.
· "class::isa", by sean burke, is a module for reporting the search path for a class’s isa tree.
perl v5.8.6  2004-11-05perl58delta(1) man(1) output converted with man2html
../ext/b/t/xref.t 255 65280 14 12  85.71% 3-14 ../ext/list/util/t/first.t 255 65280 7 4 57.14% 2 5-7  ../lib/
if you believe you have an  unreported bug, please run theperlbug pro- gram included with your  release.
"test::more", by michael schwern, is yet another framework for writing test scripts, more extensive than test::simple.
many test suite tests still fail and  the co-existence of unicode and ebcdic isn’t quite settled, but the  situation is much better than with perl 5.6.
it also  correctly changes directories when chasing symbolic links.
see perluniintro for the explanation of the current model, and utf8 for  the current use of the utf8 pragma.
mac os classic compilation of the standard perl distribution in mac os classic should now work if you have the metrowerks development environment and the missing mac-specific toolkit bits.
uts there are a few known test failures, see perluts (readme.uts).vos (stratus)
[561+] · the amdahl uts  unix mainframe platform is now supported.
note that breaking out from  potentially blocking operations should still work, though.
see per- lio::scalar. · "perlio::via", by nick ing-simmons, acts as a perlio layer and wraps perlio layer functionality provided by a class (typically implemented in perl code).
still spotty though mostly  working, unicode support still has problem spots on ebcdic platforms.
pl are now checked for sanity much more  carefully than before.
if this test fails, it indicates that your libc  (c library) is not threadsafe.
· allow a read-only string on the left-hand side of a non-modifying tr///. · if "stderr" is tied, warnings caused by "warn" and "die" now cor- rectly pass to it.
now perl postpones handling of signals  until it’s safe (between opcodes).
· "memoize" can make your functions faster by trading space for time, from mark-jason dominus.
the worst bug (now fixed) was that a pid of -1 would cause a wildcard search of all processes on the system.
· if building perl with interpreter threads (ithreads), theget- grent(), getgrnam(), and getgrgid() functions cannot return the list of the group members due to a bug in the multithreaded support of unicos/mk.
this means that they will be more robust and hopefully faster.
getnet- byaddr_r() having slightly different types for their first argu- ment.
t/op/alarm.t  ext/time/hires/hires.t lib/benchmark.t lib/memoize/t/expmod_t.t  lib/memoize/t/speed.t
the template letters are "j",  "j", "f", and "d".
·  "locale::constants", "locale::country",  "locale::currency" "locale::language", and locale::script,  by neil bowers, have been added.
added a new posix-ish character class "
note that after this perl really does assume that  everything is utf-8: for example if some input handle is not, perl will  probably very soon complain about the input data like this "malformed  utf-8 ..." since any old eight-bit data is not legal utf-8.
· the syntaxes "@a->[...]" and  "%h->{...}" have now been deprecated.
but this may be  upgraded to a fatal error in a future release.
see threads::shared. · "tie::file",  by mark-jason dominus, associates a perl array with the lines of a file.
it can now deparse almost all of the standard test suite (so that the tests still succeed).
· the unimplemented posix regex features
if your existing programs depends on the underlying implementation, consider using class::pseudohash from cpan.
a potential security vulnerability in the optional  suidperl component of perl was identified in august 2000.
10 1 10.00% 4 op/flip.t 15 1 6.67% 15
· support for the "clone" special  subroutine had been added.
· using chdir("") or chdir(undef) instead of  explicitchdir() is doubtful.
[561] · the makefiles now default to the features enabled in  activestate activeperl (a popular win32 binary distribu- tion).
updated and improved modules and pragmata · the following  independently supported modules have been updated to the newest versions from  cpan: cgi, cpan, db_file, file::spec, file::temp, getopt::long, math::bigfloat,  math::bigint, the podla- tors bundle (pod::man, pod::text), pod::latex
see  http://www.plover.com/~mjd/perl/at-error.html for more details about the  history here.
· data::dumper now has an option to dump  code references using b::deparse.
perlio is now the default · io is now by default done via perlio rather than  system’s "stdio".
· previously dynix/ptx had problems in its configure probe for non- blocking i/o. · epoc epoc now better supported.
· ebcdic platforms (z/os (also known as os/390), posix-bc, and vm/esa) have been regained.
use  switch; switch ($val) { case 1 { print "number 1" } case  "a" { print "string a" } case [1..10,42] { print  "number in list" } case (@array) { print "number in list" }  case /\w+/ { print "pattern" } case qr/\w+/ { print  "pattern" } case (%hash) { print "entry in hash" } case  (\%hash) { print "entry in hash" } case (\&sub) { print "arg  to subroutine" } else { print "previous case not true" } } see  switch. ·
if one attempts the test on a fat install (or build) the following  failures are expected: ../ext/
(you should be able to modify only lvalue elements inside the loops.)
· devel::peek now has an interface for the perl memory statistics (this works only if you are using perl’s malloc, and if you have compiled with debugging).
this particular test stress tests the localtime() call to find out whether it is threadsafe.
djgpp failures t/op/stat............................failed at test 29  lib/file/find/t/find.................failed at test 1  lib/file/find/t/taint................failed at test 1  lib/h2xs.............................failed at test 15  lib/pod/t/eol........................
· the shell module now has an oo interface.
[561+] · perldebtut is a perl debugging tutorial.
if you don’t have /bin/mail, or if you have ’safe setuid scripts’, or if suidperl is not installed, you are safe.
·  io::socket::inet now supports a value of zero for "localport" (usu-  ally meaning that the operating system will make one up.)
the "perlio::scalar" and "perlio::via" (capitalised) were renamed as "perlio::scalar" and "perlio::via" (all lowercase) just before 5.8.0.
the following tests are known to fail on os/2 (for clarity only the failures are shown, not the full error messages): ../lib/extutils/t/mkbootstrap.t 1 256 18 1 5.56% 8 ../lib/extutils/t/packlist.t 1 256 34 1 2.94% 17 ../lib/extutils/t/basic.t 1 256 17 1 5.88% 14 lib/os2_process.t 2 512 227 2 0.88% 174 209 lib/os2_process_kid.t 227 2 0.88% 174 209 lib/rx_cmprt.t 255 65280 18 3 16.67% 16-18op/sprintf tests 91, 129, and 130 the op/sprintf tests 91, 129, and 130 are known to fail on some plat- forms.
print "exists!\n" if exists $tied_hash{foo}; as a side effect of this fix, tied hash interfacesmust define the exists and delete methods.
·  the tainting behaviour ofsprintf() has been rationalized.
[561] and "\p{spaceperl}"
when there is no name con- flict, you can omit the "in" from the block name (e.g. "\p{braillepat- terns}"), but to be safe, it’s probably best to always use the "in").ref(...)
[561] ·readline() on files opened in "slurp" mode could  return an extra "" (blank line) at the end in certain situations.
i/o streams (such as images or zip files), you need to explic- itlyopen() or binmode() with ":bytes" (see "open" in perlfunc and "binmode" in perlfunc), or you can just use "binmode(fh)" (nice for pre-5.8.0 backward compatibility).
· "enc2xs" is a tool for people adding their own encodings to the encode module.
localising tied arrays and hashes is broken local %tied_array; doesn’t work as one would expect: the old value is restored incor- rectly.
sion writers for generating xs code to import c header constants.
· extutils::makemaker has  been significantly cleaned up and fixed.
· class::struct can now define the classes in compile time.
finally, other applications than perl (such as mod_perl) tend to prefer the sys- tem malloc.
see threads and threads::shared, and perlthrtut.
other bugs inchdir() and cwd::cwd() have also been  fixed.
· a new special regular expression variable has been introduced: $^n, which contains the most-recently closed group (submatch).
(in  tru64, it is preferable to use the bundled c compiler.)amigaos perl  5.8.0 doesn’t build in amigaos.
· the "exec list" and "system list" operations now produce warnings on tainted data and in some future release they will produce fatal errors.
note for code  authors: if you want to enable your users to use utf-8 as their default  encoding but in your code still have
removing directories with ’no lib’ now works.
failed tests 128-130  op/pack...............................failed tests 25-5625  op/pow................................ op/taint..............................#  msgsnd failed ../ext/io/lib/io/t/io_poll............failed tests 3-4  ../ext/ipc/sysv/ipcsysv...............failed tests 2, 5-6  ../ext/ipc/sysv/t/msg.................failed tests 2, 4-6  ../ext/
also individual keys can be restricted so that the  key cannot be deleted and the value cannot be changed.
(it is in fact  a full implementation of sed in perl: you can use the sed functionality by  using the "psed" utility.)
see attribute::handlers.
[561] · duping socket handles with open(f, ">&mysock") now works under windows 9x.
print "exists!\n" if exists $tied_hash{foo}; as a side effect of  this fix, tied hash interfacesmust define the exists and delete methods.
· you can now build a really minimal perl called microperl.
failed at test 1  lib/test/harness/t/strap-analyze.....failed at test 8  lib/test/harness/t/test-harness......failed at test 23  lib/test/simple/t/exit...............failed at test 1
· stratus vos the  native build method requires at least vos release 14.5.0 and gnu c++/gnu tools  2.0.1 or later.
· all bsds setting $0 now works (as much as possible; see  perlvar for details).
the version of  berkeley db used when the perl (and, presumably, the db_file extension) was  built is now available as @config{qw(db_ver- sion_major db_version_minor  db_version_patch)} from perl and as "db_version_major_cfg  db_version_minor_cfg db_version_patch_cfg" from c. · building  berkeley db3 for compatibility modes for db, ndbm, and odbm has been documented  in install.
"clone" will be executed once for every package that has it defined or inherited.
installperl now outputs everything to stderr.
internally, the execution of end blocks is now controlled by  pl_exit_flags & perl_exit_destruct_end.
·  $autoload,sort(), lock(), and spawning subprocesses in multiple  threads simultaneously are now thread-safe. ·
this change may have surprising side effects because signals no longer interrupt perl instantly.
pl are now checked for sanity much more carefully than before.
if perl is configured with -duse64bitall, the successful result of the subtest 10 of lib/posix may arrive before the successful result of the subtest 9, which confuses the test harness so much that it thinks the subtest 9 failed.
· although "you  shouldn’t do that", it was possible to write code that depends on  perl’s hashed key order (data::dumper does this).
nothing gets installed, but the code is worth study- ing for extension writers.
interpreter threads (ithreads) is the new thread model introduced in perl 5.6 but only available as an internal interface for extension writers (and for win32 perl for "fork()" emulation).
for tests 129 and 130, the failing platforms do not comply with the ansi c standard: lines 19ff on page 134 of ansi x3.159 1989, to be exact.
the debugger has a new "dumpdepth" option to control the  maximum depth to which nested structures are dumped.
· "pod2html" now understands pod written using different  line endings (pc-like crlf versus unix-like lf versus macclassic-like cr).
· file handles can be opened to "in memory" files held in perl scalars via: open($fh,’>’, \$variable) ââ ... ·
it is still a useful module, though, and is available from the cpan.
db-recno.t 149 3  2.01% 61 63 65
read the ’make test’ section of  install instead.libwww-perl (lwp) fails base/date #51 use libwww-perl 5.65 or later.
see threads::shared. · "tie::file", by mark-jason dominus, associates a perl array with the lines of a file.
the obsolete method of making a special (e.g., debugging) flavor of perl by saying make libperl=libperld.a has been removed.
read the ’make test’ section of install instead.libwww-perl (lwp) fails base/date #51 use libwww-perl 5.65 or later.
· fcntl, socket, and sys::syslog have been rewritten  by nicholas clark to use the new-style constant dispatch section (see extu-  tils::constant).
·  perliol documents the internals of perlio with layers.
(bsd_glob() does still sort platform natively, ascii or ebcdic, unless glob_alphasort is specified.)
it is now implemented using a windows message  loop, and is there- fore less prone to random crashes.
[561] ·warnings::enabled() now reports the state of  $^w correctly if the caller isn’t using lexical warnings.
linux · long  doubles should now work (see install).
the behavior in earlier versions of perl 5 was that arrays would interpo- late into strings if the array had been mentioned before the string was compiled, and otherwise perl would raise a fatal compile-time error.
the op/pack failure ("cannot compress negative numbers at op/pack.t line 126") is serious but as of yet unsolved.
these will get installed as perljp  perlko perlcn perltw · the documentation for the posix-bc platform is  called "bs2000", to avoid confusion with the perl posix module.
(they used to be aliases for d/f, but you never knew that.)glob() now returns filenames in alphabetical order the list of filenames fromglob() (or ) is now by default sorted alphabetically to be csh-compliant (which is what happened before in most unix platforms).
cert and vari- ous  vendors and distributors have been alerted about the vulnerability.
·perly.c, sv.c, and sv.h have now been extensively commented.
it can be used to prepend site-specific directories to perl’s default search path (@inc); see install for information. ·
since  there are not that many amiga devel- opers available, we could not get this  fixed and tested in time for 5.8.0.
· "locale::maketext", by sean burke, is a localization  framework.
[561] · configure support for pdp11-style memory  models has been removed due to obsolescence.
· "locale::constants", "locale::country", "locale::currency" "locale::language", and locale::script, by neil bowers, have been added.
[561] · some cases of  inconsistent taint propagation (such as within hash values) have been fixed.
the gconvert  macro ($config{d_gconvert}) used by perl for stringi- fying floating-point  numbers is now more picky about using sprintf %.*g rules for the conversion.
the only exception is that  a "in" pre- fix is required to signify a unicode block when a block  name conflicts with a script name.
in versions 5.000  through 5.003, the error was literal @example now requires backslash
(utf-8 has not been made the default since there are many perl scripts out there that are using various national eight-bit character sets, which would be illegal in utf-8.)
* perl now works on post-3.0 freebsds.
for very small lists this may result in slightly slower  sorting times, but in general the speedup should be at least 20%.
you can see  the correct behaviour by replacing the 1..5 with 1, 2, 3, 4, 5.mod_perl 1.26 doesnâ€â€™t build with threaded perl use mod_perl 1.27 or higher.
the justification for this rests with quicksort’s worst case  behavior.
(basically what happens is that com- peting threads can corrupt shared global state, one good example being regular expression engine’s state.)timing problems the following tests may fail intermittently because of timing problems, for example if the system is heavily loaded.
· the arguments of writemakefile() in makefile.
see perlthrtut for more informa- tion.
note that this means that some scripts that may have relied on earlier buggy behavior may no longer work correctly.
perl58delta perl58delta(1)
h2xs now also supports c trigraphs.
[561] · lexicals i: lexicals outside an eval "" weren’t  resolved correctly inside a subroutine definition inside the eval ""  if they were not already referenced in the top level of the eval""ed  code.
[561] · new %env entries now propagate to subprocesses.
· "threads", by arthur bergman, is an interface to interpreter threads.
the documentation for the wince platform is called perlce (readme.ce in the source code kit), to avoid confusion with the perlwin32 documentation on 8.3-restricted filesystems.
this implementation also allows later systems to call "kill" from within a signal handler.
beware: microperl makes many assump- tions, some of which may be too bold; the resulting executable may crash or otherwise misbehave in wondrous ways.
in other words: you just have to recompile  your modules containing xs code, sorry about that.
· net::ping has been considerably enhanced by rob brown: multihoming is now supported, win32 functionality is better, there is now time measuring functionality (optionally high-resolution using time::hires), and there is now "external" protocol which uses net::ping::external module which runs your external ping utility and parses the output.
in other taint news, the "exec list" and "system list" have now been considered too risky (think "exec @argv": it can start any program with any arguments), and now the said forms cause a warning under lexical warnings.
ndbm_file/ndbm.t 13 3328 71 59 83.10% 1-2 4 16-71 ../ext/
· perl 5.6.0 could emit spurious warnings about redefinition ofdl_error() when statically building extensions into perl.
· the lexical warnings category  "deprecated" is no longer a sub-cate- gory of the "syntax"  category.
· in aix 4.2, perl  extensions that use c++ functions that use statics may have problems in that  the statics are not getting initialized.
cert and vari- ous vendors and distributors have been alerted about the vulnerability.
this has been reversed to be in the right  order.
db-recno.t 149 3 2.01% 61 63 65
english.t 2 512 54 2 3.70% 2-3 ../lib/filecache.t 5 1 20.00% 5 ../lib/filter/simple/t/data.t 6 3 50.00% 1-3 ../lib/filter/simple/t/filter_only.
now xsubs can have attributes just like subs.
see  tie::file. · "tie::memoize", by ilya zakharevich, provides  on-demand loaded hashes.
memoize/t/errors.t 0 139 11 5 45.45% 7-11  ../lib/memoize/t/tie_ndbm.t 13 3328 4 4 100.00% 1-4 run/fresh_perl.t 97 1 1.03%  91 ndbm_file fails and odbm_file just coredumps.
(they used to be  aliases for d/f, but you never knew that.)glob() now returns filenames in alphabetical order the list of  filenames fromglob() (or ) is now by default sorted  alphabetically to be csh-compliant (which is what happened before in most unix  platforms).
with the quicksort algorithm used to implement perl  5.6 and earlier, the order of ties is left up to the sort.
· perltootc has been renamed as perltooc (to not to conflict with perltoot in filesystems restricted to "8.3" names).
performance enhancements · map() could get pathologically slow when the result list it gener- ates is larger than the source list.
the major reason for the discontinuity is the new io architecture called  perlio.
the following tests are known to fail on super-ux:  op/64bitint...........................failed tests 29-30, 32-33, 35-36  op/arith..............................
this works again now.
· you  can now override thereadline() builtin, and this overrides also the   angle bracket operator.
· addedrsignal(), whichsig(), do _join(), op_clear, op_null, ptr_ta- ble_clear(), ptr_table_free() , sv_setref_uv(), and several utf-8  interfaces to the publicised api.
[561] · the perl parser has been stress tested using both random input and markov chain input and the few found crashes and lockups have been fixed.
the previous behaviour of ignoring them by default  and warning if requested was unacceptable since it, in a way, falsely promised  that the features could be used.
see i18n::langtags. ·  "extutils::constant", by nicholas clark, is a new tool for exten-
in future releases this naming may change.
utf-16 and ucs-2 encoded perl files should now be read cor- rectly.
· if tr/// is just counting characters, it doesn’t  attempt to modify its target.
the aix c compiler vac version 5.0.0.0 may produce buggy code, resulting in a few random tests failing when run as part of "make test", but when the failing tests are run by hand, they succeed.
the "threads::shared::queue" and "threads::shared::semaphore" were renamed as "thread::queue" and "thread::semaphore" just before 5.8.0.
· in future releases, non-perlio aware xs modules may become com- pletely unsupported.
the return value ofcwd::fastcwd() is now tainted.
· "piconv"  is an implementation of the character conversion utility "iconv",
[561] · for perl developers, several new make targets for profiling and debugging have been added; see perlhack.
see perlfork for details.
be sure to trim your bug down to a tiny but sufficient test case.
· fix password  routines which in some shadow password platforms (e.g. hp-ux) caused getpwent() to return every other entry.
changed internals · perlio is now the default.
(something that "our()" does not and will not support.)
[561] · pack "z" now correctly terminates the string with "\0".
perl will now first  finish whatever it was doing, like finishing an internal operation (like sort()) or an exter- nal operation (like an i/o operation), and only then  look at any arrived signals (and before starting the next operation).
-ilib ext/time/hires/hires.ttied/magical array/hash elements do not autovivify for normal arrays  "$foo =
· perl 5.6.0 parsed m/\x{ab}/ incorrectly, leading to spuri- ous  warnings.
yes, much quicker than perlretut.
storable was originally created by raphael manfredi, but it is now maintained  by abhijit menon-sen. storable has been enhanced to understand the two new hash  features, unicode keys and restricted hashes.
· ’use  lib’ now works identically to @inc.
·  localised tied variables no longer leak memory use tie::hash; tie my %tied_hash  => ’tie::stdhash’; ... # used to leak memory every time local()  was called; # in a loop, this added up.
use in production environments is discouraged.
this enables the new behaviour for perl embedders.
this change may have surprising side  effects because signals no longer interrupt perl instantly.
there may also be information at  http://www.perl.com/ , the perl home page.
· using "sort" in scalar context now issues an optional warning.
see attributes for  additional details.
installation (or build) on ntfs  works fine.
on a really fast machine you can hope to finish the suite in about 6-8 minutes (wall- clock time).
installperl now outputs  everything to stderr.
luckily, these days the need for h2ph is rare.
which 1 comes first is hard to know, since one 1  looks pretty much like any other.
· a new command-line option, "-t" is available.
you can move the old perl shared library out of the way like  this: cd /library/perl/darwin/core mv libperl.dylib libperlold.dylib and then  reissue "make install".
perl now tries internally to use integer values in numeric conversions  and basic arithmetics (+ - * /) if the arguments are integers, and tries also  to keep the results stored internally as integers.
also, usually the system mallocs on such platforms are much better  optimized for such large memory models than the perl malloc.
for most uses,  the frontend filter::simple is to be preferred.
[561] · attributes (such as :shared) didn’t work withour().
similarly, building the digest::md5  extension has been known to fail with "*** termination code 139  (bu21)".
· use of thegprof tool to profile perl has been documented in perlhack.
understanding of numbers in general a lot of fixing has happened in the area of perl’s under- standing of numbers, both integer and floating point.
guidelines of how to construct minimal perl installations have been added to  install.
the tainting of %env elements via "keys" or "values" was previously unimplemented.
several unicode fixes.
· extutils::makemaker has been significantly cleaned up and fixed.
· the perl5opt environment variable (for passing command line argu- ments to perl) didn’t work for more than a single group of options.
see perltie for details.
· io::socket::inet now supports a value of zero for "localport" (usu- ally meaning that the operating system will make one up.)
· perlnewmod tells about writing and  submitting a new module.
changes that were integrated into  the 5.6.1 release are marked "[561]".
however, if you just want to sort the even digits ahead of  the odd ones, then what will sort { ($a % 2)  ($b % 2) } @digits;  yield?
the change was made to make perl more compliant with other  applications like mod_perl which are using the aix native interface.
the rationale is that  neither doeslocaltime(), and timelo- cal() and localtime() are supposed to be inverses of each other.
the perl pack function now maps overflowed values to +infinity and underflowed values to -infinity.
see perluniintro for the explanation of the current model, and utf8 for the current use of the utf8 pragma.
it is now implemented using a windows message loop, and is there- fore less prone to random crashes.
· "switch", by damian conway, has been added.
see perldebguts for more complete  information.
· self-ties of arrays and hashes are not supported and fatal errors will happen even at an attempt to do so.
the glibc release 2.2.2  is known to have fixed themodfl() bug. ·
· "perlio::via::quotedprint", by elizabeth mattijsen, is an example of a "perlio::via" class: use perlio::via::quotedprint; open($fh,">:via(quotedprint)",$path); this will automatically convert everything output to $fh to quoted-printable.
· "no module;" does not produce an error  even if module does not have anunimport() method.
it points at some prob- lems with the  signedness handling of the c compiler, as do the 64bitint, arith, and pow  failures.
you should carefully launder the arguments to guarantee their validity.
this is caused by the  characters \xff (y with diaeresis) and \xbe (y with diaeresis) not behaving  correctly when being matched case-insensi- tively.
self-tying problems self-tying of arrays  and hashes is broken in rather deep and hard-to- fix ways.
· attributes::reftype() now works on tied arguments.
perlio allows "layers" to be  "pushed" onto a file handle to alter the handle’s behaviour.
eastern asian perl users are now welcomed in their own  languages: readme.jp (japanese), readme.ko (korean), readme.cn (simplified chi-  nese) and readme.tw (traditional chinese), which are written in normal pod but  encoded in euc-jp, euc-kr, euc-cn and big5.
you can regard this as totally triv- ial, or somewhat profound.
the dynix/ptx platform (also known as dynixptx) is supported at or near osvers 4.5.2.
[561] · current directory entries in %env are now correctly propa- gated to child processes.
the main rationale was to have thread modules to obey normal naming, "thread::" (the "threads" and "threads::shared" themselves are more pragma-like, they affect compile-time, so they stay lowercase).
· tied hash interfaces  are now required to have the exists and delete methods (either own or  inherited).
[561] · can nowsend() from all threads, not just the first one.
[561+] · the new bignum, bigint, and bigrat pragmas, by tels, implement transparent bignum support (using the math::bigint, math::bigfloat, and math::bigrat backends).
use digest::md5 ’md5_hex’; $digest =  md5_hex("thirsty camel"); print $digest, "\n"; #  01d19d9d2045e005c3f1b80e8b164de1 note: the "md5" backward  compatibility module is deliberately not included since its further use is  discouraged.
this is not a substitute for -t. ·
· a new special regular expression  variable has been introduced: $^n, which contains the most-recently closed  group (submatch).
a failure (think chdir(some_ function()) can lead into unintended chdir() to the home directory, therefore this behaviour is deprecated.
· the (bogus) escape sequences \8 and \9 now give an optional warning ("unrecognized escape passed through").
· perlpod has been rewritten to be clearer and to record the best practices gathered over the years.
· perlretut is a regular expression tutorial.
[561] · perl5opt with embedded spaces didn’t work.
and, for sufficiently large slices of pi, the quicksort algorithm  in perl 5.8 won’t return the same results even if reinvoked with the same  input.
perl will now first finish whatever it was doing, like finishing an internal operation (like sort()) or an exter- nal operation (like an i/o operation), and only then look at any arrived signals (and before starting the next operation).
perl 5.8 unfortunately does not build anymore on amigaos; this broke accidentally at some point.
[561] ·  fixed numerous memory leaks, especially in eval "".
in particular binmode(fh) - and hence ":raw"  - will now turn off both crlf and utf-8 translation and remove other lay- ers  (e.g. :encoding()) which would modify byte stream.
·file::glob::glob() has been  renamed tofile::glob::bsd_glob() because the name clashes  with the builtinglob().
[561+] · "filter::util::call", by paul marquess, provides you with the framework to writesource filters in perl.
many of the new tests are of course introduced by the new  modules, but still in general perl is now more thoroughly tested.
· configure "-s" can now run  non-interactively.
use text::balanced ’extract_delimited’; ($a, $b) = extract_delimited("’never say never’, he never said", "’", ’’); $a will be "’never say never’", $b will be ’, he never said’.
most of the rest point at problems with sysv ipc.term::readkey not working on win32 use term::readkey 2.20 or later.
\$bar[1]" will assign "undef" to $bar[1] (assuming that it didn’t exist before), but for tied/magical arrays and hashes such autovivification does not happen because there is currently no way to catch the reference creation.
it broke at some point during the ithreads work and we could not find amiga experts to unbreak the prob- lems.
· the test module has been significantly enhanced.
this parallels the  behavior of "use" vis-a- vis "import".
but quicksort was rescued at the last moment because it is faster than  mergesort on certain inputs and platforms.
the following tests fail on 5.8.0 perl in beos personal  5.03: t/op/lfs............................failed at test 17  t/op/magic..........................failed at test 24  ext/fcntl/t/syslfs..................failed at test 17  ext/file/glob/t/basic...............failed at test 3  ext/posix/t/sigaction...............failed at test 13  ext/posix/t/waitpid.................failed at test 1 see perlbeos (readme.beos)  for more details.
suggestions for new shiny examples welcome but the main issue is that the examples need to be documented, tested and (most impor- tantly) maintained.
turning off "clrfness" is no longer enough to make a stream truly binary.
the most notable omission, for space considerations, is the unihan database.
the "unrecognized  escape" warning has been extended to include "\8",  "\9", and "\_".
the aix c compiler vac version 5.0.0.0 may  produce buggy code, resulting in a few random tests failing when run as part of  "make test", but when the failing tests are run by hand, they  succeed.
note  that the "tr///cu" functionality has been removed (but see  pack(’u0’, ...)).
but how about the odd numbers,  which all compare equal?
· "time::hires", by douglas e.  wegscheid, provides high resolution timing (ualarm, usleep, and gettimeofday).
a workaround for the prob- lem has been added.
· "time::hires", by douglas e. wegscheid, provides high resolution timing (ualarm, usleep, and gettimeofday).
to call the latter, qualify the call as "&dump(...)".
suggestions for new shiny  examples welcome but the main issue is that the examples need to be documented,  tested and (most impor- tantly) maintained.
see perluniintro for more infor-  mation about utf-8.
you will now need an explicit untie to destroy a self-tied glob.
· after years of  trying, suidperl is considered to be too complex to ever be considered truly  secure.
miscellaneous changes · autoload is now lvaluable, meaning that you can add the :lvalue attribute to autoload subroutines and you can assign to the autoload return value.
· rather than relying on c’s argv[0] (which may not contain a full pathname) where possible $^x is now set by asking the operating system.
· z/os (formerly known as os/390, formerly known as mvs oe) now has support for dynamic loading.
instead, if you explicitly  choose not to use perlio (con- figure command line option -uuseperlio), you  will get "-stdio" appended. ·
· "unicode::ucd" offers a querying interface  to the unicode character database.
· made possible to propagate customised exceptions viacroak() ing. ·
this  is the recommended method to build perl on vos.
· io::socket now has anatmark() method, which returns true if the  socket is positioned at the out-of-band mark.
·file::glob::glob() has been renamed tofile::glob::bsd_glob() because the name clashes with the builtinglob().
if you run sort { $a  $b } ( 1 .. $n , 1 .. $n ); (something you might approximate if you wanted to merge two sorted arrays using sort), doubling $n doesn’t just double the quicksort time, itquadruples it.
[561] · utime now  supports "utime undef, undef, @files" to change the file timestamps  to the current time.
failed test stat wstat total fail failed list of failed --------------------------------------------------------------------------- ../ext/data/dumper/t/dumper.t 357 8 2.24% 311 314 325 327 331 333 337 339 ../ext/io/lib/io/t/io_unix.t 5 4 80.00% 2-5 ../ext/storable/t/downgrade.t 12 3072 169 12 7.10% 14-15 46-47 78-79 110-111 150 161 ../lib/extutils/t/constant.t 121 30976 48 48 100.00% 1-48 ../lib/extutils/t/embed.t 9 9 100.00% 1-9 op/pat.t 922 7 0.76% 665 776 785 832- 834 845
so the 5.8 quicksort scrambles large  arrays before sorting them, as a statistical defence against quadratic  behaviour.
internally, the execution of end blocks is now controlled by pl_exit_flags & perl_exit_destruct_end.
bad switch yylook 79bad switch yylook 79bad  switch yylook 79bad switch yylook 79#ifdef
in addition to extract_delimited(), there are also extract_
· the builtindump() function has probably outlived most of its use- fulness.
· "hash::util" is the interface to the newrestricted hashes feature.
· the debugger can now show lexical variables if you have the cpan module padwalker installed. ·
[561] · solaris 64-bitness using the sun workshop compiler now works.
= splice @_, 0, 2) {
use -ddebugging instead.
· the rules for allowing underscores (underbars) in  numeric constants have been relaxed and simplified: now you can have an  underscore simplybetween digits.
·  chdir("") and chdir(undef) now give a deprecation warning because  they cause a possible unintentional chdir to the home directory.
· "mime::base64", by gisle aas, allows  you to encode data in base64, as defined in rfc 2045 -mime
this results hopefully in more accurate numbers.
· perl has been tested with the gnu pth userlevel thread package ( http://www.gnu.org/software/pth/pth.html ).
but how about the odd numbers, which all compare equal?
also the ext/posix/t/posix.t subtest #10 fails but it is skipped for now because the failure is apple’s fault, not perl’s (blocked signals are lost).
there is no need to escape any of the "\w" characters.
· "s2p" has been completely rewritten in perl.
this version of perl detects this broken- ness and has a workaround for it.
perlio is now the default · io is now by default done via perlio rather than system’s "stdio".
[561] ·  current directory entries in %env are now correctly propa- gated to child  processes.
[561] · use of $& could trigger a core dump under some situations.
compiling with  gcc still not recommended because buggy code results, even with gcc 2.95.2.
for clarity, you may want to prefer reuseaddr.
perl58delta(1) perl programmers reference guide perl58delta(1) name perl58delta - what is new for perl v5.8.0 description
in case of failure please try running them manually, for  example ./perl
· policy.sh policy change: if you are reusing a policy.sh file (see  install) and you use configure -dprefix=/foo/bar and in the old policy $prefix  eq $siteprefix and $prefix eq $vendorprefix, all of them will now be changed to  the new prefix, /foo/bar.
the performance has been  improved for common scenarios.
· if your environment variables (lc_all, lc_ctype,  lang) look like you want to use utf-8 (any of the the variables match  "/utf-?8/i"), your stdin, stdout, stderr handles and the default open  layer (see open) are marked as utf-8.
· if you have cpan access (either network or a local copy such as a cd-rom) you can during specify extra modules to configure to build and install with perl using the -dextras=... option.
· "threads::shared", by arthur bergman, allows data sharing for interpreter threads.
the stable subpragma forces stable behaviour, regardless of algorithm.
· thewin32::setchildshowwindow() builtin can be used to con- trol the visibility of windows created by child processes.
· the behavior ofsystem() with  multiple arguments has been rationalized.
· concatenation with the  "." operator or via variable inter- polation, "eq",  "substr", "reverse", "quotemeta", the  "x" operator, substitution with "s///", single-quoted  utf-8, should now work.
the even and odd numbers appear in the output in the same order they appeared in the input.
with these, you can implement rather advanced parsing algorithms.
the core-dumping  functionality will remain in future available as an explicit call to  "core::dump()", but in future releases the behaviour of an  unqualified "dump()" call may change.
[561+] · right-hand side magic (gmagic) could in many cases such as string concatenation be invoked too many times.
any encoding supported by encode module is also available to the ":encoding()" layer if perlio is used.
tie/file/t/31_autodefer.t 255 65280 65 32 49.23% 34-65 ../lib/autouse.t 10 1 10.00% 4 op/flip.t 15 1 6.67% 15 these failures are unlikely to get fixed as 5.005-style threads are considered fundamentally broken.
solaris x86 fails tests with -duse64bitint
this is known problem with cygwin, and a workaround is detailed in here: http://sources.red- hat.com/ml/cygwin/2001-12/msg00894.htmlcygwin ndbm tests fail on fat one can build but not install (or test the build of) the ndbm_file on fat filesystems.
additional  bonuses are that the worst case behaviour ofsort() is now better (in  computer science terms it now runs in time o(n log n), as opposed to  quicksort’s theta(n**2) worst-case run time behaviour), and thatsort() is now stable (meaning that elements with identical keys will stay ordered  as they were before the sort).
· "filter::simple", by damian conway, is an easy-to-use frontend to filter::util::call.
· the character  tables have been updated to unicode 3.2.0. ·
it is still a  useful module, though, and is available from the cpan.
· the c code has been made much more "gcc -wall"  clean.
· previous versions of perl and some readings of some  sections of camel iii implied that the ":raw" "discipline"  was the inverse of ":crlf".
· rather than relying on  c’s argv[0] (which may not contain a full pathname) where possible $^x is  now set by asking the operating system.
# in  myfilter.pm: package myfilter; use filter::simple sub { while (my ($from, $to)
alised software, and in general when the order of the parameters can vary.
on the other hand, perl will now execute code such as  "system("c:/program files/myapp/foo.exe", @args)"  correctly.
· "h2ph" now supports c trigraphs.
there are now about 69 000 individual tests (spread over  about 700 test scripts), in the regression suite (5.6.1 has about 11 700 tests,  in 258 test scripts)
·printf() no longer resets the numeric locale to "c".
ieee-format floating point default on openvms alpha perl now uses ieee  format (t_float) as the default internal floating point format on openvms
· the behavior ofsystem() with multiple arguments has been rationalized.
the op/pack  failure ("cannot compress negative numbers at op/pack.t line 126") is  serious but as of yet unsolved.
perl 5.6.1 still works for amigaos (as does  the the 5.7.2 development release).
the debugger has a new "dumpdepth" option to control the maximum depth to which nested structures are dumped.
see perlos390, perlbs2000 (for posix-bc), and perlvmesa for more information.
if your platform supportsfork(), you can use the list form of  "open" for pipes.
·printf() and sprintf() now support parameter reordering using the "%\d+\$" and "*\d+\$" syntaxes.
the most notable omission, for space considerations, is the  unihan database.
this will create in perl/build/directory a tree of symbolic links pointing to files in /path/to/perl/source.
several other encodings (like the rest of the iso-8859, cp*/win*, mac, koi8-r, three variants ebcdic, chi- nese, japanese, and korean encodings) are included and can be loaded at runtime.
[561+] · a lost warning "can’t declare ... dereference in my" has been restored (perl had it earlier but it became lost in later releases.)
with threaded perl use mod_perl 1.27 or higher.
see uni- code::collate. · "unicode::normalize", by sadahiro tomoyuki, implements the various unicode normalization forms.
"blank" is like cisblank(), that is, it contains only "horizontal whites- pace" (the space character is, the newline isn’t), and the "spaceperl" is the unicode equivalent of "\s" (\p{space} isn’t, since that includes the vertical tabulator character, whereas "\s" doesn’t.)
9 3 33.33% 1-2 5 ../lib/math/bigint/t/bare_mbf.t 1627 4 0.25% 8 11 1626-1627 ../lib/math/bigint/t/bigfltpm.t 1629 4 0.25% 10 13 1628- 1629 ../lib/math/bigint/t/sub_mbf.t 1633 4 0.24% 8 11 1632-1633 ../lib/math/bigint/t/with_sub.t 1628 4 0.25% 9 12 1627-1628 ../lib/
this is now handled correctly.
the existing behaviour when localising tied arrays and hashes is wrong, and will be changed in a future release, so do not rely on the existing behaviour.
examples include any platform using sfio, and compaq/tandem’s nonstop-ux.
· "digest::md5" for calculating md5 digests (checksums) as defined in rfc 1321, from gisle aas, has been added.
· perl 5.6.0 parsed m/\x{ab}/ incorrectly, leading to spuri- ous warnings.
· "pack() / unpack()" can now process  the perl internal numeric types: ivs, uvs, nvs-- and also long doubles, if  supported by the platform.
stable means that ties are  broken to preserve the original order of appearance in the input array.
[561] ·  regular expression debug output (whether through "use re  ’debug’" or via "-dr") now looks better.
error file = try.c, line = 3 a semicolon is expected at this point.
if this test fails, it indicates that your libc (c library) is not threadsafe.
linux with glibc 2.2.5 fails t/op/int subtest #6 with -duse64bitint
quicksort  was rescued by implementing a sort pragma to control aspects of the sort.
platform specific changes and fixes · bsdi 4.
this results hopefully in more accurate  numbers.
another change related to the  architecture name is that "-64all" (-duse64bitall, or "maximally  64-bit") is appended only if your pointers are 64 bits wide.
·  "pack(’u0a*’, ...)" can now be used to force a string to  utf-8.
· "qw(a\\b)" now parses correctly as  ’a\\b’: that is, as three char- acters, not four.
· "perl -d:module=arg,arg,arg" now works  (previously one couldn’t pass in multiple arguments.)
because in effect storable does serial- isation of perl data  structures, with it you can also clone deep, hierarchical datastructures.
· use of thegprof tool to profile perl has been  documented in perlhack.
the major reason for the discontinuity is the new io architecture called perlio.
[561] ·warnings::enabled() now reports the state of $^w correctly if the caller isn’t using lexical warnings.
when there  is no name con- flict, you can omit the "in" from the block name  (e.g. "\p{braillepat- terns}"), but to be safe, it’s probably  best to always use the "in").ref(...)
the only remaining use of "use utf8" is when the perl  script itself has been written in the utf-8 encoding of unicode.
[561]deprecations · the semantics of bless(ref, ref) were unclear and until someone proves  it to make some sense, it is forbidden.
it now correctly uses the  supplied port number as is.
this is a known bug in freebsd 4.5’s readdir _r(), it has been fixed in freebsd 4.6 (see perlfreebsd (readme.freebsd)).freebsd failing locale test 117 for iso 8859-15 locales the iso 8859-15
if that doesn’t help, you may have to try removing all the .bundle files from beneath /library/perl, and again "make install"-ing.
bad switch yylook 79bad switch yylook 79bad switch yylook 79bad switch yylook 79#ifdef
[561] ·readline() on files opened in "slurp" mode could return an extra "" (blank line) at the end in certain situations.
unicode can be used in hash keys, unicode in regu- lar expressions should work now, unicode in tr/// should work now, uni- code in i/o should work now.
(redhat linux/alpha  with gcc 3.1 reported no problems, as did linux 2.4.18 with gcc 2.95.4.)
safe signals perl used to be fragile in that signals arriving at inopportune moments could  corrupt perl’s internal state.
· "tie::refhash::nestable", by edward avis, allows storing hash ref- erences (unlike the standard tie::refhash)
· support for the "clone" special subroutine had been added.
· the dg/ux platform now supports 5.005-style threads.
the  return value ofcwd::fastcwd() is now tainted.
mac os x dyld undefined symbols if after installing perl 5.8.0 you are getting warnings about missing symbols, for example dyld: perl undefined symbols _perl_sv_2pv _
(in tru64, it is preferable to use the bundled c compiler.)amigaos perl 5.8.0 doesn’t build in amigaos.
in 5.10, it is expected to be removed.
if you intend to run only on fat (or if using anydbm_file on fat), run configure with the -ui_ndbm and -ui_dbm options to prevent ndbm_file and odbm_file being built.
you can see the list of changes in the 5.6.1 release (both  from the 5.005_03 release and the 5.6.0 release) by reading perl561delta.
in particu- lar, however, this allows variable attributes  to be useful for "tie" interfaces, which was a deficiency of earlier  releases.
[561] · "perlivp" is a new installation verification procedure utility for running any time after installing perl.
this will default in 5.10.
[561] · pos() did not return the correct value within s///ge in earlier versions.
"our" can now have an experimental optional attribute "unique" that affects how global variables are shared among multiple interpreters, see "our" in perlfunc.
· use of the  "/c" match modifier without an accompanying "/g" modi- fier  elicits a new warning: "use of /c modifier is meaningless without  /g".
· you can now build  a really minimal perl called microperl.
the warnings issued by file::find now belong to their own  category.
use mime::quotedprint; $encoded = encode_qp("\xde\xad\xbe\xef"); $decoded = decode_qp($encoded); print $encoded, "\n"; # "=de=ad=be=ef\n" print $decoded, "\n"; # "\xde\xad\xbe\xef\n" see also perlio::via::quotedprint.
[561] · "perlivp" is a new installation verification procedure  utility for running any time after installing perl.
[561+],  pod::parser, storable, term::ansicolor, test, text-tabs+wrap.
·mkdir() now ignores trailing slashes in the directory name, as  man- dated by posix.
tools 2.0.1 or later.
the fatal error has been downgraded to an optional warning: possible unintended interpolation of @example in string this warns you that "fred@example.com" is going to turn into "fred.com" if you don’t backslash the "@".
on linux plat-  forms the /bin/mail program had an undocumented feature which when com- bined  with suidperl gave access to a root shell, resulting in a serious compromise  instead of reporting the exploit attempt.
see perlmod modules and pragmata new modules and pragmata ·  "attribute::handlers", originally by damian conway and now main-
turning off "clrfness" is no  longer enough to make a stream truly binary.
·  "h2xs" now produces a template readme.
t/op/alarm.t ext/time/hires/hires.t lib/
the re engine found in perl 5.6.0 accidentally pessimised certain kinds of simple pattern matches.
· for  developers interested in enhancing perl’s unicode capabilities: almost  all the ucd files are included with the perl distribution in thelib/unicore subdirectory.
· if building threaded perl, you may get compilation warning from pp_sys.c: "pp_sys.c", line 4651.39: 1506-280 (w) function argument assignment between types "unsigned char*" and "const void*" is not allowed.
how- ever, the lvalue subroutine feature  still remains experimental.
[561] · mac os x (or darwin) should now be able to build perl even on hfs+ filesystems.
in  multi-cpu boxes, there are some problems with the i/o buffering: some output  may appear twice.
use switch; switch ($val) { case 1 { print "number 1" } case "a" { print "string a" } case [1..10,42] { print "number in list" } case (@array) { print "number in list" } case /\w+/ { print "pattern" } case qr/\w+/ { print "pattern" } case (%hash) { print "entry in hash" } case (\%hash) { print "entry in hash" } case (\&sub) { print "arg to subroutine" } else { print "previous case not true" } } see switch.
many of these changes have been  further developed since 5.6.1 was released, those are marked  "[561+]".
\$bar[1]" will assign "undef" to $bar[1] (assuming  that it didn’t exist before), but for tied/magical arrays and hashes such  autovivification does not happen because there is currently no way to catch the  reference creation.
· the tainting behaviour ofsprintf() has been rationalized.
currently, there is no good solution for the problem, but configure now provides appropriate non- largefile ccflags, ldflags, libswanted, and libs in the %config hash (e.g., $config{ccflags_nolargefiles}) so the extensions that are having problems can try configuring themselves without the largefileness.
note that breaking out from potentially blocking operations should still work, though.
(well, at least  the built-in attributes.) · dthr and djsp have been obsoleted; the  former removed (because it’s a no-op) and the latter replaced with dsp.
pdl failing some tests use pdl 2.3.4 or later.
starting with 5.6.1, when perl now sees an "@" sign in a double-quoted string, italways attempts to interpolate an array, regardless of whether or not the array has been used or declared already.
in newer aix releases, this has been solved by linking perl with the libc_r library, but unfortunately in aix 4.2 the said library has an obscure bug where the various functions related to time (such astime() and gettimeofday()) return broken values, and therefore in aix 4.2 perl is not linked against libc_r.
· lexicals ii: lexicals leaked at file scope into subroutines that  were declared before the lexicals.
suidperl is neither  built nor installed by default.
· since perl 5.8 is not binary-compatible with previous releases of perl, configure no longer suggests including the 5.005 modules in @inc.
for the full list of the avail- able apis see perlapi.
this change leads to often  slightly faster and always less lossy arith- metics.
this may or may not be a problem  with ancient tcp/ip stacks of vms: we do not know since we weren’t able  to test perl in such configurations.
· the rules for allowing underscores (underbars) in numeric constants have been relaxed and simplified: now you can have an underscore simplybetween digits.
it will be called in the context of the new thread, so all modifications are made in the new area.
vms there should be no reported test failures with a default configuration, though there are a number of tests marked todo that point to areas needing further debugging and/or porting work.
· mpe/ix mpe/ix update after perl 5.6.0.
(the case-insensitivity used to confuse the perl  build process.)
how- ever, the lvalue subroutine feature still remains experimental.
perl_get_sv you probably have an old pre-perl-5.8.0 installation (or parts of one) in /library/
the _quicksort and _mergesort subpragmas are heavy-handed ways to select the underlying implementation.
now  has a split personality: if possible, an xs extension is used, (this will  hopefully be faster, more secure, and more robust) but if not possible, the  familiar perl implementation is used.
· tru64 (aka digital unix, aka dec  osf/1)
· warnings relating to the use interpreter threads and their shared data have been added.
[561] · sys::syslog ignored the "log_auth" constant.
the "plugins" are named as usual, for example "per- lio::via::quotedprint".
· "if", by ilya zakharevich, is a new pragma for conditional  inclu- sion of modules.
; note for ebcdic users: the pseudo layer ":utf8" is erroneously named for you since it’s not utf-8 what you will be getting but instead utf-ebcdic.
this did not work reliably in previous releases.
· "h2xs" now uses "devel::ppport" for better portability between dif- ferent versions of perl. ·
because of  the large number of tests, running the regression suite will take considerably  longer time than it used to: expect the suite to take up to 4-5 times longer to  run than in perl 5.6.
a number of other properties are now supported, including "\p{l&}", "\p{any}" "\p{assigned}", "\p{unassigned}", "\p{blank}"
[561] ·sort() is also fully reentrant, in the sense that the sort function can itself callsort().
reg_expand_sz keys are now allowed in registry  settings used by perl.
but that means if you sort the same large array twice, ties may be broken in different ways.
· hashes now use bob jenkins "one-at-a-time" hashing key algorithm ( http://burtleburtle.net/bob/hash/doobs.html ).
· perlpod has been rewritten to be clearer and to record the  best practices gathered over the years.
·printf() no longer resets the numeric  locale to "c".
they are now magnitudes faster, and they support various  bignum libraries such as gmp and pari as their backends.
· lstat(filehandle) now gives a warning because the operation makes no sense.
see the "sort" pragma for information.
this algorithm is reasonably  fast while producing a much better spread of values than the old hashing  algorithm (originally by chris torek, later tweaked by ilya zakharevich).
eastern asian perl users are now welcomed in their own languages: readme.jp (japanese), readme.ko (korean), readme.cn (simplified chi- nese) and readme.tw (traditional chinese), which are written in normal pod but encoded in euc-jp, euc-kr, euc-cn and big5.
there is a make target called "perl.gprof"  for generating a gprofiled perl executable.
see http://www.plover.com/~mjd/perl/at-error.html for more details about the history here.
·sort() arguments are now compiled in the right wantarray context (they were accidentally using the context of thesort() itself).
"h2xs" uses the new extutils::constant module which will affect newly created extensions that define constants.
this improves the portability of system(@args) by avoiding the need for win- dows "cmd" shell specific quoting in perl programs.
more details  are in "performance enhancements".
it now correctly uses the supplied port number as is.
use locale::country; $country = code2country(’jp’); # $country gets ’japan’ $code = country2code(’norway’); # $code gets ’no’ see locale::constants, locale::country, locale::currency, and locale::language.
· the "utf8::" name space (as in the pragma) provides various perl- callable functions to provide low level access to perl’s internal unicode representation.
use locale::country; $country =  code2country(’jp’); # $country gets ’japan’ $code =  country2code(’norway’); # $code gets ’no’ see  locale::constants, locale::country, locale::currency, and locale::language.
they provide the codes for various locale  standards, such as "fr" for france, "usd" for us dollar,  and "ja" for japanese.
mac os x dyld undefined symbols if after installing perl 5.8.0 you are  getting warnings about missing symbols, for example dyld: perl undefined  symbols _perl_sv_2pv _
the output  is highly customisable.
· the current user-visible implementation of pseudo-hashes (the weird use of the first array element) is deprecated starting from perl 5.8.0 and will be removed in perl 5.10.0, and the feature will be implemented differently.
note,  however, that their prototype (as given by  "prototype("core::chomp")" is undefined, because it cannot  be expressed and therefore one cannot really write replacements to override  these builtins.
the suidperl functionality is most probably going to be  removed in perl 5.10.
· "math::bigrat" for big rational numbers, to accompany math::bigint and math::bigfloat, from tels.
for careful hackers only.
these are not new failures--perl 5.005_0x has the same bugs, but didn’t have these tests.
· "unicode::normalize", by sadahiro tomoyuki, implements the  various unicode normalization forms.
note, however, that their prototype (as given by "prototype("core::chomp")" is undefined, because it cannot be expressed and therefore one cannot really write replacements to override these builtins.
· use of the "/c" match modifier without an accompanying "/g" modi- fier elicits a new warning: "use of /c modifier is meaningless without /g".
more appropriate mechanisms for  selecting the imple- mentation exist, but they wouldn’t have arrived in  time to save quicksort.
· perlmodstyle is a style guide for writing modules.
the fatal error has been downgraded to an optional warning:  possible unintended interpolation of @example in string this warns you that  "fred@example.com" is going to turn into "fred.com" if you  don’t backslash the "@".
new unicode semantics (no more "use utf8", almost) previously in perl 5.6 to use unicode one would say "use utf8" and  then the operations (like string concatenation) were unicode-aware in that  lexical scope.
( 3,1,4,1,5,9 ); a numerical sort of the digits will yield (1,1,3,4,5,9), as expected.
see tie::file. · "tie::memoize", by ilya zakharevich, provides on-demand loaded hashes.
updated and improved modules and pragmata · the following independently supported modules have been updated to the newest versions from cpan: cgi, cpan, db_file, file::spec, file::temp, getopt::long, math::bigfloat, math::bigint, the podla- tors bundle (pod::man, pod::text), pod::latex
layers can be specified at open time via 3-arg form of open:  open($fh,’>:crlf :utf8’, $path)  â”‚â”‚ ... or on already opened handles via  extended "binmode": binmode($fh,’:encoding(iso-8859-7)’);  the built-in layers are: unix (low level read/write), stdio (as in previous  perls), perlio (re-implementation of stdio buffering in a portable manner),  crlf (does crlf  "\n" translation as on win32, but available  on any platform).
the _quicksort and _mergesort subpragmas are heavy-handed ways to select  the underlying implementation.
[561] · some "not a number" warnings introduced in 5.6.0 eliminated to be more compatible with 5.005.
they provide the codes for various locale standards, such as "fr" for france, "usd" for us dollar, and "ja" for japanese.
· db_file now supports newer berkeley db versions, among other improvements.
·sort() arguments are now compiled in the right wantarray context (they were  accidentally using the context of thesort() itself).
see perluniintro for more infor- mation about utf-8.
· carp now has better  interface documentation, and the @carp_not interface has been added to get  optional control over where errors are reported independently of @isa, by ben  tilly.
it will be called in  the context of the new thread, so all modifications are made in the new area.
it also sends the bug report to  perl.org, not perl.com. · "perlcc" has been rewritten and its  user interface (that is, com- mand line) is much more like that of the unix c  compiler, cc.
the following tests are known to fail in solaris x86 with perl config- ured to use 64 bit integers: ext/data/dumper/t/dumper.............failed at test 268 ext/devel/peek/peek..................failed at test 7super-ux (nec sx)
file handles can translate character encodings from/to perl’s internal unicode form on read/write via the ":encoding()" layer.
for most uses, the frontend filter::simple is to be preferred.
see threads, threads::shared, and perlthrtut.
the glibc release 2.2.2 is known to have fixed themodfl() bug. ·
the bug has been fixed.
posix-style signals are now emulated much better on vms versions prior to 7.0.
· data::dumper now  has an option to sort hashes.
utility changes · emacs perl mode (emacs/cperl-mode.el) has been updated to version 4.31.
perl installation leaves libnet unconfigured; uselibnetcfg to con- figure it.
modifying $_ inside for(..) for (1..5) { $_++ } works without complaint.
perl used to have such a subroutine, but that is no more the case.
the following tests are known to fail on super-ux: op/64bitint...........................failed tests 29-30, 32-33, 35-36 op/arith..............................
pack/unpack d/f recycled the undocumented pack/unpack template letters d/f have been recycled for better use: now they stand for long double (if supported by the platform) and nv (perl internal floating point type).
· if your environment variables (lc_all, lc_ctype, lang) look like you want to use utf-8 (any of the the variables match "/utf-?8/i"), your stdin, stdout, stderr handles and the default open layer (see open) are marked as utf-8.
· in many platforms, the vendor-supplied ’cc’ is too stripped-down to build perl
see "installation and configuration improvements" for the effects of perlio on your architecture name.
borland c++ v5.5 is now a supported compiler that can build perl.
compiling perl using the 64-bit platform sdk tools is now supported.
so, as you add more  and more digits of pi, the order in which the sorted even and odd digits appear  will change.
note that after this perl really does assume that everything is utf-8: for example if some input handle is not, perl will probably very soon complain about the input data like this "malformed utf-8 ..." since any old eight-bit data is not legal utf-8.
[561] · line renumbering with eval and "#line" now works.
[561] · earlier perls treated "sub foo (@bar)" as equivalent to "sub foo (@)".
perl 5.6.1 still works for amigaos (as does the the 5.7.2 devel- opment release).beos
[561] selected bug fixes numerous memory leaks and uninitialized memory accesses have been hunted  down.
for example, while the script "latin" includes all the latin  characters and their various diacritic-adorned versions, it does not include  the various punctuation or digits (since they are not solely  "latin").
· trying to use unicode characters on an i/o stream without marking the  stream’s encoding (usingopen() or binmode()) will cause  "wide character" warnings.
· the following builtin functions are now overridable:each() , keys(), pop(), push(), shift(), splice() , unshift().
[561+] (5.6.1 has ucd 3.0.1.)
· b::deparse has been  significantly enhanced by robin houston.
compiling with gcc still not recommended because buggy code results, even with gcc 2.95.2.
· the  $config{byteorder} (and corresponding byteorder in config.h) was previously  wrong in platforms if sizeof(long) was 4, but sizeof(iv) was 8.
for  careful hackers only.
currently only "printf()" is tested: how to output vari- ous basic data types from xs. ·
attributes for "my" variables now handled at run-time the "my expr : attrs" syntax  now applies variable attributes at run-time.
· "unicode::ucd" offers a querying interface to the unicode character database.
see perldebguts for more complete information.
the suggested cure is to upgrade your solaris.
the byteorder was only sizeof(long) bytes long (1234 or 4321), but now it is correctly sizeof(iv) bytes long, (12345678 or 87654321).
this feature helps in writing internation- alised software, and in general when the order of the parameters can vary.
there are now about 69 000 individual tests (spread over about 700 test scripts), in the regression suite (5.6.1 has about 11 700 tests, in 258 test scripts)
irix numerous  compilation flag and hint enhancements; accidental mixing of 32-bit and 64-bit  libraries (a doomed attempt) made much harder.
[561] · can nowsend() from all threads,  not just the first one.
· after years of trying, suidperl is considered to be too complex to ever be considered truly secure.
[561+] · perlrequick is a regular expressions  quick-start guide.
(eg by reading/proc/self/exe on  linux,/proc/curproc/file on freebsd) · a new variable,  "${^taint}", indicates whether taint mode is enabled.
= 1; · localised hash elements (and %env) are correctly unlocalised to not exist, if they didn’t before they were localised.
in particu- lar, however, this allows variable attributes to be useful for "tie" interfaces, which was a deficiency of earlier releases.
support on ebcdic still spotty
· warnings relating to the use of the new restricted  hashes feature have been added.
hp-ux lib/posix subtest 9 fails when lp64-configured
since the new code is more correct (if you have two constants where the first one is a prefix of the second one, the first constantnever got defined), less lossy (it uses integers for integer constant, as opposed to the old code that used floating point numbers even for integer con- stants), and slightly faster, you might want to consider regenerat- ing your extension code (the new scheme makes regenerating easy).
the gconvert macro ($config{d_gconvert}) used by perl for stringi- fying floating-point numbers is now more picky about using sprintf %.*g rules for the conversion.
[561+], pod::parser, storable, term::ansicolor, test, text-tabs+wrap.
(perlu- nicode is more of a detailed reference and background information) · perlutil explains the command line utilities packaged with the perl distribution.
· because perlio is now the default on most platforms, "-perlio" doesn’t get appended to the $config{archname} (also known as $^o) anymore.
other future pos- sibilities include perlio::array and perlio::code.
however, further security vulnerabilities are, unfortu- nately, always possible.
the suidperl functionality is most probably going to be removed in perl 5.10.
[[.cc.]] and [[=c=]] are still recognised  but now cause fatal errors.
[561+] · a failed (pseudo)fork  now returns undef and sets errno to eagain.
if you run sort { $a  $b } ( 1 .. $n , 1 .. $n ); (something  you might approximate if you wanted to merge two sorted arrays using sort),  doubling $n doesn’t just double the quicksort time, itquadruples it.
therestricted hashes interface is expected to be the replacement interface (see hash::util).
the comparison block is now run in scalar context, and the argu- ments to be sorted are always provided list context.
this may cause new warn- ings when modules are being  installed.
the default on vax (d_float) has not changed.
· lexical warnings now propagating  correctly between scopes and into "eval "..."".
· "text::balanced", by damian conway, has been added, for extracting delimited text sequences from strings.
the exploit attempt reporting feature has been completely removed from perl 5.8.0 (and the maintenance release 5.6.1, and it was removed also from all the perl 5.7 releases), so that particular vulnerability isn’t there anymore.
you can ignore the error, but it does cause a slight  problem: you cannot fully benefit from the h2ph utility (see h2ph) that can be  used to convert c headers to perl libraries, mainly used to be able to access  from perl the constants defined using c preprocessor, cpp.
since perlio is a drop-in  replacement for stdio at the source code level, this shouldn’t be that  drastic a change.
the socketpair tests are known to be unhappy in sco 3.2v5.0.4: ext/socket/socketpair.t...............failed tests 15-45solaris 2.5
borland c++ v5.5 is now a  supported compiler that can build perl.
/anydbm_file.t 2 512 12 2 16.67% 1 4 ../lib/
if you find what you think is a bug, you might check the articles recently posted to the comp.lang.perl.misc newsgroup and the perl bug database at http://bugs.perl.org/ .
· in  sys::syslog there is now a failover mechanism that will go through alternative  connection mechanisms until the message is suc- cessfully logged.
for example printf "%2\$s %1\$s\n", "foo", "bar"; will print "bar foo\n".
· net::ping has been considerably  enhanced by rob brown: multihoming is now supported, win32 functionality is  better, there is now time measuring functionality (optionally high-resolution  using time::hires), and there is now "external" protocol which uses  net::ping::external module which runs your external ping utility and parses the  output.
the following tests are known to fail in solaris  x86 with perl config- ured to use 64 bit integers:  ext/data/dumper/t/dumper.............failed at test 268  ext/devel/peek/peek..................failed at test 7super-ux (nec sx)
and, ironically, this mergesort does particularly well where quicksort goes quadratic: mergesort sorts (1..$n, 1..$n) in o(n) time.
it seems that for some reason "make install" doesn’t always completely overwrite the files in /library/perl.
atheos (  http://www.atheos.cx/ ) is a new platform.
· b::deparse has been significantly enhanced by robin houston.
[561+] · right-hand side magic (gmagic)  could in many cases such as string concatenation be invoked too many times.
it can be used for example for vendor add-ons without dis- turbing perl’s own library directories.
· usingsplice() past the end of an array now causes a warning.
· file handles can translate character  encodings from/to perl’s internal unicode form on read/write via the  ":encoding()" layer.
the constant and embed are probably problems in the tests (since they test perl’s ability to build extensions, and that seems to be working reasonably well.)unicode
according to perl- bench, this change has not affected the overall speed of  perl.
(this problem didn’t affect windows plat- forms.)
if this seems to be the case and  ’cc’ does not seem to be the gnu c compiler ’gcc’, an  automatic attempt is made to find and use ’gcc’ instead.
the new algorithm  "one-at-a-time" produces a different hashed key order.
this means that additional warnings may now show up when compiling xs code. ·
· extutils::makemaker now uses file::spec internally, which hopefully leads to better portability.
self-tying of scalars and io thingies  works.ext/threads/t/libc
see devel::ppport. ·  "digest", frontend module for calculating digests (checksums), from  gisle aas, has been added.
g_float is still avail- able as a configuration option.
this implementation also allows later systems to call  "kill" from within a signal handler.
alpha, potentially breaking binary compatibil- ity with external libraries or  existing data.
you can enable/disable them with "use/no warnings ’file::find’;".
carp was sometimes affected by this problem.
this change will probably break backward compatibility with  compiled mod- ules.
perl programmers reference guide perl58delta(1) name perl58delta - what is new for perl v5.8.0 description
it is the little brother of "-t": instead of dying on taint violations, lexical warnings are given.
· concatenation with the "." operator or via variable inter- polation, "eq", "substr", "reverse", "quotemeta", the "x" operator, substitution with "s///", single-quoted utf-8, should now work.
· autoloader can  now be disabled with "no autoloader;".
additional bonuses are that the worst case behaviour ofsort() is now better (in computer science terms it now runs in time o(n log n), as opposed to quicksort’s theta(n**2) worst-case run time behaviour), and thatsort() is now stable (meaning that elements with identical keys will stay ordered as they were before the sort).
· a new optional location for perl libraries, otherlibdirs, is avail-  able.
so sort { ($a % 2)  ($b % 2) } (3,1,4,1,5,9); will yield (4,3,1,1,5,9), guaranteed.
sometimes this problem may also indicate a partial perl 5.8.0  installa- tion, see "mac os x dyld undefined symbols" for an example  and how to deal with it.
# this used to print, but not  now.
[561]  · dprofpp -r didn’t work.
(5.7.0  came out before 5.6.1: the development branch 5.7 released ear- lier than the  maintenance branch 5.6)
see fil- ter::util::call.
if your existing programs  depends on the underlying implementation, consider using class::pseudohash from  cpan.
no longer gets corrupted, and  all debugger output now goes correctly to the socket if remoteport is set.
your  bug report, along with the output of "perl -v", will be sent off to  perlbug@perl.org to be analysed by the perl porting team.
removing directories with ’no  lib’ now works.
the performance has been improved for common scenarios.
mac os x please remember to set your environment variable  lc_all to "c" (setenv lc_all c) before running "make test"  to avoid a lot of warnings about the broken locales of mac os x.
self-tying problems self-tying of arrays and hashes is broken in rather deep and hard-to- fix ways.
· self-ties of arrays and hashes are not  supported and fatal errors will happen even at an attempt to do so.
· io::socket::inet failed to open the  specified port if the service name was not known.
[561+]  · perlebcdic contains considerations for running perl on ebcdic plat-
performance enhancements · map() could get pathologically slow when the result list  it gener- ates is larger than the source list.
[561] · utime now supports "utime undef, undef, @files" to change the file timestamps to the current time.
· "extutils::constant", by nicholas clark, is a new tool for exten- sion writers for generating xs code to import c header constants.
[561] · some "not a number" warnings introduced in 5.6.0  eliminated to be more compatible with 5.005.
·  "perlbug" is now much more robust.
· "h2xs" now produces a template readme.
see perluniintro for introduction  and perlunicode for details.
·  "xs::apitest", by tim jenness, is a test extension that exercises xs  apis.
· z/os (formerly known as os/390, formerly known  as mvs oe) now has support for dynamic loading.
a failure (think chdir(some_ function()) can lead into unintended chdir() to the home  directory, therefore this behaviour is deprecated.
see pod::text::overstrike.
· boms (byte order marks) at the beginning of perl files (scripts, modules) should now be transparently skipped.
[561] file access tests now use current process privileges rather than the user’s default privileges, which could sometimes result in a mismatch between reported access and actual access.
in multi-cpu boxes, there are some problems with the i/o buffering: some output may appear twice.
· unadorned dump() will now give a warning suggesting to use explicit core::dump() if that’s what really is meant.
(bsd_glob() does still sort platform natively,  ascii or ebcdic, unless glob_alphasort is specified.)
similarly, building the digest::md5 extension has been known to fail with "*** termination code 139 (bu21)".
perl5db.t was also added  to test the changes, and as a placeholder for further tests.
· better unc path handling under  ithreads.
carp was  sometimes affected by this problem.
· boms (byte order marks) at the beginning of  perl files (scripts, modules) should now be transparently skipped.
see net::ftp, net::nntp,  net::ping (not part of libnet, but related), net::pop3, net::smtp, and  net::time.
see "localising tied arrays and hashes is broken".
· the $config{byteorder} (and corresponding byteorder in config.h) was previously wrong in platforms if sizeof(long) was 4, but sizeof(iv) was 8.
the "threads::shared::queue"  and "threads::shared::semaphore" were renamed as  "thread::queue" and "thread::semaphore" just before 5.8.0.
·  "switch", by damian conway, has been added.
alpha systems with old gccs fail several tests if you see op/pack, op/pat,  op/regexp, or ext/storable tests failing in a linux/alpha or *bsd/alpha,  it’s probably time to upgrade your gcc.
· autoloader can now be disabled with "no autoloader;".
[561] (along with their "\p{...}" versions,  of course).
the tainting of %env elements via "keys" or  "values" was previously unimplemented.
anonymous temporary files are available without need to ’use  file- handle’ or other module via open($fh,"+>", undef)  â”‚â”‚ ...
· class::struct now assigns the array/hash element if the accessor is  called with an array/hash element as thesole argument.
· documentation on how to use  the perl source repository has been added toporting/repository.pod.
[561] · the debugger (perl5db.pl) has been modified to present a more con- sistent commands interface, via (commandset=580).
compiling perl using the 64-bit platform sdk  tools is now supported.
· malformed unicode encodings (utf-8 and utf-16) cause a lot of warn- ings, as does trying to use utf-16 surrogates (which are unimple- mented).
if configure finds that gcc was built for a differ- ent operating  system release than is running, it now gives a clearly visible warning that  there may be trouble ahead.
· previous versions of perl and some readings of some sections of camel iii implied that the ":raw" "discipline" was the inverse of ":crlf".
it also correctly changes directories when chasing symbolic links.
(pure perl modules should continue to work.)
the exact numbers depend on the plat- form and perl configuration used.
· our() variables  will not cause bogus "variable will not stay shared" warnings.
· the properties \p{blank} and \p{spaceperl} have been added.
· "threads::shared", by arthur bergman, allows data sharing  for interpreter threads.
the following  tests are known to fail in mac os x 10.1.5 because of buggy (old)  implementations of berkeley db included in mac os x: failed test stat wstat  total fail failed list of failed  -------------------------------------------------------------------------  ../ext/db_file/t/db-btree.t 0 11 ?? ??
multithreaded code should be migrated to  the new ithreads model (see threads, threads::shared and perlthrtut).
cygwin "unable to remap" for example when building the tk extension for cygwin, you may get an error  message saying "unable to remap".
see extutils::makemaker for more details. ·
the worst bug (now fixed)  was that a pid of -1 would cause a wildcard search of all processes on the  system.
· large unsigned numbers (those above 2**31) could sometimes lose their unsignedness, causing bogus results in arithmetic operations.
this is a known bug in freebsd 4.5’s readdir _r(), it has been fixed in freebsd 4.6 (see perlfreebsd  (readme.freebsd)).freebsd failing locale test 117 for iso 8859-15 locales the iso 8859-15
· since perl 5.8 is not binary-compatible  with previous releases of perl, configure no longer suggests including the  5.005 modules in @inc.
the even and odd numbers appear in the output in the same order  they appeared in the input.
use digest::md5 ’md5_hex’; $digest = md5_hex("thirsty camel"); print $digest, "\n"; # 01d19d9d2045e005c3f1b80e8b164de1 note: the "md5" backward compatibility module is deliberately not included since its further use is discouraged.
the problem has been corrected.
you won’t notice this for small arrays, but youwill notice it with larger arrays, and you may not live long enough for the sort to complete on arrays of a million elements.
· lstat(filehandle) now  gives a warning because the operation makes no sense.
[561+] · the amdahl uts unix mainframe platform is now supported.
· perlmodstyle is  a style guide for writing modules.
· vms see "socket extension dynamic in vms" and  "ieee-format floating point default on openvms alpha" for important  changes not otherwise listed here.chdir() now works better despite a crt  bug; now works with multi- plicity (see install); now works with perl’s  malloc.
see uni- code::collate.
· regular expressions on references and  overloaded scalars now work.
the magic constants  (e.g. ’p’) have been macrofied (e.g. "perl_magic_tied")  for better source code readability and maintain- ability.
the older methods, which build miniperl, are still available.
use  mime::base64; $encoded = encode_base64(’aladdin:open sesame’);  $decoded = decode_base64($encoded); print $encoded, "\n"; #  "qwxhzgrpbjpvcgvuihnlc2ftzq==" see mime::base64.
· aix should now work better with gcc, threads, and 64-bitness.
[561] · configure no longer includes the dbm libraries (dbm,  gdbm, db, ndbm) when building the perl binary.
the obsolete method of making a special (e.g., debugging) flavor of  perl by saying make libperl=libperld.a has been removed.
test 91 is known to fail on qnx6 (nto), because "sprintf ’%e’,0" incor- rectly produces 0.000000e+0 instead of 0.000000e+00.
building extensions can fail because of largefiles some extensions like mod_perl are known to have issues with  â€˜large- files’, a change brought by perl 5.6.0 in which  file offsets default to 64 bits wide, where supported.
the warnings are being worked on.
and, for sufficiently large slices of pi, the quicksort algorithm in perl 5.8 won’t return the same results even if reinvoked with the same input.
(implemented by jeffrey friedl, nick ing-simmons, and michael schw- ern.)
it converts pod data to formatted overstrike text.
[561] · mac os x (or darwin) should now be able to build  perl even on hfs+ filesystems.
brack- eted(), extract_quotelike(), extract _codeblock(), extract_vari- able() ,extract_tagged(), extract_multiple(), gen_delimited_pat(), and gen_ extract_tagged().
· the tr///c and tr///u  features have been removed and will not return; the interface was a mistake.
the "fields" pragma interface will remain available.
posix-style signals are now emulated much better on vms versions prior  to 7.0.
test 91 is known to fail on qnx6  (nto), because "sprintf ’%e’,0" incor-
· tru64 (aka digital unix, aka dec osf/1)
· perl 5.6.0 could  emit spurious warnings about redefinition ofdl_error() when statically building extensions into perl.
(previously perl always preferred floating point numbers in its math.)arrays now always interpolate into double-quoted strings [561] in double-quoted strings, arrays now interpolate, no matter what.
storable was originally created by raphael manfredi, but it is now maintained by abhijit menon-sen. storable has been enhanced to understand the two new hash features, unicode keys and restricted hashes.
you will need a thread library package installed.
see http://www.cpan.org/src/5.0/sperl-2000-08-05/sperl-2000-08-05.txt for more information.
· warnings relating to the use  interpreter threads and their shared data have been added.
[561] · less stack reserved per thread so that more threads can run concurrently.
· io::socket now has anatmark() method, which returns true if the socket is positioned at the out-of-band mark.
* perl now works on post-4.0  bsd/oses.
if configure finds that gcc was built for a differ- ent operating system release than is running, it now gives a clearly visible warning that there may be trouble ahead.
use in production environments is  discouraged.
modulus of unsigned numbers now works (4063328477 % 65535 used to return 27406, instead of 27047).
use mime::base64; $encoded = encode_base64(’aladdin:open sesame’); $decoded = decode_base64($encoded); print $encoded, "\n"; # "qwxhzgrpbjpvcgvuihnlc2ftzq==" see mime::base64.
· "perl -d:module=arg,arg,arg" now works (previously one couldn’t pass in multiple arguments.)
· the  test module has been significantly enhanced.
· betterchdir() return value for  a non-existent directory.
pack/unpack d/f recycled the undocumented pack/unpack template letters d/f have  been recycled for better use: now they stand for long double (if supported by  the platform) and nv (perl internal floating point type).
comparing with utf8 data does not magically upgrade non-utf8 data into utf8.
starting with 5.6.1, when perl now sees an  "@" sign in a double-quoted string, italways attempts to  interpolate an array, regardless of whether or not the array has been used or  declared already.
it is primarily used by "h2xs" to enhance portability of xs modules between different ver- sions of perl.
· "unicode::collate", by sadahiro tomoyuki, implements the uca (uni- code collation algorithm) for sorting unicode strings.
the rationale is that neither doeslocaltime(), and timelo- cal() and
one such  known spot are the "\p{}" and "\p{}" regu- lar expression
for example,  "system("nmake /nologo", @args)" will now attempt to run  the file "nmake /nologo" and will fail when such a file isn’t  found.
· "pod::text::overstrike", by joe smith, has been  added.
handlers, installing new handlers was not atomic.
· "do" followed by a bareword now ensures that this bareword isn’t a keyword (to avoid a bug where "do q(foo.pl)" tried to call a sub- routine called "q").
[561] · file::glob now supports  "glob_limit" constant to limit the size of the returned list of  filenames.
since there are not that many amiga devel- opers available, we could not get this fixed and tested in time for 5.8.0.
[561] · changed the posix character class "[[:space:]]" to include the (very rarely used) vertical tab character.
if one attempts the test on a fat install (or build) the following failures are expected: ../ext/
· the debugger can now show  lexical variables if you have the cpan module padwalker installed. ·
utility changes · emacs perl mode (emacs/cperl-mode.el) has been updated to  version 4.31.
the constant and embed are probably  problems in the tests (since they test perl’s ability to build  extensions, and that seems to be working reasonably well.)unicode support on ebcdic
· nonstop-ux is now supported.
· devel::peek now has an  interface for the perl memory statistics (this works only if you are using  perl’s malloc, and if you have compiled with debugging).
you can now  install coderef handlers, ’default’, and ’ignore’
though mostly working, unicode support still has problem spots on ebcdic platforms.
[561] · html files will now be installed in c:\perl\html instead of c:\perl\lib\pod\html ·
· "devel::ppport", originally by kenneth albanowski and now main- tained by paul marquess, has been added.
[561]  · multi-line matches like ""a\nxb\n" =~ /(?!\a)x/m"  were flawed.
9 3 33.33% 1-2 5  ../lib/math/bigint/t/bare_mbf.t 1627 4 0.25% 8 11 1626-1627  ../lib/math/bigint/t/bigfltpm.t 1629 4 0.25% 10 13 1628- 1629  ../lib/math/bigint/t/sub_mbf.t 1633 4 0.24% 8 11 1632-1633  ../lib/math/bigint/t/with_sub.t 1628 4 0.25% 9 12 1627-1628  ../lib/
this algorithm is reasonably fast while producing a much better spread of values than the old hashing algorithm (originally by chris torek, later tweaked by ilya zakharevich).
rupt internal state since the current operation is always finished first,
it also has been made more portable.
· "pack() / unpack()" can now process the perl internal numeric types: ivs, uvs, nvs-- and also long doubles, if supported by the platform.
the "plugins" are named as usual, for example  "per- lio::via::quotedprint".
see install for more details.
perl 5.6.1 still works for amigaos (as does the the 5.7.2 development release).
the following tests fail on 5.8.0 perl in beos personal 5.03: t/op/lfs............................failed at test 17 t/op/magic..........................failed at test 24 ext/fcntl/t/syslfs..................failed at test 17 ext/file/glob/t/basic...............failed at test 3 ext/posix/t/sigaction...............failed at test 13 ext/posix/t/waitpid.................failed at test 1 see perlbeos (readme.beos) for more details.
· hp-ux readme.hpux updated; "configure -duse64bitall" now  works; now uses hp-ux malloc instead of perl malloc. ·
you should migrate your code to ithreads.
(implemented by jeffrey friedl, nick ing-simmons, and  michael schw- ern.)
you can now override thereadline() builtin, and this overrides also the  angle bracket operator.
the perl header files no longer suppress common warnings from the microsoft visual c++ compiler.
for example, "\p{tibetan}" refers to the script, while "\p{intibetan}" refers to the block.
perl 5.8 unfortunately  does not build anymore on amigaos; this broke accidentally at some point.
as a stop-gap measure to avoid people from getting frus- trated at the mysterious results (core dumps, most often), it is for- bidden for now (you will get a fatal error even from an attempt).
· "list::util", by graham barr, is a selection of general-utility list subroutines, such assum(), min(), first(), and shuffle().
alternatively, you may want to use gnu make.
the pat, tr, and fold failures are genuine perl prob- lems caused by ebcdic (and in the pat and fold cases, combining that with unicode).
· using  the /g modifier insplit() is meaningless and will cause a warning.
this was caused by perl’s using the operating system libraries in a situation where the result of the string to number conversion is undefined: now perl consistently handles such strings as zero in numeric contexts.
see  http://www.cpan.org/src/5.0/sperl-2000-08-05/sperl-2000-08-05.txt for more  information.
[561] · lvalue subroutines can now return "undef" in list context.
· atheos ( http://www.atheos.cx/ ) is a new platform.
the latter is an article about software localization, originally published in the perl journal #13, and republished here with kind permission.
check your shared library path, and any shared perl libraries in those directories.
see perlunicode, utf8, and http://www.uni- code.org/unicode/reports/tr16/ for more information.
lib/ftmp-security tests warn ââ system possibly insecureââ don’t panic.
all thread tests  of perl now work, but not without adding someyield()s to the tests, so  while pth (and other userlevel thread implementations) can be considered to be  "working" with perl ithreads, keep in mind the possible  non-preemptability of the underlying thread implementa- tion.
in future releases this may become a fatal error.
aix dynaloading the aix dynaloading now uses in aix releases 4.3 and newer the native dlopen interface of aix instead of the old emulated interface.
· thewin32::setchildshowwindow() builtin  can be used to con- trol the visibility of windows created by child processes.
[561] ·posix::sleep() now returns the number of unslept seconds (as the posix standard  says), as opposed tocore::sleep() which returns the number of slept  seconds.
this is caused by darwin’s ufs not sup-  porting inode change time.
see perlmod modules and pragmata new modules and pragmata · "attribute::handlers", originally by damian conway and now main-
·  "enc2xs" is a tool for people adding their own encodings to the  encode module.
(to be exact,  the use64bitall is ignored.)
this parallels the behavior of "use" vis-a- vis "import".
use of "/g" with "split" elicits "use of /g modifier is meaningless in split".
the problem was caused by perl trying to report a suspected security exploit attempt using an external program, /bin/mail.
many of the bug fixes in 5.8.0 were already seen in the 5.6.1  mainte- nance release since the two releases were kept closely coordinated  (while 5.8.0 was still called 5.7.something).
· linux · long doubles should now work (see install).
english.t 2 512 54 2 3.70% 2-3 ../lib/filecache.t 5 1 20.00% 5  ../lib/filter/simple/t/data.t 6 3 50.00% 1-3  ../lib/filter/simple/t/filter_only.
"pod2html" now allows specifying a cache directory. ·
with the quicksort algorithm used to implement perl 5.6 and earlier, the order of ties is left up to the sort.
· mac os classic compilation of the standard perl distribution in mac  os classic should now work if you have the metrowerks development environment  and the missing mac-specific toolkit bits.
the new algorithm "one-at-a-time" produces a different hashed key order.
(pure perl modules should continue to  work.)
ness and has a workaround for it.
[561] · printing quads (64-bit integers)  with printf/sprintf now works without the q l ll prefixes (assuming you are on  a quad-capable platform).
the  warnings are being worked on.
if your platform supportsfork(), you can use the list form of "open" for pipes.
installation (or build) on ntfs works fine.
in some setups the former has been known to spuriously also try to run "make install".
[561] ·sort() has been changed to use primarily mergesort internally as opposed to the earlier quicksort.
this is a known bug in the glibc 2.2.5 with long long integers.
the vars pragma now supports declaring fully qualified variables.
this change will probably break backward compatibility with compiled mod- ules.
[561] · regular expression debug output (whether through "use re ’debug’" or via "-dr") now looks better.
· stratus vos the native build method requires at least vos release 14.5.0 and gnu c++/gnu
· lexical warnings now propagating correctly between scopes and into "eval "..."".
[561] · less stack reserved per thread so that  more threads can run concurrently.
in particular binmode(fh) - and hence ":raw" - will now turn off both crlf and utf-8 translation and remove other lay- ers (e.g. :encoding()) which would modify byte stream.
in newer aix releases, this has been  solved by linking perl with the libc_r library, but unfortunately in aix 4.2  the said library has an obscure bug where the various functions related to time  (such astime() and gettimeofday()) return broken values, and  therefore in aix 4.2 perl is not linked against libc_r.
however, if you just want to sort the even digits ahead of the odd ones, then what will sort { ($a % 2)  ($b % 2) } @digits; yield?
(  http://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=65612 )linux with sfio fails op/misc test 48
[561] · io::socket::inet has support for the reuseport option (if your platform supports it).
for example, if you really donât care about the order of even and odd digits, quicksort will run in o(n) time; it’s very good at sorting many repetitions of a small number of distinct elements.
since  in many systems the standard number parsing functions like  "strtoul()" and "atof()" seem to have bugs, perl tries to  work around their deficien- cies.
this version of perl  detects this broken-
because of the large number of tests, running the regression suite will take considerably longer time than it used to: expect the suite to take up to 4-5 times longer to run than in perl 5.6.
· the english module can now be used without the infamous performance hit by saying use english ’-no_match_vars’; (assuming, of course, that you don’t need the troublesome variables $â, $&, or $’.)
the "in"  or "is" prefix to names used with the "\p{...}" and  "\p{...}" are now almost always optional.
handlers can be specific to type (scalar, array, hash, or code), or specific to the exact compilation phase (begin, check, init, or end).
there may also be information at http://www.perl.com/ , the perl home page.
the older name is still available for  compatibility, but is deprecated.
· $autoload,sort(), lock(), and spawning subprocesses in multiple threads simultaneously are now thread-safe. ·