this parallels the behavior of usevis-a-vis import.
the only even digit, 4, will come first.
the only exception to this issunos? 4.x, which  needs them.
infinity is now recognized as a number.
on the other hand, perl will now execute code such as system("c:/program files/myapp/foo.exe", @args)correctly.
the module is contained  within tie::refhash.
any encoding supported by encode module is also available to the ``:encoding()''
unicode::normalize, by sadahiro tomoyuki, implements  the various unicode normalization forms.
[561] xsubpp now supports the out keyword.
open is a new pragma for setting the default i/o layers  for open().
perlmodstyle is a style guide for writing modules.
eventually, the problem gets whittled down to one that fits in the cache, from which point it benefits from the increased memory speed.
in many platforms, the vendor-supplied 'cc' is too stripped-down to  build perl (basically, 'cc' doesn't do ansi c).
other future possibilities includeperlio? ::array and perlio?
tie::memoize, by ilya zakharevich, provides on-demand loaded hashes.
$0now works (as much as possible; see the perlvar manpage for details).
(the case-insensitivity used to confuse the perl build process.)
chop(@list)in list context returned the characters chopped in reverse order.
this file is supposed to be used by hints file writers for architecture-wide changes (as opposed to config.over which is for site-wide changes).
the debugger can now show lexical variables if you have the cpan modulepadwalker?
some platforms that used to use gcvt may now resort  to the slower sprintf.
[561] wince? is now supported.
it also  correctly changes directories when chasing symbolic links.
if you have used that feature to disallow all but fully qualified variables, use strict;instead.
use switch; switch ($val) {
file::glob::glob() has been renamed to file::glob::bsd_glob() because the name clashes with the builtin glob().
more details are inperformance enhancements.
a version of net::ping::external is available in cpan.
it does not taint the result of floating point formats anymore, making the behaviour consistent with that of string interpolation.
../ext/ndbm_file/ndbm.t 13 3328 71 59 83.10% 1-2 4 16-71 ../ext/
previously the behaviour was unspecified.
the threads::shared::queueand threads::shared::semaphorewere renamed as thread::queueand thread::semaphorejust before 5.8.0.
environment variable (for passing command line arguments to perl) didn't work for more than a single group of options.
use utf8, almost) latinincludes all the latin characters and their various diacritic-adorned versions, it does not include the various punctuation or digits (since they are not solely latin).
splice @_, 0, 2) { s/$from/$to/g; } }; 1; # in user's code: use myfilter qr/red/ => 'green'; print "red\n"; # this code is filtered, will print "green\n" print "bored\n"; # this code is filtered, will print "bogreen\n" no myfilter; print "red\n"; # this code is not filtered, will print "red\n" file::temp, by tim jenness, allows one to create temporary files and directories in an easy, portable, and secure way.
the lexical warnings category ``deprecated'' is no longer a sub-category of the ``syntax'' category.
they wanted a literal $sign.
the following builtin functions are now overridable: each(), keys(), pop(), push(), shift(), splice(), unshift().
the worst bug (now fixed) was that a pid of -1 would cause a wildcard search of all processes on the system.
storable/t/downgrade.t 12 3072 169 12 7.10% 14-15 46-47 78-79 110-111 150 161 ../lib/extutils/t/constant.t 121 30976 48 48 100.00% 1-48 ../lib/extutils/t/embed.t 9 9 100.00% 1-9 op/pat.t 922 7 0.76% 665 776 785 832- 834 845 op/sprintf.t 224 3 1.34% 98 100 136 op/tr.t 97 5 5.15% 63 71-74 uni/fold.t 780 6 0.77% 61 169 196 661 710-711the failures in dumper.t and downgrade.t are problems in the tests, those in io_unix and sprintf are problems in the uss (udp sockets and printf formats).
this means that they will be more robust and hopefully faster.
they are now magnitudes faster, and they support various bignum libraries  such as gmp and pari as their backends.
seethe hash::util manpage.
[561] all the netbsd?
o topo perl -v, will be sent off toperlbug@perl.org to be analysed by the perl porting team.
the core-dumping functionality will remain in future available as an explicit call to core::dump(), but in future releases the behaviour of an unqualified dump()call may change.
b::deparse has been significantly enhanced by robin houston.
carp now has better interface documentation, and the @carp_not  interface has been added to get optional control over where errors are reported  independently of @isa, by ben tilly.
seethe storable manpage.
it can now deparse almost all of the standard test suite (so that the tests still succeed).
../lib/anydbm_file.t 2 512 12 2 16.67% 1 4 ../lib/memoize/t/errors.t 0 139 11 5 45.45% 7-11 ../lib/memoize/t/tie_ndbm.t 13 3328 4 4 100.00% 1-4 run/fresh_perl.t 97 1 1.03% 91ndbm_file fails
# in myfilter.pm: package myfilter; use filter::simple sub { while (my ($from, $to) =
[561] line renumbering with eval and #linenow works.
other future possibilities  includeperlio? ::array and perlio?
the long deprecated uppercase aliases for the string comparison operators (eq, ne, lt, le, ge, gt) have now been removed.
( http://www.atheos.cx/ ) is a new platform.
perl has been tested with the gnu pth userlevel thread package (  http://www.gnu.org/software/pth/pth.html ).
mime::quotedprint, by gisle aas, allows you to encode  data in quoted-printable encoding, as defined in rfc 2045 -mime
the new algorithm ``one-at-a-time'' produces a different hashed key order.
it also sends the bug report to perl.org, not perl.com.
the gconvert macro ($config{d_gconvert}) used by perl for  stringifying floating-point numbers is now more picky about using sprintf %.*g
use of v-strings in use/require causes a (backward) portability warning.
t/op/alarm.t ext/time/hires/hires.t lib/benchmark.t lib/memoize/t/expmod_t.t lib/memoize/t/speed.tin case of failure
the ``unrecognized escape'' warning has been extended to include \8, \9, and \_.
in any case, the change will break existing code that relies on the current (ill-defined) semantics, so just avoid doing this in general.
[561] multi-line matches like "a\nxb\n" =~ /(?!\a)x/mwere flawed.
seethe test::more manpage.
[561] file access tests now use current process privileges rather than the user's default privileges, which could sometimes result in a mismatch between reported access and actual access.
the debugger has a new dumpdepth option to control the  maximum depth to which nested structures are dumped.
[561] and -dr options to trace tokenising and to add reference counts to displaying variables, respectively.
layer ifperlio? is used.
[561] file::glob now supports glob_limitconstant to limit the size of the returned list of filenames.
the builtin dump()now gives an optional warning dump() better written as core::dump(), meaning that by default dump(...)is resolved as the builtin dump()which dumps core and aborts, not as (possibly) user-defined sub dump.
you can now override the readline()builtin, and this overrides also the  angle bracket operator.
(as does the the 5.7.2 development release).
h2xsuses the new extutils::constant module which will affect newly created extensions that define constants.
it can be used for example for vendor add-ons without disturbing  perl's own library directories.
this didn't do anything useful, as the sort was not performed.
(you should be able to modify only lvalue elements inside the loops.)
callbacks  (naughtily) exiting with ``next;'' instead of ``return;'' now work.
it points at some problems with the signedness handling of the c compiler, as do the 64bitint, arith, and pow failures.
local($tied_hash{foo})
threads, by arthur bergman, is an interface to  interpreter threads.
[561] mac os classic is now supported in the mainstream source package (  macperl? has of course been available since perl 5.004 but now the source code  bases of standard perl andmacperl? have been synchronised)
infinity is now recognised as a number.
pod2html now understands pod written using different  line endings (pc-like crlf versus unix-like lf versusmacclassic? -like cr).
a new special regular expression variable has been introduced: $^n, which contains the most-recently closed group (submatch).
from novell is now supported.
just by saying use switch; you have switch and case available in perl.
the older name is still available for compatibility, but is deprecated.
the *glob{filehandle} is deprecated, use *glob{io} instead.
the unimplemented posix regex features .cc.?
seethe perluniintro manpage for more information about utf-8.
each unquoted argument will be automatically quoted to protect whitespace, and any existing whitespace in the arguments will be preserved.
since there are not that many amiga developers available, we could not get this fixed and tested in time for 5.8.0.
perlclib documents the internal replacements for standard c library  functions.
perl installation leaves libnet unconfigured; uselibnetcfg to configure it.
if this seems to be the case  and 'cc' does not seem to be the gnu c compiler 'gcc', an automatic attempt is  made to find and use 'gcc' instead.
seethe perlunicode manpage for details, and more additions.
in search::dict one can now have a pre-processing hook for the lines  being searched.
in string, @example now must be written as \@examplethe idea here was to get people into the habit of writing "fred\@example.com"when they wanted a literal @sign, just as they have always written "give me back my \$5"when
[561] the regular expression captured submatches ($1, $2, ...) are now more consistently unset if the match fails, instead of leaving false data lying around in them.
use switch; case 1 { print "number 1" } case "a" { print "string a" } case [1..10,42] { print "number in list" } case (@array) { print "number in list" } case /\w+/ { print "pattern" } case qr/\w+/ { print "pattern" } case (%hash) { print "entry in hash" } case (\%hash) { print "entry in hash" } case (\&sub) { print "arg to subroutine" } else { print "previous case not true" }
[561] nec super-ux is now supported.
sort())or an external operation (like an i/o operation), and only then look at any arrived signals (and before starting the next operation).
::constant  manpage).
this may cause new warnings when modules are being installed.
perlcchas been rewritten and its user interface (that is, command line) is much more like that of the unix c compiler, cc.
failed tests 128-130 op/pack...............................failed tests 25-5625 op/pow................................ op/taint..............................
so, as you add more and more  digits of pi, the order in which the sorted even and odd digits appear will  change.
::via::quotedprint manpage.
in sys::syslog there is now a failover mechanism that will go through alternative connection mechanisms until the message is successfully logged.
and, ironically, this mergesort does  particularly well where quicksort goes quadratic: mergesort sorts (1..$n,  1..$n) ino(n) time.
[561] regular expression debug output (whether through use re 'debug'or via -dr) now looks better.
also, $config{byteorder} is now computed dynamically--this is more robust with ``fat binaries'' where an executable image contains binaries for more than one binary platform, and when cross-compiling.
note that some of the net::ping tests are disabled when  running under the perl distribution since one cannot assume one or more of the  following: enabled echo port at localhost, full internet connectivity, or  sympathetic firewalls.
in sys::syslog there is now a failover mechanism that will go  through alternative connection mechanisms until the message is successfully  logged.
the dynix/ptx platform (also known as dynixptx) is supported at or  near osvers 4.5.2.
if building perl with interpreter threads (ithreads), the getgrent(), getgrnam(), and getgrgid()functions cannot return the list of the group members due to a bug in the multithreaded support of unicos/mk.
seethe tie::file manpage.
lexicals ii: lexicals leaked at file scope into subroutines that were declared before the lexicals.
more appropriate mechanisms for selecting the implementation exist,  but they wouldn't have arrived in time to save quicksort.
installperl now outputs everything to stderr.
[561+] a lost warning ``can't declare ... dereference in my'' has been restored (perl had it earlier but it became lost in later releases.)
thex command  has been extended so thatx n
...anonymous temporary files are available without need to 'use filehandle' or other module via open($fh,"+>", undef) ||
pl are now checked for sanity much more carefully than before.
seethe perlfork manpage for details.
rules for the conversion.
digest, frontend module for calculating digests (checksums), from gisle aas, has been added.
[561] the utime manpage now supports utime undef, undef, @filesto change the file timestamps to the current time.
for tests 129 and 130, the failing platforms do not comply with the ansi c standard: lines 19ff on page 134 of ansi x3.159 1989, to be exact.
another change related to the architecture name is that ``-64all'' (-duse64bitall, or ``maximally 64-bit'') is appended only if your pointers are 64 bits wide.
it is still a useful module, though, and is available from the cpan.
the same problem affects slicing over non-existent indices/keys of a tied/magical array/hash.
our()variables will not cause bogus ``variable will not stay shared'' warnings.
the utf8:: name space (as in the pragma) provides  various perl-callable functions to provide low level access to perl's internal  unicode representation.
(bsd_glob() does still sort platform natively, ascii or ebcdic, unless glob_alphasort is specified.)
seethe perlunicode manpage, the utf8 manpage, and http://www.unicode.org/unicode/reports/tr16/ for more information.
the utf8::name space (as in the pragma) provides various perl-callable functions to provide low level access to perl's internal unicode representation.
this has been reversed to be in the right order.
libnetcfg has been added to configure libnet.
this is the recommended method to build perl on vos.
hashes now use bob jenkins ``one-at-a-time'' hashing key algorithm ( http://burtleburtle.net/bob/hash/doobs.html ).
the obsolete method of making a special (e.g., debugging) flavor of perl by saying make libperl=libperld.ahas been removed.
(this feature, like other new features that combine unicode and i/o, work only if you are usingperlio? , but that's the default.)
[561] duping socket handles with open(f, ``>&mysock'') now works under windows 9x.
the tainting of %envelements via keysor valueswas previously unimplemented.
failed test stat wstat total fail failed list of failed ------------------------------------------------------------------------- ../ext/db_file/t/db-btree.t 0 11 ?? ??
[561+] scalar::util is a selection of general-utility scalar  subroutines, such as blessed(), reftype(), and tainted().
more appropriate mechanisms for selecting the implementation exist, but they wouldn't have arrived in time to save quicksort.
and, for sufficiently large slices of pi, the quicksort algorithm in  perl 5.8 won't return the same results even if reinvoked with the same input.
use warnings qw(fatal all)did not work as intended.
but quicksort was rescued at the last moment because it is faster than mergesort on certain inputs and platforms.
(for space considerations, the largest chinese encodings have been separated into their own cpan module, encode::hanextra, which encode will use if available).
::makemaker manpage for more details.
seethe win32 manpage for details.
the c code has been made much more gcc -wallclean.
the arguments of writemakefile() in makefile.
ncr mp-ras is now supported.
the older  methods, which build miniperl, are still available.
perl -d:module=arg,arg,argnow works (previously one couldn't pass in multiple arguments.)
pod::parselink, by russ allbery, has been added, to parse l<> links in pods as described in the new perlpodspec.
if that doesn't help, you may have to try removing all the .bundle files from beneath /library/perl, and again ``make install''-ing.
ref(...)instead of scalar(...) glob()now returns filenames in alphabetical order glob()(or ) is now by default sorted alphabetically to be csh-compliant (which is what happened before in most unix platforms).
[561+] perlaix perlamiga perlapollo perlbeos perlbs2000 perlce perlcygwin perldgux perldos perlepoc perlfreebsd perlhpux perlhurd perlirix perlmachten perlmacos perlmint perlmpeix perlnetware perlos2 perlos390 perlplan9 perlqnx perlsolaris perltru64 perluts perlvmesa perlvms perlvos perlwin32these documents usually detail one or more of the following subjects: configuring, building, testing, installing, and sometimes also using perl on the said platform.
this was caused by perl's  using the operating system libraries in a situation where the result of the  string to number conversion is undefined: now perl consistently handles such  strings as zero in numeric contexts.
[561] sort()has been changed to use primarily mergesort internally as opposed to the earlier quicksort.
there is a make target called ``perl.gprof'' for  generating a gprofiled perl executable.
seethe pod::text::overstrike  manpage.
the enhanced version has also been backported to earlier releases of perl and  submitted to cpan so that the earlier releases can enjoy the fixes.
most importantly, anonymous subs used to leak  quite a bit.
layer and wrapsperlio?
the md5backward compatibility module is deliberately not included since its further use is discouraged.
if you have gcc 3, there is a make target called ``perl.gcov'' for  creating a gcoved perl executable for coverage analysis.
the only even  digit,4, will come first.
multithreaded code should be migrated to the new ithreads model (seethe threads manpage, the threads::shared manpage andthe perlthrtut manpage).
s2p has been completely rewritten in perl.
xsubppnow understands pod documentation embedded in the *.xs files.
note that this means that some scripts that may have relied on earlier buggy behavior may no longer work correctly.
support for the clonespecial subroutine had been added.
math::bigfloat and math::bigint have undergone a full rewrite by  tels.
layers to have all lowercase names.
[561] pack ``z'' now correctly terminates the string with ``\0''.
digest::md5for calculating md5 digests (checksums) as defined in rfc 1321, from gisle aas, has been added.
z/os (formerly known as os/390, formerly known as mvs oe) now has  support for dynamic loading.
made possible to propagate customised exceptions via croak()ing.
seethe  test::more manpage.
added rsignal(), whichsig(), do_join(), op_clear, op_null, ptr_table_clear(), ptr_table_free(), sv_setref_uv(), and several utf-8 interfaces to the publicised api.
the ``plugins'' are named as usual, for example perlio::via::quotedprint.
net::ping has been considerably enhanced by rob brown: multihoming  is now supported, win32 functionality is better, there is now time measuring  functionality (optionally high-resolution using time::hires), and there is now  ``external'' protocol which uses net::ping::external module which runs your  external ping utility and parses the output.
the package;syntax ( packagewithout an argument) has been deprecated.
if you intend to run only on fat (or if usinganydbm?
configure -duseithreads) because it wouldn't work anyway (the thread extension requires being configured with -duse5005threads).
this may cause new warnings  when modules are being installed.
because in effect storable does serialisation of perl  data structures, with it you can also clone deep, hierarchical datastructures.
the byteorder was only sizeof(long)bytes long (1234 or 4321), but now it is correctly sizeof(iv)bytes long, (12345678 or 87654321).
to call the latter, qualify the call as &dump(...).
currently only printf()is tested: how to output various basic data types from xs.
in particular, caller()now returns a subroutine name of (unknown)for subroutines that have been removed from the symbol table.
please try running them manually, for example ./perl
[561] sys::syslog ignored the log_authconstant.
the pat, tr, and fold failures are genuine perl problems caused by ebcdic (and in the pat and fold cases, combining that with unicode).
[561] sort() has been changed to use primarily mergesort  internally as opposed to the earlier quicksort.
socks support is now much more robust.
data::dumper now has an option to sort hashes.
it is the little brother of -t: instead of dying on taint violations, lexical warnings are given.
(a popular win32 binary distribution).
fcntl, socket, and sys::syslog have been rewritten by nicholas clark  to use the new-style constant dispatch section (seethe extutils ?
in sdbm_file on dosish platforms, some keys went missing because of  lack of support for files with ``holes''.
use of /cin substitutions, even with /g, elicits use of /c modifier is meaningless in s///. use of /gwith splitelicits use of /g modifier is meaningless in split>.
the version of berkeley db used when the perl (and, presumably, the db_file extension) was built is now available as @config{qw(db_version_major db_version_minor db_version_patch)}from perl and as db_version_major_cfg db_version_minor_cfg db_version_patch_cfg> from c. building berkeley db3 for compatibility modes for db, ndbm, and odbm has been documented in install.
english.t 2 512 54 2 3.70% 2-3 ../lib/filecache.t 5 1 20.00% 5 ../lib/filter/simple/t/data.t 6 3 50.00% 1-3 ../lib/filter/simple/t/filter_only.
also the ext/posix/t/posix.t subtest #10 fails
now xsubs can have attributes just like subs.
[561+] perlintro is a gentle introduction to perl.
io::socket::inet now supports a value of zero for localport(usually meaning that the operating system will make one up.)
better unc path handling under ithreads.
if you are on irix or tru64 platforms, new profiling/debugging  options have been added; seethe perlhack manpage for more information about  pixie and third degree.
perl now tries internally to use integer values in numeric conversions and basic arithmetics (+ - * /) if the arguments are integers, and tries also to keep the results stored internally as integers.
seethe perlvos manpage.
[561] the behaviour of non-decimal but numeric string constants such as  ``0x23'' was platform-dependent: in some platforms that was seen as 35, in some  as 0, in some as a floating point number (don't ask).
seethe perlaix manpage.
dofollowed by a bareword now ensures that this bareword isn't a keyword (to avoid a bug where do q(foo.pl)tried to call a subroutine called q).
seelocalising tied arrays and hashes is broken.
this works again now.
other bugs in chdir()and cwd::cwd() have also been fixed.
error file = try.c, line = 3 the identifier "bad" is undefined.
note, however, that their prototype (as given by prototype("core::chomp")is undefined, because it cannot be expressed and therefore one cannot really write replacements to override these builtins.
tied hash interfaces are now required to have the exists and delete methods (either own or inherited).
it now works as documented.
all regular expression compilation error messages are now hopefully easier to understand both because the error message now comes before the failed regex and because the point of failure is now clearly marked by a {bar}has been deprecated for a while.
in future releases this naming may change.
note that some of the net::ping tests are disabled when running under the perl distribution since one cannot assume one or more of the following: enabled echo port at localhost, full internet connectivity, or sympathetic firewalls.
eval "v200"now works.
appllib_exp, a lesser-known configuration-time definition, has been  documented.
the (bogus) escape sequences \8 and \9 now give an optional warning (``unrecognized escape passed through'').
the main rationale was to have thread modules to obey normal naming, thread::(the threadsand threads::sharedthemselves are more pragma-like, they affect compile-time, so they stay lowercase).
h2xs now uses devel::ppport for better  portability between different versions of perl.
[561] numeric conversions did not recognize changes in the string value properly in certain circumstances.
tie/file/t/31_autodefer.t 255 65280 65 32 49.23% 34-65 ../lib/autouse.t 10 1 10.00% 4 op/flip.t 15 1 6.67% 15these failures are unlikely to get fixed as 5.005-style threads are considered fundamentally broken.
the rationale is that neither does localtime(), andtimelocal() and localtime() are supposed to be inverses of each other.
[561] the debugger (perl5db.pl) has been modified to present a more  consistent commands interface, via (commandset?
[561] win32::getcwd() correctly returns c:\ instead of c: when at the drive root.
[561] the dprofpp manpage -r didn't work.
(perlunicode is more of a detailed reference and background information) perlutil explains the command line utilities packaged with the perl distribution.
tie::refhash::nestable, by edward avis, allows storing hash references (unlike the standard tie::refhash)
it also serves as an example of a loadableperlio? layer.
(the  perlbc tools has been removed.
::makemaker now uses file::spec internally, which  hopefully leads to better portability.
so the 5.8 quicksort scrambles large arrays before sorting them, as a statistical defence against quadratic behaviour.
[561] io::socket::inet has support for the reuseport? option (if your platform supports it).
the output is highly customisable.
the documentation for the wince?
glob()now returns filenames in alphabetical order for(..) voltar para
seethe class::isa manpage.
the tr///operator now works.
pod2htmlnow understands pod written using different line endings (pc-like crlf versus unix-like lf versusmacclassic? -like cr).
and odbm_file just coredumps.
[561] pos()did not return the correct value within s///ge in earlier versions.
[561] the following modules now work on windows: extutils::embed
*foo{format}now works.
the shell module now has an oo interface.
because in effect storable does serialisation of perl data structures, with it you can also clone deep, hierarchical datastructures.
[561] for perl developers, several new make targets for profiling and debugging have been added; seethe perlhack manpage.
the stable subpragma forces stable behaviour, regardless of  algorithm.
data::dumper now has an option to dump code references using b::deparse.
[561] use of $& could trigger a core dump under some situations.
the waitpidemulation has been improved.
xs::typemap, by tim jenness, is a test extension that  exercises xs typemaps.
the current user-visible implementation of pseudo-hashes (the weird use of the first array element) is deprecated starting from perl 5.8.0 and will be removed in perl 5.10.0, and the feature will be implemented differently.
additional bonuses are that the worst case behaviour of sort()is now better (in computer science terms it now runs in time o(n log n), as opposed to quicksort's theta(n**2)worst-case run time behaviour), and that sort()is now stable (meaning that elements with identical keys will stay ordered as they were before the sort).
::makemaker manpage for  more details.
yes, much quicker than perlretut.
however, the lvalue subroutine feature still remains experimental.
documentation on how to use the perl source repository has been added toporting/repository.pod.
storable was originally created by raphael manfredi, but it is now maintained  by abhijit menon-sen. storable has been enhanced to understand the two new hash  features, unicode keys and restricted hashes.
chop(@list) in list context returned the characters  chopped in reverse order.
(they produce something other than ``1'' and ``-1'' when formatting 0.6 and -0.6 using the printf format ``%.0f''; most often, they produce ``0'' and ``-0''.)
may produce buggy code for perl the aix c compiler vac version 5.0.0.0 may produce buggy code, resulting in a few random tests failing when run as part of ``make test``, but when the failing tests are run by hand, they succeed.
s2phas been completely rewritten in perl.
this enables the new behaviour for perl embedders.
warnings relating to the use of the new restricted hashes feature have been added.
[561] html files will now be installed in c:\perl\html instead of c:\perl\lib\pod\html
perl 5.8 unfortunately does not build anymore onamigaos? ; this broke accidentally at some point.
support for unicode, iso-8859-1, and ascii are compiled in to the module.
(this problem didn't affect windows platforms.)
however, the generated binaries continue to be incompatible with those generated by the other supported compilers (gcc and visual c++).
for the full list of the available apis see the perlapi manpage.
math::complex handles inf, nan?
luckily, these days the need for h2ph is rare.
io::socket now has an atmark()method, which returns true if the socket is positioned at the out-of-band mark.
, perl tries to work around their deficiencies.
for similar functionality, see pack('u0', ...) and pack('c0', ...).
again, this is not perl's fault-- the libc of mac os x is not threadsafe (in this particular test, the localtime()call is found to be threadunsafe.)
stratus vos is now supported using perl's native build method  (configure).
if your platform supports fork(), you can use the list form of openfor pipes.
../lib/extutils/t/mkbootstrap.t 1 256 18 1 5.56% 8 ../lib/extutils/t/packlist.t 1 256 34 1 2.94% 17 ../lib/extutils/t/basic.t 1 256 17 1 5.88% 14 lib/os2_process.t 2 512 227 2 0.88% 174 209 lib/os2_process_kid.t 227 2 0.88% 174 209 lib/rx_cmprt.t 255 65280 18 3 16.67% 16-18 sprintf '%e',0incorrectly produces 0.000000e+0instead of 0.000000e+00.
malformed unicode encodings (utf-8 and utf-16) cause a lot of warnings, as does trying to use utf-16 surrogates (which are unimplemented).
o topo new documentation perl56delta details the changes between the 5.005 release and the  5.6.0 release.
and, ironically, this mergesort does particularly well where quicksort goes quadratic: mergesort sorts (1..$n, 1..$n) in o(n)time.
if your file system supports symbolic links, you can build perl outside of the source directory bydb_version_major_cfg db_version_minor_cfg db_version_patch_cfg> from c. building berkeley db3 for compatibility modes for db, ndbm, and odbm has been documented in install.
so, as you add more and more digits of pi, the order in which the sorted even and odd digits appear will change.
switch, by damian conway, has been added.
several unicode fixes.
the tainting behaviour of sprintf()has been rationalized.
seethe locale::maketext manpage, and the locale::maketext::tpj13 manpage.
[561] current directory entries in %env are now correctly propagated to child processes.
[561+] the following platform-specific documents are  available before the installation as readme.platform, and after the  installation as perlplatform: perlaix perlamiga perlapollo perlbeos
note that the 5.005 threads are unsupported and deprecated: if you have code written for the old threads you should migrate it to the new ithreads model.>
these will get installed as perljp perlko perlcn perltw
perlbs2000 perlce perlcygwin perldgux perldos perlepoc perlfreebsd perlhpux perlhurd perlirix perlmachten perlmacos perlmint perlmpeix perlnetware perlos2 perlos390 perlplan9 perlqnx perlsolaris perltru64 perluts perlvmesa perlvms perlvos perlwin32 these  documents usually detail one or more of the following subjects: configuring,  building, testing, installing, and sometimes also using perl on the said  platform.
this is caused by darwin's ufs not supporting inode change time.
if you configure with ithreads, ext/threads/t/libc.t will fail.
the english module can now be used without the infamous performance  hit by saying use english '-no_match_vars'; (assuming, of course, that you don't  need the troublesome variables$`, $&, or $' .)
[561] sort()is also fully reentrant, in the sense that the sort function can itself call sort().
note that after this perl really does assume that everything is utf-8: for example if some input handle is not, perl will probably very soon complain about the input data like this ``malformed utf-8 ...''
perlpod has been rewritten to be clearer and to record the best  practices gathered over the years.
note that the tr///cufunctionality has been removed (but see pack('u0', ...)).
[561+] perlrequick is a regular expressions quick-start guide.
you can regard  this as totally trivial, or somewhat profound.
[561] the autouse pragma didn't work for multi::part::function::names.
nothing gets installed, but the code is worth studying  for extension writers.
db_file now supports newer berkeley db versions, among other  improvements.
seethe unicode::ucd manpage.
xs::typemap, by tim jenness, is a test extension that exercises xs typemaps.
see the perlipc manpage.
see the perlthrtut manpage for more information.
attributes::reftype() now works on tied arguments.
but that means if you sort the same large array twice, ties may be  broken in different ways.
you should carefully launder the arguments to guarantee their validity.
now you will get an optional warning.
perlbugis now much more robust.
there is no need to \-escape any \wcharacter.
perliol documents the internals of perlio?
the template letters are j, j, f, and d. pack('u0a*', ...)can now be used to force a string to utf-8.
[561] configure no longer includes the dbm libraries (dbm, gdbm, db, ndbm) when building the perl binary.
seethe perlembed manpage.
this means that for example instead of do format()you must write do &format().
if you have cpan access (either network or a local copy such as a cd-rom) you can during specify extra modules to configure to build and install with perl using the -dextras=... option.
aix should now work better with gcc, threads, and 64-bitness.
posix::sigaction() is now much more flexible and robust.
if you have cpan access (either network or a local copy such as a  cd-rom) you can during specify extra modules to configure to build and install  with perl using the -dextras=... option.
xs::apitest, by tim jenness, is a test extension that exercises xs apis.
unicode::collate, by sadahiro tomoyuki, implements the  uca (unicode collation algorithm) for sorting unicode strings.
because of the unpredictability of tie-breaking  order, and the quadratic worst-case behaviour, quicksort wasalmost replaced completely with a stable mergesort.
the return value of cwd::fastcwd() is now tainted.
time::hires, by douglas e. wegscheid, provides high  resolution timing (ualarm, usleep, and gettimeofday).
[561] perlivpis a new installation verification procedure utility for running any time after installing perl.
o topo selected bug fixes numerous memory leaks and uninitialized memory
seethe scalar::util manpage.
you can see the list of changes in the 5.6.1 release (both from the 5.005_03 release and the 5.6.0 release) by readingthe perl561delta manpage.
myvariables now handled at run-time use utf8, almost) ref(...)instead of scalar(...)
carp now has better interface documentation, and the @carp_not interface has been added to get optional control over where errors are reported independently of @isa, by ben tilly.
you can regard this as totally trivial, or somewhat profound.
the test module has been significantly enhanced.
most of the rest point at problems withsysv? ipc.
[561] posix::sleep() now returns the number of unslept seconds (as the posix standard says), as opposed to core::sleep() which returns the number of slept seconds.
[561] zero entries were missing from the unicode classes such as isdigit.
voltar para o topo emacs perl mode (emacs/cperl-mode.el) has been updated to version  4.31.
[561] a socket handle leak in accept()has been fixed.
[561] configure support for pdp11-style memory models has been removed due  to obsolescence.
note that perlcc is still considered very experimental and  unsupported.>
another change related to the architecture name is that ``-64all''  (-duse64bitall, or ``maximally 64-bit'') is appended only if your pointers are  64 bits wide.
seethe perldebug  manpage.
use mime::base64; $encoded =
encode, originally by nick ing-simmons and now maintained by dan kogai, provides a mechanism to translate between different character encodings.
instead, if you explicitly choose not to use perlio (configure command line option -uuseperlio), you will get ``-stdio'' appended.
test::more, by michael schwern, is yet another framework for writing test scripts, more extensive than test::simple.
perlio::via::quotedprint, by elizabeth mattijsen, is an example of a perlio::viaclass: use perlio::via::quotedprint; open($fh,">:via(quotedprint)",$path);this will automatically convert everything output to $fhto quoted-printable.
math::bigratfor big rational numbers, to accompany math::bigint and math::bigfloat, from tels.
a29k ^ cc-65 cc: error file =
hash  values output from the algorithm on a hash of all 3-char printable ascii keys  comes much closer to passing the diehard random number generation tests.
accesses have been hunted down.
there are now several profiling make targets.
useperlcc -b instead.)
warnings relating to the use interpreter threads and their shared data have been added.
the tr///c and tr///u features have been removed and will not return; the interface was a mistake.
:rawlayer (or ``discipline'', to use the camel book's older terminology) is now formally defined as being equivalent to binmode(fh)- which is in turn defined as doing whatever is necessary to pass each byte as-is without any translation.
starting with 5.6.1, when perl now sees an @sign in a double-quoted string, it always attempts to interpolate an array, regardless of whether or not the array has been used or declared already.
added a new posix-ish character class :blank:?which stands for horizontal whitespace (currently, the space and the tab).
see the threads manpage, the threads::shared manpage, and the perlthrtut manpage.
with these, you can implement rather advanced parsing  algorithms.
(previously only $prefix changed.)
interpreter threads (ithreads) is the new thread model  introduced in perl 5.6 but only available as an internal interface for  extension writers (and for win32 perl forfork() emulation).
which 1comes first is hard to know, since one 1looks pretty much like any other.
seethe unicode::collate manpage.
in future releases, non-perlio aware xs modules may become completely unsupported.
a mmap layer may be available if platform supports it (mostly unixes).
threads, by arthur bergman, is an interface to interpreter threads.
devel::ppport, originally by kenneth albanowski and now maintained by paul marquess, has been added.
[561] io::socket::inet has support for the reuseport? option (if your  platform supports it).
sizeof(long)was 4, but sizeof(iv)was 8.
a workaround for the problem has been added.
(something thatour() does not and will not support.)
(something that our()does not and will not support.)
next, by damian conway, is a pseudo-class for method redispatch.
the documentation for the posix-bc platform is called ``bs2000'', to  avoid confusion with the perl posix module.
several other encodings (like the rest of the iso-8859, cp*/win*, mac, koi8-r, three variants ebcdic, chinese, japanese, and korean encodings) are included and can be loaded at runtime.
literal @example now requires backslashin versions 5.004_01 through 5.6.0, the error was
[561] configure.gnu now works with options with whitespace in them.
additional bonuses are that the worst case behaviour of sort() is now better (in computer science terms it now runs in time o(n  log n), as opposed to quicksort'stheta(n**2) worst-case run time  behaviour), and thatsort() is now stable (meaning that elements  with identical keys will stay ordered as they were before the sort).
a new command-line option, -tis available.
[561+] a failed (pseudo)fork now returns undef and sets errno to eagain.
but how about the odd numbers, which all  compare equal?
the older name is still  available for compatibility, but is deprecated.
the arguments of writemakefile()in makefile.
net::ping has been considerably enhanced by rob brown: multihoming is now supported, win32 functionality is better, there is now time measuring functionality (optionally high-resolution using time::hires), and there is now ``external'' protocol which uses net::ping::external module which runs your external ping utility and parses the output.
this affects builds with -duselongdouble.
it also sends the bug  report to perl.org, not perl.com.
use of the /cmatch modifier without an accompanying /gmodifier elicits a new warning: use of /c modifier is meaningless without /g.
fcntl, socket, and sys::syslog have been rewritten by nicholas clark to use the new-style constant dispatch section (seethe extutils ?
perlbug is now much more robust.
the only exception is that a inprefix is required to signify a unicode block when a block name conflicts with a script name.
the libnet manpage, by graham barr, is a collection of perl5 modules related to network programming.
seethe  unicode::collate manpage.
many test suite tests still fail and the co-existence of  unicode and ebcdic isn't quite settled, but the situation is much better than  with perl 5.6.
../ext/b/t/xref.t 255 65280 14 12 85.71% 3-14 ../ext/list/util/t/first.t 255 65280 7 4 57.14% 2 5-7 ../lib/
seethe net::ftp manpage, the net::nntp manpage, the net::ping manpage (not part of libnet, but related), the net::pop3 manpage, the net::smtp manpage, and the net::time manpage.
perl_object has been completely removed.
since the new code is  more correct (if you have two constants where the first one is a prefix of the  second one, the first constantnever got defined), less lossy  (it uses integers for integer constant, as opposed to the old code that used  floating point numbers even for integer constants), and slightly faster, you  might want to consider regenerating your extension code (the new scheme makes  regenerating easy).the h2xs manpage now also supports c trigraphs.
so the 5.8 quicksort scrambles large  arrays before sorting them, as a statistical defence against quadratic  behaviour.
internally, the execution of end blocks is now controlled by pl_exit_flags & perl_exit_destruct_end.
(eg by reading/proc/self/exe on linux, /proc/curproc/file on freebsd? )
they are now magnitudes faster, and they support various bignum libraries such as gmp and pari as their backends.
list::util, by graham barr, is a selection of general-utility list subroutines, such as sum(), min(), first(), and shuffle().
[561] configure support for pdp11-style memory models has been removed due to obsolescence.
we suggest upgrading to at least vac version 5.0.1.0, that has been known to compile perl correctly.
encode_qp("\xde\xad\xbe\xef"); $decoded = decode_qp($encoded); print $encoded, "\n";
memoizecan make your functions faster by trading space for time, from mark-jason dominus.
use -ddebugging instead.
an optional warning is generated (``illegal character in prototype...``) but this may be upgraded to a fatal error in a future release.
ebcdic platforms (z/os (also known as os/390), posix-bc, and vm/esa)
previous versions of perl and some readings of some sections of camel iii implied that the :raw``discipline'' was the inverse of :crlf.
this results hopefully in more accurate numbers.
regular expressions on references and overloaded scalars now work.
but how about the odd numbers, which all compare equal?
[561] the numerical comparison operators return undefif either operand is anan? .
seethe filter::util::call manpage.
my package $obj now works.
according to perlbench, this change has not affected the overall speed of perl.
perlutil explains the command line utilities packaged with the perl  distribution.
perl5db.t was also added to test the changes, and as a placeholder for further tests.
test::simple, by michael schwern, has basic utilities for writing tests.
chdir()now works better despite a crt bug; now works with multiplicity (see install); now works with perl's malloc.
the performance has been  improved for common scenarios.
trying to use unicode characters on an i/o stream without marking the stream's encoding (using open()or binmode())will cause ``wide character'' warnings.
the rationale is that neither does localtime(), and timelocal()and localtime()are supposed to be inverses of each other.
voltar para o topo installation and configuration improvements generic improvements install now explains how you can configure perl to use 64-bit  integers even on non-64-bit platforms.
[561+] the new bignum, bigint, and bigrat pragmas, by tels, implement transparent bignum support (using the math::bigint, math::bigfloat, and math::bigrat backends).
for(..) for (1..5) { $_++ }works without complaint.
next, by damian conway, is a pseudo-class for method  redispatch.
beos? has been reclaimed.
perlpodspec is a more formal specification of the pod format, mainly of interest for writers of pod applications, not to people writing in pod.
the stable subpragma forces stable behaviour, regardless of algorithm.
[561+], pod::parser, storable, term::ansicolor, test,  text-tabs+wrap.
the even and odd numbers appear in the output in the same order they appeared in the input.
seethe attribute::handlers manpage.
also, introduced @last_match_start and @last_match_end english aliases for @- and @+.
with these, you can implement rather advanced parsing algorithms.
the dg/ux platform now supports 5.005-style threads.
in safe, %inc is now localised in a safe compartment so  that use/require work.
seethe test::simple manpage.
some versions of glibc have a broken modfl().
use mime::quotedprint; $encoded =
in safe, %incis now localised in a safe compartment so that use/require work.
for very small lists this may result in slightly slower sorting times, but in general the speedup should be at least 20%.
when there is no name conflict, you can omit the infrom the block name (e.g. \p{braillepatterns}), but to be safe, it's probably best to always use the in).
pod2html now produces xhtml 1.0.
no more corrupt internal state since the current operation is always finished first, but the signal may take more time to get heard.
o topo attribute::handlers, originally by damian conway and now maintained by arthur bergman, allows a class to define attribute handlers.
some warning messages still remain in some platforms, so if you are compiling with gcc you may see some warnings about dubious practices.
file::glob::glob() has been renamed to file::glob::bsd_glob()  because the name clashes with the builtin glob().
which1 comes first is hard to  know, since one1 looks pretty much like any other.
the enhanced version has also been backported to earlier releases of perl and submitted to cpan so that the earlier releases can enjoy the fixes.
callbacks (naughtily) exiting with ``next;'' instead of ``return;'' now work.
io::socket now has an atmark() method, which returns  true if the socket is positioned at the out-of-band mark.
the suidperl functionality is likely to be removed in a future release.
you can enable/disable them with use/no warnings 'file::find';.
use tie::hash; tie my %tied_hash => 'tie::stdhash'; ... # nothing has set the foo element so far { local $tied_hash{foo} = 'bar' } # this used to print, but not now.
the reuse option now has an alias,reuseaddr? .
end blocks are now run even if you exit/die in a begin block.
this feature helps in writing internationalised software, and in general when the order of the parameters can vary.
*foo{format} now works.
yes, much  quicker than perlretut.
the even and odd numbers appear in the output in the  same order they appeared in the input.
on your architecture name.
for clarity, you may want to preferreuseaddr? .
localtime()call to find out whether it is threadsafe.
for example printf "%2\$s %1\$s\n", "foo", "bar";will print ``bar foo\n''.
# msgsnd failed ../ext/io/lib/io/t/io_poll............failed tests 3-4 ../ext/ipc/sysv/ipcsysv...............failed tests 2, 5-6 ../ext/ipc/sysv/t/msg.................failed tests 2, 4-6 ../ext/socket/socketpair..............failed tests 12 ../lib/ipc/sysv.......................failed tests 2, 5-6 ../lib/warnings.......................failed tests 115-116, 118-119the op/pack failure (``cannot compress negative numbers at op/pack.t line 126'')
tie::array's splice method was broken.
using the /g modifier in split()is meaningless and will cause a warning.
sinceperlio? is a drop-in replacement for stdio at the source code level, this shouldn't be that drastic a change.
if building threaded perl, you may get compilation warning from pp_sys.c: "pp_sys.c", line 4651.39: 1506-280 (w) function argument assignment between types "unsigned char*" and "const void*" is not allowed.
this will create in perl/build/directory a tree of symbolic links pointing to files in /path/to/perl/source.
after configure  has finished, you can just say make all test and perl will be built and tested, all in  perl/build/directory.
a workaround for the problem has been  added.
this version of perl detects this brokenness and has a workaround for it.
seethe perlhack manpage .
open($fh,'>:crlf :utf8', $path) || ...or on already opened handles via extended binmode: binmode($fh,':encoding(iso-8859-7)');the built-in layers are: unix (low level read/write), stdio (as in previous perls), perlio (re-implementation of stdio buffering in a portable manner), crlf (does crlf  ``\n'' translation as on win32, but available on any platform).
if tr/// is just counting characters, it doesn't attempt to modify its target.
9 3 33.33% 1-2 5 ../lib/math/bigint/t/bare_mbf.t 1627 4 0.25% 8 11 1626-1627 ../lib/math/bigint/t/bigfltpm.t 1629 4 0.25% 10 13 1628- 1629 ../lib/math/bigint/t/sub_mbf.t 1633 4 0.24% 8 11 1632-1633 ../lib/math/bigint/t/with_sub.t 1628 4 0.25% 9 12 1627-1628 ../lib/
you can enable/disable them withuse/no warnings 'file::find';.
unshift() should now be noticeably faster.
this is now handled correctly.
the existing behaviour when localising tied arrays and hashes is wrong, and will be changed in a future release, so do not rely on the existing behaviour.
there is no need to escape any of the \wcharacters.
perly.c, sv.c, and sv.h have now been extensively commented.
the_quicksort and _mergesort subpragmas are heavy-handed ways to select the underlying implementation.
stable means that ties are  broken to preserve the original order of appearance in the input array.
perl 5.6.0 could emit spurious warnings about redefinition of dl_error() when statically building extensions into perl.
mime::quotedprint, by gisle aas, allows you to encode data in quoted-printable encoding, as defined in rfc 2045 -mime
it seems that for some reason ``make install'' doesn't always completely overwrite the files in /library/perl.
mkdir()now ignores trailing slashes in the directory name, as mandated by posix.
quicksort  was rescued by implementing a sort pragma to control aspects of the sort.
the english module can now be used without the infamous performance hit by saying use english '-no_match_vars';(assuming, of course, that you don't need the troublesome variables $`, $&, or $'.)
seethe perlmod manpage voltar para
seethe unicode::normalize manpage.
ext/socket/socketpair.t...............failed tests 15-45 ext/data/dumper/t/dumper.............failed at test 268 ext/devel/peek/peek..................failed at test 7 op/64bitint...........................failed tests 29-30, 32-33, 35-36 op/arith..............................
_file on fat), run configure with the -ui_ndbm and -ui_dbm options to prevent ndbm_file and odbm_file being built.
o topo \s(\p{space} isn't, since that includes the vertical tabulator character, whereas \sdoesn't.)
[561] warnings::enabled() now reports the state of $^w correctly if the  caller isn't using lexical warnings.
spurious syntax errors generated in certain situations, when glob()caused file::glob to be loaded for the first time, have been fixed.
unicode::normalize, by sadahiro tomoyuki, implements the various unicode normalization forms.
print $encoded, "\n"; #  "qwxhzgrpbjpvcgvuihnlc2ftzq==" see the mime::base64 manpage.
( 3,1,4,1,5,9 ); a numerical sort of the digits will  yield (1,1,3,4,5,9), as expected.
because of the above error, parts of the converted headers will be invisible.
(multipurpose internet mail extensions)>.
3 a semicolon is expected at this point.
the method is also  exportable as asockatmark() function.
use warnings qw(fatal all) did not work as intended.
in search::dict one can now have a pre-processing hook for the lines being searched.
this is only meant as a temporary debugging aid while securing the code of old legacy applications.
bad switch yylook 79bad switch yylook 79bad switch yylook 79bad switch yylook 79#ifdef
the syntaxes @a->[...]and %h->{...}have now been deprecated.
(the whole dump()feature is to considered deprecated, and possibly removed/changed in future releases.)
universal::isa no longer caches methods incorrectly.
aix dynamic loading should be now better supported.
you can move the old perl shared library out of the way like this: cd /library/perl/darwin/core mv libperl.dylib libperlold.dyliband then reissue ``make install''.
seethe digest manpage.
and =c=? are still recognised but now cause fatal errors.
h2xsnow uses devel::ppportfor better portability between different versions of perl.
seethe digest::md5 manpage.
untie()will now call an untie()hook if it exists.
it  converts pod data to formatted overstrike text.
it is now a top-level category in its own right.
scalar()now forces scalar context even when used in void context.
qw(a\\b)now parses correctly as 'a\\b': that is, as three characters, not four.
text::balanced, by damian conway, has been added, for extracting delimited text sequences from strings.
emacs/e2ctags.pl is now much faster.
time::local::timelocal() does not handle fractional seconds anymore.
i18n::langinfocan be used to query locale information.
the glibc release 2.2.2 is known to have fixed the modfl()bug.
[561+] the amdahl uts unix mainframe platform is now supported.
this will default in 5.10.
use digest::md5 'md5_hex'; $digest = md5_hex("thirsty camel"); print $digest, "\n"; # 01d19d9d2045e005c3f1b80e8b164de1note:
interpreter threads (ithreads) is the new thread model introduced in perl 5.6 but only available as an internal interface for extension writers (and for win32 perl for fork()emulation).
what this means is that in list context the functions will return only three values, not four.
\p{}and \p{}regular expression constructs for code points less than 256: the ppare testing for unicode code points, not knowing about ebcdic.
o topo make -f makefile.microshould be enough.
pack() / unpack()can now process the perl internal numeric types: ivs, uvs, nvs-- and also long doubles, if supported by the platform.
seethe b::concise manpage.
self-ties of arrays and hashes are not supported and fatal errors will happen even at an attempt to do so.
...that is a literal undef, not an undefined value.
for example: open kid_ps, "-|", "ps", "aux" or die $!;forks the the ps(1) manpage command (without spawning a shell, as there are more than three arguments to open()), and reads its standard output via the kid_psfilehandle.
they provide the codes for various locale standards, such as ``fr'' for france, ``usd'' for us dollar, and ``ja'' for japanese.
the 5.005 threads model (module thread) is deprecated and expected to be removed in perl 5.10.
[561] voltar para o topo chdir(``'')and chdir(undef)now give a deprecation warning because they cause a possible unintentional chdir to the home directory.
the re engine found in perl 5.6.0 accidentally pessimised certain kinds of simple pattern matches.
(perlunicode is more of a detailed reference and background information)
policy.sh policy change: if you are reusing a policy.sh file (see  install) and you use configure -dprefix=/foo/bar and in the old policy $prefix  eq $siteprefix and $prefix eq $vendorprefix, all of them will now be changed to  the new prefix, /foo/bar.
removing directories with 'no lib' now works.
pod::parselink, by russ allbery, has been added, to  parse l<> links in pods as described in the new perlpodspec.
o topo voltar para o topoeditar | anexar | mais ações | imprimir |texto puro | historico | login
using splice()past the end of an array now causes a warning.
this was caused by perl's using the operating system libraries in a situation where the result of the string to number conversion is undefined: now perl consistently handles such strings as zero in numeric contexts.
note that breaking out from potentially blocking operations should still work, though.
(interesting only for extension writers and perl core hackers.)
[561] lexicals i: lexicals outside an eval ``'' weren't resolved correctly  inside a subroutine definition inside the eval ``'' if they were not already  referenced in the top level of the eval``''ed code.
storable gives persistence to perl data structures by  allowing the storage and retrieval of perl data to and from files in a fast and  compact binary format.
and, for sufficiently large slices of pi, the quicksort algorithm in perl 5.8 won't return the same results even if reinvoked with the same input.
seethe encode manpage.
( 3,1,4,1,5,9 );a numerical sort of the digits will yield (1,1,3,4,5,9), as expected.
the fatal error has been downgraded to an optional warning: possible unintended interpolation of @example in stringthis warns you that "fred@example.com"is going to turn into fred.comif you don't backslash the @. see http://www.plover.com/~mjd/perl/at-error.html for more details about the history here.
since the new code is more correct (if you have two constants where the first one is a prefix of the second one, the first constantnever got defined), less lossy (it uses integers for integer constant, as opposed to the old code that used floating point numbers even for integer constants), and slightly faster, you might want to consider regenerating your extension code (the new scheme makes regenerating easy).the h2xs manpage now also supports c trigraphs.
::makemaker has been significantly cleaned up and fixed.
so you really might prefer native builds and long filenames.
if, by ilya zakharevich, is a new pragma for conditional inclusion of modules.
if your environment variables (lc_all, lc_ctype, lang) look like you want to use utf-8 (any of the the variables match /utf-?8/i), your stdin, stdout, stderr handles and the default open layer (seethe open manpage) are marked as utf-8.
isalnum, isalpha, and iswordnow match titlecase.
in addition to extract_delimited(), there are also  extract_bracketed(), extract_quotelike(), extract_codeblock(),  extract_variable(), extract_tagged(), extract_multiple(), gen_delimited_pat(),  and gen_extract_tagged().
voltar para o topo pack()tutorial.
h2xs uses the new extutils::constant module which will  affect newly created extensions that define constants.
it will be called in the context of the new thread, so all modifications are made in the new area.
seethe perltie manpage for details.
b::concise, by stephen mccamant? , is a new compiler backend for walking the perl syntax tree, printing concise info about ops.
mime::base64, by gisle aas, allows you to encode data in base64, as defined in rfc 2045 -mime
the debugger has a new dumpdepthoption to control the maximum depth to which nested structures are dumped.
perlretut is a regular expression tutorial.
this is caused by a bug in the awk utility of unicos/mk.
perlio::scalar, by nick ing-simmons, provides the  implementation of io to ``in memory'' perl scalars as discussed above.
lexical warnings now propagating correctly between scopes and into eval "...".
failed test stat wstat total fail failed list of failed --------------------------------------------------------------------------- ../ext/data/dumper/t/dumper.t 357 8 2.24% 311 314 325 327 331 333 337 339 ../ext/io/lib/io/t/io_unix.t 5 4 80.00% 2-5 ../ext/
this file is supposed to be used by hints file writers for  architecture-wide changes (as opposed to config.over which is for site-wide  changes).
there is a make target ``test.deparse'' for trying this out.
extutils::constant, by nicholas clark, is a new tool for extension writers for generating xs code to import c header constants.
[561] perlivp is a new installation verification procedure  utility for running any time after installing perl.
all thread tests of perl now work,  but not without adding some yield()s to the tests, so while pth (and other  userlevel thread implementations) can be considered to be ``working'' with perl  ithreads,
if you do not like  this new behaviour, specify prefix, siteprefix, and vendorprefix explicitly.
[561] autovivification of symbolic references of special variables described inthe perlvar manpage (as in ${$num}) was accidentally disabled.
this did not work reliably in previous releases.
the only exception to this issunos? 4.x, which needs them.
also, introduced @last_match_startand @last_match_endenglish aliases for @-and @+.
unicode::ucd offers a querying interface to the unicode  character database.
cwdnow has a split personality: if possible, an xs extension is used, (this will hopefully be faster, more secure, and more robust) but if not possible, the familiar perl implementation is used.
after years of trying, suidperl is considered to be too complex to ever be considered truly secure.
since any old eight-bit data is not legal utf-8.
encode_base64('aladdin:open sesame'); $decoded = decode_base64($encoded); print $encoded, "\n"; # "qwxhzgrpbjpvcgvuihnlc2ftzq=="see the mime::base64 manpage.
since perl 5.8 is not binary-compatible with previous releases of  perl, configure no longer suggests including the 5.005 modules in @inc.
a version of net::ping::external  is available in cpan.
the version of berkeley db used when the perl (and, presumably, the  db_file extension) was built is now available as @config{qw(db_version_major db_version_minor db_version_patch)} from  perl and asdb_version_major_cfg db_version_minor_cfg  db_version_patch_cfg> from c. building berkeley db3 for compatibility modes for db, ndbm, and odbm  has been documented in install.
[561+] filter::util::call, by paul marquess, provides you with the framework to writesource filters in perl.
but that means if you sort the same large array twice, ties may be broken in different ways.
behaviour, the best value attainable.
this algorithm is reasonably  fast while producing a much better spread of values than the old hashing  algorithm (originally by chris torek, later tweaked by ilya zakharevich).
storablegives persistence to perl data structures by allowing the storage and retrieval of perl data to and from files in a fast and compact binary format.
in addition to config.over, a new override file, config.arch, is available.
for example, \p{tibetan}refers to the script, while \p{intibetan}refers to the block.
[561] can now send()from all threads, not just the first one.
this has been  corrected.
lexicals ii: lexicals leaked at file scope into subroutines that  were declared before the lexicals.
it now correctly uses the supplied port number as is.
in future releases of perl the forms will become fatal errors so consider starting laundering now.
in afs installations, one can configure the root of the afs to be somewhere else than the default/afs by using the configure parameter -dafsroot=/some/where/else.
see the perlce manpage.
also  the long doubles support in aix should be better now.
dyld: perl undefined symbols _perl_sv_2pv _perl_get_svyou probably have an old pre-perl-5.8.0 installation (or parts of one) in /library/
the story in more detail: suppose you  want to serve yourself a little slice of pi.
no module;does not produce an error even if module does not have an unimport()method.
tie::file, by mark-jason dominus, associates a perl array with the lines of a file.
piconv is an implementation of the character conversion  utilityiconv, demonstrating the new encode module.
this improves the portability of system(@args)by avoiding the need for windows cmdshell specific quoting in perl programs.
if your file system supports symbolic links, you can build perl  outside of the source directory by mkdir perl/build/directory cd perl/build/directory sh /path/to/perl/source/configure -dmksymlinks ...
in other taint news, the exec listand system listhave now been considered too risky (think exec @argv: it can start any program with any arguments), and now the said forms cause a warning under lexical warnings.
(this broke the  tk extension with 5.6.0.)
pl are now  checked for sanity much more carefully than before.
irix numerous compilation flag and hint enhancements; accidental mixing of 32-bit and 64-bit libraries (a doomed attempt) made much harder.
mergesort has worst case o(n log n) behaviour, the best value attainable.
for careful hackers only.
tie::file, by mark-jason dominus, associates a perl  array with the lines of a file.
seethe filter::simple manpage.
the quicksort divide  and conquer strategy works well on platforms with relatively small, very fast,  caches.
pod2htmlnow allows specifying a cache directory.
[561] io::pipe io::poll net::pingio::file::new_tmpfile() is no longer limited to 32767 invocations per-process.
you can set the environment variable perl_test_net_ping to ``1'' (one) before running the perl test suite to enable all the net::ping tests.
although ``you shouldn't do that'', it was possible to write code that depends on perl's hashed key order (data::dumper does this).
quicksort was rescued by implementing a sort pragma to control aspects of the sort.
see the  perldgux manpage.
failed at test 3 t/op/inccode.........................
seethe scalar::util  manpage.
use perlcc -binstead.)
locale::maketext, by sean burke, is a localization framework.
if your file system supports symbolic links, you can build perl outside of the source directory by mkdir perl/build/directory cd perl/build/directory sh /path/to/perl/source/configure -dmksymlinks ...
for most uses, the frontend filter::simple is to be preferred.
the behavior of system()with multiple arguments has been rationalized.
this has been corrected.
t/op/stat............................failed at test 29 lib/file/find/t/find.................failed at test 1 lib/file/find/t/taint................failed at test 1 lib/h2xs.............................failed at test 15 lib/pod/t/eol........................failed at test 1 lib/test/harness/t/strap-analyze.....failed at test 8 lib/test/harness/t/test-harness......failed at test 23 lib/test/simple/t/exit...............failed at test 1the above failures are known as of 5.8.0 with native builds with long filenames, but there are a few more if running under dosemu because of limitations (and maybe bugs) of dosemu: t/comp/cpp...........................
at the moment onlylength() has been  implemented.
the bug has been fixed.
posix-style signals are now emulated much better on vms versions prior to 7.0.
appllib_exp, a lesser-known configuration-time definition, has been documented.
ourcan now have an experimental optional attribute uniquethat affects how global variables are shared among multiple interpreters, seeour in the perlfunc manpage.
suggestions for new shiny examples welcome but the main issue is that the examples need to be documented, tested and (most importantly) maintained.
[561] file::glob now supports glob_limit constant to limit  the size of the returned list of filenames.
because of the unpredictability of tie-breaking order, and the quadratic worst-case behaviour, quicksort wasalmost replaced completely with a stable mergesort.
test::simple, by michael schwern, has basic utilities  for writing tests.
so sort { ($a % 2)  ($b % 2) } (3,1,4,1,5,9);will yield (4,3,1,1,5,9), guaranteed.
seethe perldebug manpage.
perlnewmod tells about writing and submitting a new module.
these will get installed as perljp perlko perlcn perltw voltar para
borland c++ v5.5 is now a supported compiler that can build perl.
compiling perl using the 64-bit platform sdk tools is now supported.
# "=de=ad=be=ef\n" print $decoded, "\n"; # "\xde\xad\xbe\xef\n" see alsothe perlio ?
[561] wait(), waitpid(), and backticks now return the correct exit status under windows 9x.
extract_delimited("'never say never', he never said", "'", '');$a will be ``'never say never''', $b will be ', he never said'.
for example, if you reallydon't care about the order of even and odd digits, quicksort will run in o(n)time; it's very good at sorting many repetitions of a small number of distinct elements.
[561] lvalue subroutines can now return undefin list context.
in particular, however, this allows variable attributes to be useful for tieinterfaces, which was a deficiency of earlier releases.
guessing which symbols your c compiler and preprocessor define...will probably fail with error messages like cc-20 cc:
the  leading_ is a reminder that these subpragmas may not survive  beyond 5.8.
not only is the current interface rather ugly, but the current implementation slows down normal array and hash use quite noticeably.
1;localised hash elements (and %env) are correctly unlocalised to not exist, if they didn't before they were localised.
for  clarity, you may want to preferreuseaddr? .
the (\&) prototype now works properly.
o topo -scan now run non-interactively.
cygwin numerous updates; currently synchronised with cygwin 1.3.10.
tie::memoize, by ilya zakharevich, provides on-demand  loaded hashes.
io::socket::inet failed to open the specified port if the service name was not known.
[561] file::spec->tmpdir()now prefers c:/temp over /tmp (works better when perl is running as service).
quicksort has a worst case run time that can grow like n**2, so-called quadratic behaviour, and it can happen on patterns that may well arise in normal use.
you can now install coderef handlers, 'default', and 'ignore' handlers, installing new handlers was not atomic.
this change leads to often slightly faster and always less lossy arithmetics.
ipc::open3 now allows the use of numeric file descriptors.
(this broke the tk extension with 5.6.0.)
the original files are left unaffected.
threads::shared, by arthur bergman, allows data sharing  for interpreter threads.
because perlio? is now the default on most platforms, ``-perlio'' doesn't get appended to the $config{archname} (also known as $^o) anymore.
the builtin dump()function has probably outlived most of its usefulness.
extract_delimited("'never say never', he never  said", "'", ''); $a will be ``'never say never''', $b will  be ', he never said'.
the quicksort divide and conquer strategy works well on platforms with relatively small, very fast, caches.
with ithreads, when a new thread is created, all perl data is cloned, however non-perl data cannot be cloned automatically.
perlio::via::quotedprint, by elizabeth mattijsen, is an  example of aperlio::via class: use perlio::via::quotedprint; open($fh,">:via(quotedprint)",$path); this will  automatically convert everything output to$fh to quoted-printable.
use of the gprof tool to profile perl has been documented in the perlhack manpage.
seethe file::temp manpage.
(implemented by jeffrey friedl, nick ing-simmons, and michael schwern.)
gcc needs to closely track the operating system release to avoid  build problems.
[561] some cases of inconsistent taint propagation (such as within hash values) have been fixed.
formats now support zero-padded decimal fields.
instead, if you explicitly choose not to use perlio (configure command line  option -uuseperlio), you will get ``-stdio'' appended.
h2ph now supports c trigraphs.
the win32::setchildshowwindow() builtin can be used to control the visibility of windows created by child processes.
mergesort has worst case o(n log n)
text::balanced, by damian conway, has been added, for  extracting delimited text sequences from strings.
perlpod has been rewritten to be clearer and to record the best practices gathered over the years.
allow a read-only string on the left-hand side of a non-modifying tr///. if stderris tied, warnings caused by warnand dienow correctly pass to it.
unadorned dump()will now give a warning suggesting to use explicit core::dump() if that's what really is meant.
the justification for this rests with quicksort's worst case behavior.
say chdir()if you really mean that.
[561] extutils? ::makemaker now uses $env{lib} to search for libraries.
the systemfunction and backticks operator have improved functionality and better error handling.
keep in mind the possible non-preemptability of the underlying thread  implementation.
[561] attributes (such as :shared) didn't work with our().
eastern asian perl users are now welcomed in their own languages:  readme.jp (japanese), readme.ko (korean), readme.cn (simplified chinese) and  readme.tw (traditional chinese), which are written in normal pod but encoded in  euc-jp, euc-kr, euc-cn and big5.
math::bigfloat and math::bigint have undergone a full rewrite by tels.
(to be exact, the use64bitall is ignored.)
stable means that ties are broken to preserve the original order of appearance in the input array.
the inor isprefix to names used with the \p{...}and \p{...}are now almost always optional.
see the switch manpage.
it also  serves as an example of a loadableperlio? layer.
[561] prototype(\[$@%&])is now available to implicitly create references (useful for example if you want to emulate the tie()interface).
is serious but as of yet unsolved.
o topo local %tied_array;doesn't work as one would expect: the old value is restored incorrectly.
h2xs now produces a template readme.
threads::shared, by arthur bergman, allows data sharing for interpreter threads.
building perl with -duseithreads or -duse5005threads now works under  hp-ux 10.20 (previously it only worked under 10.30 or later).
the warnings issued by file::find now belong to their own category.
it can be used to prepend site-specific directories to perl's  default search path (@inc); see install for information.
the xcommand has been extended so that x n exprdumps out the value of expr to a depth of at most n levels.
doesn't get appended to the $config{archname} (also known as $^o) anymore.
file handles can translate character encodings from/to perl's internal unicode form on read/write via the ``:encoding()'' layer.
the module is contained within tie::refhash.
hp-ux readme.hpux updated; configure -duse64bitallnow works; now uses hp-ux malloc instead of perl malloc.
for very small lists this may  result in slightly slower sorting times, but in general the speedup should be  at least 20%.
this implementation also allows later systems to call killfrom within a signal handler.
reg_expand_sz keys are now allowed in registry settings used by perl.
but quicksort was rescued at the last moment  because it is faster than mergesort on certain inputs and platforms.
../ext/db_file/t/db-recno.t 149 3 2.01% 61 63 65if you are building on a ufs partition, you will also probably see t/op/stat.t subtest #9 fail.
file handles can be opened to ``in memory'' files held in perl scalars via: open($fh,'>', \$variable) ||
perlio::via, by nick ing-simmons, acts as a perlio?
seethe memoize manpage.
seethe tie::refhash manpage.
the method is also exportable as a sockatmark()function.
data::dumper now has an option to dump code references using  b::deparse.
[561] mac os x (or darwin) should now be able to build perl even on hfs+  filesystems.
o topo enc2xsis a tool for people adding their own encodings to the encode module.
the comparison block is now run in scalar context, and the arguments to be sorted are always provided list context.
[561] chdir(``'')or chdir(undef)instead of explicit chdir()is doubtful.
two new debugging options have been added: if you have compiled your perl with debugging, you can use the -dt
nothing gets installed, but the code is worth studying for extension writers.
this will  create in perl/build/directory a tree of symbolic links pointing to files in  /path/to/perl/source.
[561] the debugger (perl5db.pl) has been modified to present a more consistent commands interface, via (commandset?
better chdir()return value for a non-existent directory.
seethe tie::memoize manpage.
[561] pack() / unpack()can now group template letters with ()and then apply repetition/count modifiers on the groups.
carp was sometimes affected by this problem.
rather than relying on c's argv[0] (which may not contain a full pathname) where possible $^x is now set by asking the operating system.
(well, at least the built-in attributes.) dthr and djsp have been obsoleted; the former removed (because it's a no-op) and the latter replaced with dsp.
file::find is now (again) reentrant.
the magic constants (e.g. 'p') have been macrofied (e.g. perl_magic_tied) for better source code readability and maintainability.
the prototypes are now checked better at compile-time for invalid syntax.
file handles can be marked as accepting perl's internal encoding of unicode (utf-8 or utf-ebcdic depending on platform) by a pseudo layer ``:utf8'' : open($fh,">:utf8","uni.txt");note for ebcdic users: the pseudo layer ``:utf8'' is erroneously named for you since it's not utf-8 what you will be getting but instead utf-ebcdic.
[561] fixed numerous memory leaks, especially in eval ``''.
[561] printing quads (64-bit integers) with printf/sprintf now works without the q l ll prefixes (assuming you are on a quad-capable platform).
localised tied variables no longer leak memory use tie::hash; tie my %tied_hash => 'tie::stdhash'; ... # used to leak memory every time local() was called; # in a loop, this added up.
layers to be applied by default may be specified via the 'open' pragma.
-ilib ext/time/hires/hires.t $foo =
openis a new pragma for setting the default i/o layers for open().
'use lib' now works identically to @inc.
(subroutine and ourvariables still get attributes applied at compile-time.)
you can now  install coderef handlers, 'default', and 'ignore' handlers, installing new  handlers was not atomic.
the leading _is a reminder that these subpragmas may not survive beyond 5.8.
the thread extension is now not built at all under ithreads ( configure -duseithreads) because it wouldn't work anyway (the thread  extension requires being configured with-duse5005threads).
the performance has been improved for common scenarios.
-ux is now supported.
the regex compiler now maintains a structure that identifies nodes in the compiled bytecode with the corresponding syntactic features of the original regex expression.
(it is in  fact a full implementation of sed in perl: you can use the sed functionality by  using thepsed utility.)
turning off ``clrfness'' is no longer enough to make a stream truly binary.
iterative logical name translations are now limited to 10 iterations in imitation of show logical and otheropenvms? facilities.
[561] perltodo has been updated.
xsubpp now understands pod documentation embedded in  the *.xs files.
it can  now deparse almost all of the standard test suite (so that the tests still  succeed).
pod2htmlnow produces xhtml 1.0.
enc2xs is a tool for people adding their own encodings  to the encode module.
sortis a new pragma for controlling the behaviour of sort().
class::struct now assigns the array/hash element if the accessor is  called with an array/hash element as thesole argument.
the command-line options -s and -f are now recognized on the shebang (#!) line.
this is harmless; it is caused by the getnetbyaddr()and getnetbyaddr_r()having slightly different types for their first argument.
seethe threads::shared manpage.
many of these changes have been further developed since 5.6.1 was released, those are marked [561+].
perlcc has been rewritten and its user interface (that  is, command line) is much more like that of the unix c compiler, cc.
perl5db.t was also added  to test the changes, and as a placeholder for further tests.
io::socket::inet failed to open the specified port if the service  name was not known.
[561] xsubppnow supports the out keyword.
devel::peek now has an interface for the perl memory statistics (this works only if you are using perl's malloc, and if you have compiled with debugging).
at the moment only length()has been implemented.
perl 5.6.1 still works foramigaos?
windows fork()emulation is now more robust, but still continues to have a few esoteric bugs and caveats.
note that the above of course is extremely disruptive for anything using the /usr/local/bin/perl.
time::piece(previously known as time::object) was removed because it was felt that it didn't have enough value in it to be a core module.
# "=de=ad=be=ef\n" print $decoded, "\n"; # "\xde\xad\xbe\xef\n"see alsothe perlio ?
class::struct can now define the classes in compile time.
[561] warnings::enabled() now reports the state of $^w correctly if the caller isn't using lexical warnings.
perl 5.6.0 parsed m/\x{ab}/ incorrectly, leading to spurious warnings.
in particular,caller() now returns a subroutine name of(unknown) for subroutines that  have been removed from the symbol table.
perltootc has been renamed as perltooc (to not to conflict with  perltoot in filesystems restricted to ``8.3'' names).
::via manpage and the perlio ?
printf()no longer resets the numeric locale to ``c''.
perltootc has been renamed as perltooc (to not to conflict with perltoot in filesystems restricted to ``8.3'' names).
it can be used to prepend site-specific directories to perl's default search path (@inc); see install for information.
it also correctly changes directories when chasing symbolic links.
seethe perlos390 manpage, the perlbs2000 manpage (for posix-bc),  andthe perlvmesa manpage for more information.
seethe text::balanced manpage.
print "exists!\n" if exists $tied_hash{foo};as a side effect of this fix, tied hash interfacesmust define the exists and delete methods.
because perlio? is now the default on most platforms, ``-perlio''
perl (the undefined symbols used to exist in pre-5.8.0 perls).
guidelines of how to construct minimal perl installations have been  added to install.
you will need a  thread library package installed.
note that the 5.005 threads are unsupported and deprecated: if you  have code written for the old threads you should migrate it to the new ithreads  model.>
h2phnow supports c trigraphs.
o topo myvariables now handled at run-time my expr : attrssyntax now applies variable attributes at run-time.
the constant and embed are probably problems in the tests (since they test perl's ability to build extensions, and that seems to be working reasonably well.)
i18n::langtags, by sean burke, has functions for dealing with rfc3066-style language tags.
if configure finds that gcc was built for a different operating  system release than is running, it now gives a clearly visible warning that  there may be trouble ahead.
sort is a new pragma for controlling the behaviour of  sort().
o topo time()and gettimeofday())return broken values, and therefore in aix 4.2 perl is not linked against libc_r.
it is primarily used by h2xsto enhance portability of xs modules between different versions of perl.
in cloneyou can do whatever you need to do, like for example handle the cloning of non-perl data, if necessary.
its semantics were never that clear and its implementation even less so.
the problem has been corrected.
[561] some ``not a number'' warnings introduced in 5.6.0 eliminated to be more compatible with 5.005.
o topo caller()could cause core dumps in certain situations.
sort()arguments are now compiled in the right wantarray context (they were accidentally using the context of the sort()itself).
the exec listand system listoperations now produce warnings on tainted data and in some future release they will produce fatal errors.
see the perlnetware manpage.
in sdbm_file on dosish platforms, some keys went missing because of lack of support for files with ``holes''.
this will be changed in a future release, but we don't know yet what the new semantics will exactly be.
use text::balanced 'extract_delimited'; ($a, $b) =
perlio::scalar, by nick ing-simmons, provides the implementation of io to ``in memory'' perl scalars as discussed above.
see the sortpragma for information.
test::more, by michael schwern, is yet another  framework for writing test scripts, more extensive than test::simple.
[561+] perldebtut is a perl debugging tutorial.
the information is attached to the new offsetsmember of the struct regexp.
[561] ``our'' variables of the same name declared in two sibling blocks resulted in bogus warnings about ``redeclaration'' of the variables.
hash values output from the algorithm on a hash of all 3-char printable ascii keys comes much closer to passing the diehard random number generation tests.
a new optional location for perl libraries, otherlibdirs, is  available.
layer functionality provided by a class (typically implemented in perl code).
if you run sort { $a  $b } ( 1 .. $n , 1 .. $n );(something you might approximate if you wanted to merge two sorted arrays using sort), doubling $n doesn't just double the quicksort time, itquadruples it.
hash::utilis the interface to the new restricted hashes feature.
these are now handled better.
the gconvert macro ($config{d_gconvert}) used by perl for stringifying floating-point numbers is now more picky about using sprintf %.*g rules for the conversion.
concatenation with the .operator or via variable interpolation, eq, substr, reverse, quotemeta, the xoperator, substitution with s///, single-quoted utf-8, should now work.
(still 16m per thread.)
the obsolete method of making a special (e.g., debugging) flavor of  perl by saying make libperl=libperld.a has been removed.
the warnings are being worked on.
[561] sort() is also fully reentrant, in the sense that the  sort function can itself call sort().
it converts pod data to formatted overstrike text.
removing directories with  'no lib' now works.
localised tied variables no longer leak memory use tie::hash;
it also has been made more  portable.
the debugger can now show lexical variables if you have the cpan  modulepadwalker?
autoloader can now be disabled with no autoloader;.
platform is called perlce  (readme.ce in the source code kit), to avoid confusion with the perlwin32  documentation on 8.3-restricted filesystems.
a number of other properties are now supported, including \p{l&}, \p{any} \p{assigned}, \p{unassigned}, \p{blank}[561] and \p{spaceperl}[561] (along with their \p{...}versions, of course).
for  example, if you reallydon't care about the order of even and odd  digits, quicksort will run ino(n) time; it's very good at sorting  many repetitions of a small number of distinct elements.
the order of destroys has been made more predictable.
libnetcfghas been added to configure libnet.
storable was originally created by raphael manfredi, but it is now maintained by abhijit menon-sen. storable has been enhanced to understand the two new hash features, unicode keys and restricted hashes.
[561] line renumbering with eval and #line now works.
eventually, the problem gets whittled down to one that fits in the  cache, from which point it benefits from the increased memory speed.
beware: microperl makes many assumptions, some of which may be too bold; the resulting executable may crash or otherwise misbehave in wondrous ways.
several debugger fixes: exit code now reflects the script exit code,  condition"0" now treated correctly, the d command now checks line number,$. no longer gets corrupted, and  all debugger output now goes correctly to the socket ifremoteport? is set.
however, if you just want to  sort the even digits ahead of the odd ones, then what will sort { ($a % 2)  ($b % 2) } @digits; yield?
[561] the makefiles now default to the features enabled in activestate?
the very dusty examples in the eg/ directory have been removed.
[561] for perl developers, several new make targets for profiling and  debugging have been added; seethe perlhack manpage.
modulus of unsigned numbers now works (4063328477 % 65535 used to return 27406, instead of 27047).
in addition to extract_delimited(), there are also extract_bracketed(), extract_quotelike(), extract_codeblock(), extract_variable(), extract_tagged(), extract_multiple(), gen_delimited_pat(), and gen_extract_tagged().
[561] configure no longer includes the dbm libraries (dbm, gdbm, db, ndbm)  when building the perl binary.
the story in more detail: suppose you want to serve yourself a little slice of pi.
t/op/lfs............................failed at test 17 t/op/magic..........................failed at test 24 ext/fcntl/t/syslfs..................failed at test 17 ext/file/glob/t/basic...............failed at test 3 ext/posix/t/sigaction...............failed at test 13 ext/posix/t/waitpid.................failed at test 1see the perlbeos manpage (readme.beos) for more details.
just by saying use switch;you have switchand caseavailable in perl.
strtoul()and atof()seem to have bugs
configure -s can now run non-interactively.
unicode::ucdoffers a querying interface to the unicode character database.
[561] changed the posix character class :space:?to include the (very rarely used) vertical tab character.
h2xsnow produces a template readme.
however, if you just want to sort the even digits ahead of the odd ones, then what will sort { ($a % 2)  ($b % 2) } @digits;yield?
you can see the correct behaviour by replacing the 1..5 with 1, 2, 3, 4, 5.
this did not work reliably in previous  releases.
see the sort pragma for information.
if your existing programs depends on the underlying implementation, consider usingthe class::pseudohash manpage from cpan.
lstat(filehandle)now gives a warning because the operation makes no sense.
(previously perl always preferred floating point numbers in its math.)
expr dumps out the value of expr to a depth of at most n levels.
o topo performance enhancements map() could get pathologically slow when the result  list it generates is larger than the source list.
[561] lexicals i: lexicals outside an eval ``'' weren't resolved correctly inside a subroutine definition inside the eval ``'' if they were not already referenced in the top level of the eval``''ed code.
time::hires, by douglas e. wegscheid, provides high resolution timing (ualarm, usleep, and gettimeofday).
eastern asian perl users are now welcomed in their own languages: readme.jp (japanese), readme.ko (korean), readme.cn (simplified chinese) and readme.tw (traditional chinese), which are written in normal pod but encoded in euc-jp, euc-kr, euc-cn and big5.
case 1 { print "number 1" } case "a" { print "string a" } case [1..10,42] { print "number in list" } case (@array) { print "number in list" } case /\w+/ { print "pattern" } case qr/\w+/ { print "pattern" } case (%hash) { print "entry in hash" } case (\%hash) { print "entry in hash" } case (\&sub) { print "arg to subroutine" } else { print "previous case not true" } }see the switch manpage.
so sort { ($a % 2)  ($b % 2) } (3,1,4,1,5,9); will yield  (4,3,1,1,5,9), guaranteed.
devel::peek now has an interface for the perl memory statistics  (this works only if you are using perl's malloc, and if you have compiled with  debugging).
[561] readline()on files opened in ``slurp'' mode could return an extra ``'' (blank line) at the end in certain situations.
several debugger fixes: exit code now reflects the script exit code, condition "0"now treated correctly, the dcommand now checks line number, $.no longer gets corrupted, and all debugger output now goes correctly to the socket ifremoteport? is set.
piconvis an implementation of the character conversion utility iconv, demonstrating the new encode module.
the rules for allowing underscores (underbars) in numeric constants have been relaxed and simplified: now you can have an underscore simply between digits.
seeinstallation and configuration improvements for the effects of perlio?
pod::text::overstrike, by joe smith, has been added.
this algorithm is reasonably fast while producing a much better spread of values than the old hashing algorithm (originally by chris torek, later tweaked by ilya zakharevich).
the main rationale was to have all coreperlio?
note that the new semantics doesn't work with the attribute::handlers module (as of version 0.76).
it also has been made more portable.
$autoload, sort(), lock(), and spawning subprocesses in multiple threads simultaneously are now thread-safe.
layer functionality provided by a class (typically  implemented in perl code).
some platforms that used to use gcvt may now resort to the slower sprintf.
you won't notice this for small arrays, but youwill notice it with larger arrays, and you may not live long enough for the sort to complete on arrays of a million elements.
non-blocking waits for child processes (or pseudo-processes) are supported via waitpid($pid, &posix::wnohang).
updated and improved modules and pragmata the following independently supported modules have been updated to  the newest versions from cpan: cgi, cpan, db_file, file::spec, file::temp,  getopt::long, math::bigfloat, math::bigint, the podlators bundle (pod::man,  pod::text), pod::latex
currently onlyprintf() is tested: how to output  various basic data types from xs.
see install for more details.
odbm_file/odbm.t 255 65280 ?? ??
[561+] perlebcdic contains considerations for running perl on ebcdic  platforms.
perlpodspec is a more formal specification of the pod format, mainly  of interest for writers of pod applications, not to people writing in pod.
locale::constants, locale::country, locale::currency locale::language, and the locale::script manpage, by neil bowers, have been added.
[561] earlier perls treated ``sub foo (@bar)'' as equivalent to ``sub foo (@)''.
note that perlcc is still considered very experimental and unsupported.
fix password routines which in some shadow password platforms (e.g. hp-ux) caused getpwent()to return every other entry.
[561] the behaviour of non-decimal but numeric string constants such as ``0x23'' was platform-dependent: in some platforms that was seen as 35, in some as 0, in some as a floating point number (don't ask).
seethe pod::text::overstrike manpage.
this improvement is only available on vms v6.0 and later.
for example, system("nmake /nologo", @args)will now attempt to run the file nmake /nologoand will fail when such a file isn't found.
\$bar[1]will assign undefto $bar[1](assuming that it didn't exist before), but for tied/magical arrays and hashes such autovivification does not happen because there is currently no way to catch the reference creation.
class::isa, by sean burke, is a module for reporting the search path for a class's isa tree.
but it is skipped for now because the failure is apple's fault, not perl's (blocked signals are lost).
file::find now chdir()s correctly when chasing symbolic links.
linux recvfrom()(in perl: recv()), getpeername(), and getsockname().
support for theuse of /g modifier is meaningless in split>.
in afs installations, one can configure the root of the afs to be  somewhere else than the default/afs by using the configure parameter
the perlio::scalarand perlio::via(capitalised) were renamed as perlio::scalarand perlio::via(all lowercase) just before 5.8.0.
the perl header files no longer suppress common warnings from the microsoft visual c++ compiler.
previously dynix/ptx had problems in its configure probe for non-blocking i/o. epoc epoc now better supported.
therestricted hashes interface is expected to be the replacement interface (seethe hash::util manpage).
seethe attributes manpage for additional details.
xs::apitest, by tim jenness, is a test extension that  exercises xs apis.
with the quicksort algorithm used to implement perl 5.6 and  earlier, the order of ties is left up to the sort.
[561+] perlpacktut is a pack() tutorial.
the previous behaviour of ignoring them by default and warning if requested was unacceptable since it, in a way, falsely promised that the features could be used.
if you  run sort { $a  $b } ( 1 .. $n , 1 .. $n ); (something you  might approximate if you wanted to merge two sorted arrays using sort),  doubling $n doesn't just double the quicksort time, itquadruples it.
the latter is an article about software localization, originally published in the perl journal #13, and republished here with kind permission.
see  the threads manpage, the threads::shared manpage, and the perlthrtut manpage.
seethe devel::ppport manpage.
seethe list::util manpage.
in future releases this may become a fatal error.
[561] new %env entries now propagate to subprocesses.
a failure (think chdir(some_function())can lead into unintended chdir()to the home directory, therefore this behaviour is deprecated.
* perl now works on post-3.0 freebsds? .
in addition to config.over, a new override file, config.arch, is  available.
with embedded spaces didn't work.
::makemaker now uses file::spec internally, which hopefully leads to better portability.
chomp()and chop()are now overridable.
[561] less stack reserved per thread so that more threads can run concurrently.
see the perldebguts manpage for more complete information.
perluniintro is an introduction to using unicode in perl.
perl 5.6.0 could emit spurious warnings about redefinition of dl_error()when statically building extensions into perl.
caller() could cause core dumps in certain situations.
quicksort has a worst case run time that can grow like n**2, so-called quadratic behaviour, and it can happen on patterns that may well arise in  normal use.
use locale::country; $country = code2country('jp'); # $country gets 'japan' $code = country2code('norway'); # $code gets 'no'see the locale::constants manpage, the locale::country manpage, the locale::currency manpage, and the locale::language manpage.
printf()and sprintf()now support parameter reordering using the %\d+\$and *\d+\$syntaxes.
filter::simple, by damian conway, is an easy-to-use frontend to filter::util::call.
seethe time::hires manpage .
there is a new killimplementation based on sys$sigprcthat allows older vms systems (pre-7.0) to use killto send signals rather than simply force exit.
package mypack; use attribute::handlers; sub wolf :attr(scalar) { print "howl!\n" } # later, in some package using or inheriting from mypack... my mypack $fluffy : wolf; # the attribute handler wolf will be calledboth variables and routines can have attribute handlers.
with the quicksort algorithm used to implement perl 5.6 and earlier, the order of ties is left up to the sort.
hashes now use bob jenkins ``one-at-a-time'' hashing key algorithm (  http://burtleburtle.net/bob/hash/doobs.html ).
you can set the environment variable perl_test_net_ping  to ``1'' (one) before running the perl test suite to enable all the net::ping  tests.
you won't notice this for small arrays, but youwill notice  it with larger arrays, and you may not live long enough for the sort to  complete on arrays of a million elements.
specific patches (except for the installation  specific ones) have been merged back to the main distribution.
note for code authors: if you want to enable your users to use utf-8 as their default encoding but in your code still have eight-bit i/o streams (such as images or zip files), you need to explicitly open()or binmode()with :bytes(see open in the perlfunc manpage and binmode in the perlfunc manpage), or you can just use binmode(fh)(nice for pre-5.8.0 backward compatibility).
see ``new unicode properties'' earlier in this document for additional information on changes with unicode properties.
seethe math::bigrat manpage.
io::socket::inet now supports a value of zero for localport (usually meaning that the operating system will make one up.)
pod2html now allows specifying a cache directory.
[561+] scalar::utilis a selection of general-utility scalar subroutines, such as blessed(), reftype(), and tainted().
the vars pragma now supports declaring fully qualified variables.
o topo map()could get pathologically slow when the result list it generates is larger than the source list.
this is not selected by default, however, you must  specify -dusedl in the arguments of configure.
(it is in fact a full implementation of sed in perl: you can use the sed functionality by using the psedutility.)
using sortin scalar context now issues an optional warning.
db_file now supports newer berkeley db versions, among other improvements.
this means that additional warnings may now show up when compiling xs code.
the fieldspragma interface will remain available.
[561] file::find now has pre- and post-processing callbacks.
this is not a substitute for -t.>
(the perlbc tools has been removed.
[561+] right-hand side magic (gmagic) could in many cases such as string concatenation be invoked too many times.
you can ignore the error, but it does cause a slight problem: you cannot fully benefit from the h2ph utility (seethe h2ph manpage) that can be used to convert c headers to perl libraries, mainly used to be able to access from perl the constants defined using c preprocessor, cpp.
after configure has finished, you can just say make all testand perl will be built and tested, all in perl/build/directory.
(basically what happens is that competing threads can corrupt shared global state, one good example being regular expression engine's state.)
(crash)and a few lib/extutils tests, and several hundred encode/t/aliases.t failures that work fine with long filenames.
unshift()should now be noticeably faster.
new or improved platforms for the list of platforms known to  support perl, seesupported platforms in the perlport manpage.
a new variable, ${^taint}, indicates whether taint mode is enabled.
c'' will tell you the vac version.
tie::refhash::nestable, by edward avis, allows storing  hash references (unlike the standard tie::refhash)
unicode::collate, by sadahiro tomoyuki, implements the uca (unicode collation algorithm) for sorting unicode strings.
handlers can be specific to type (scalar, array, hash, or code), or specific to the exact compilation phase (begin, check, init, or end).
clonewill be executed once for every package that has it defined or inherited.
in particular binmode(fh)- and hence :raw- will now turn off both crlf and utf-8 translation and remove other layers (e.g. :encoding()) which would modify byte stream.
class::struct now assigns the array/hash element if the accessor is called with an array/hash element as thesole argument.